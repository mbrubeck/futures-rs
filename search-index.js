var N = null;var searchIndex = {};
searchIndex["either"]={"doc":"The enum [`Either`] with variants `Left` and `Right` is a general purpose sum type with two cases.","items":[[4,"Either","either","The enum `Either` with variants `Left` and `Right` is a general purpose sum type with two cases.",N,N],[13,"Left","","A value of type `L`.",0,N],[13,"Right","","A value of type `R`.",0,N],[11,"clone","","",0,[[["self"]],["either"]]],[11,"eq","","",0,[[["self"],["either"]],["bool"]]],[11,"ne","","",0,[[["self"],["either"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["either"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["either"]],["bool"]]],[11,"le","","",0,[[["self"],["either"]],["bool"]]],[11,"gt","","",0,[[["self"],["either"]],["bool"]]],[11,"ge","","",0,[[["self"],["either"]],["bool"]]],[11,"cmp","","",0,[[["self"],["either"]],["ordering"]]],[11,"hash","","",0,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"is_left","","Return true if the value is the `Left` variant.",0,[[["self"]],["bool"]]],[11,"is_right","","Return true if the value is the `Right` variant.",0,[[["self"]],["bool"]]],[11,"left","","Convert the left side of `Either<L, R>` to an `Option<L>`.",0,[[["self"]],["option"]]],[11,"right","","Convert the right side of `Either<L, R>` to an `Option<R>`.",0,[[["self"]],["option"]]],[11,"as_ref","","Convert `&Either<L, R>` to `Either<&L, &R>`.",0,[[["self"]],["either"]]],[11,"as_mut","","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",0,[[["self"]],["either"]]],[11,"flip","","Convert `Either<L, R>` to `Either<R, L>`.",0,[[["self"]],["either"]]],[11,"map_left","","Apply the function `f` on the value in the `Left` variant if it is present rewrapping the result in `Left`.",0,[[["self"],["f"]],["either"]]],[11,"map_right","","Apply the function `f` on the value in the `Right` variant if it is present rewrapping the result in `Right`.",0,[[["self"],["f"]],["either"]]],[11,"either","","Apply one of two functions depending on contents, unifying their result. If the value is `Left(L)` then the first function `f` is applied; if it is `Right(R)` then the second function `g` is applied.",0,[[["self"],["f"],["g"]],["t"]]],[11,"either_with","","Like `either`, but provide some context to whichever of the functions ends up being called.",0,[[["self"],["ctx"],["f"],["g"]],["t"]]],[11,"left_and_then","","Apply the function `f` on the value in the `Left` variant if it is present.",0,[[["self"],["f"]],["either"]]],[11,"right_and_then","","Apply the function `f` on the value in the `Right` variant if it is present.",0,[[["self"],["f"]],["either"]]],[11,"into_iter","","Convert the inner value to an iterator.",0,[[["self"]],["either"]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",0,N],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",0,N],[11,"into_inner","","Extract the value of an either over two equivalent types.",0,[[["self"]],["t"]]],[11,"from","","",0,[[["result"]],["self"]]],[11,"into","","",0,[[["self"]],["result"]]],[11,"extend","","",0,[[["self"],["t"]]]],[11,"next","","",0,[[["self"]],["option"]]],[11,"size_hint","","",0,N],[11,"fold","","",0,[[["self"],["acc"],["g"]],["acc"]]],[11,"count","","",0,[[["self"]],["usize"]]],[11,"last","","",0,[[["self"]],["option"]]],[11,"nth","","",0,[[["self"],["usize"]],["option"]]],[11,"collect","","",0,[[["self"]],["b"]]],[11,"all","","",0,[[["self"],["f"]],["bool"]]],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"read","","",0,N],[11,"read_to_end","","",0,[[["self"],["vec"]],["result",["usize"]]]],[11,"fill_buf","","",0,[[["self"]],["result"]]],[11,"consume","","",0,[[["self"],["usize"]]]],[11,"write","","",0,N],[11,"flush","","",0,[[["self"]],["result"]]],[11,"as_ref","","",0,[[["self"]],["target"]]],[11,"as_mut","","",0,[[["self"]],["target"]]],[11,"deref","","",0,N],[11,"deref_mut","","",0,N],[11,"description","","",0,[[["self"]],["str"]]],[11,"cause","","",0,[[["self"]],["option",["error"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[14,"try_left","","Macro for unwrapping the left side of an `Either`, which fails early with the opposite side. Can only be used in functions that return `Either` because of the early return of `Right` that it provides.",N,N],[14,"try_right","","Dual to `try_left!`, see its documentation for more information.",N,N]],"paths":[[4,"Either"]]};
searchIndex["futures"]={"doc":"Abstractions for asynchronous programming.","items":[[0,"channel","futures","Cross-task communication.",N,N],[0,"oneshot","futures::channel","A channel for sending a single message between asynchronous tasks.",N,N],[3,"Receiver","futures::channel::oneshot","A future for a value that will be provided by another asynchronous task.",N,N],[3,"Sender","","A means of transmitting a single value to another task.",N,N],[5,"channel","","Creates a new one-shot channel for sending values across asynchronous tasks.",N,N],[3,"Canceled","","Error returned from a `Receiver` when the corresponding `Sender` is dropped.",N,N],[0,"mpsc","futures::channel","A multi-producer, single-consumer queue for sending values across asynchronous tasks.",N,N],[3,"Sender","futures::channel::mpsc","The transmission end of a bounded mpsc channel.",N,N],[3,"UnboundedSender","","The transmission end of an unbounded mpsc channel.",N,N],[3,"Receiver","","The receiving end of a bounded mpsc channel.",N,N],[3,"UnboundedReceiver","","The receiving end of an unbounded mpsc channel.",N,N],[3,"SendError","","The error type for `Sender`s used as `Sink`s.",N,N],[3,"TrySendError","","The error type returned from `try_send`.",N,N],[3,"TryRecvError","","The error type returned from `try_next`.",N,N],[5,"channel","","Creates a bounded mpsc channel for communicating between asynchronous tasks.",N,N],[5,"unbounded","","Creates an unbounded mpsc channel for communicating between asynchronous tasks.",N,N],[0,"executor","futures","Task execution.",N,N],[3,"BlockingStream","futures::executor","An iterator which blocks on values from a stream until they become available.",N,N],[3,"Enter","","Represents an executor context.",N,N],[3,"EnterError","","An error returned by `enter` if an execution scope has already been entered.",N,N],[3,"LocalExecutor","","A handle to a `LocalPool` that implements `Executor`.",N,N],[3,"LocalPool","","A single-threaded task pool.",N,N],[3,"Spawn","","A future representing the completion of task spawning.",N,N],[3,"SpawnWithHandle","","A future representing the completion of task spawning, yielding a `JoinHandle` to the spawned task.",N,N],[3,"ThreadPool","","A general-purpose thread pool for scheduling asynchronous tasks.",N,N],[3,"ThreadPoolBuilder","","Thread pool configuration object.",N,N],[3,"JoinHandle","","The type of future returned from the `ThreadPool::spawn` function, which proxies the futures running on the thread pool.",N,N],[5,"block_on","","Run a future to completion on the current thread.",N,N],[5,"block_on_stream","","Turn a stream into a blocking iterator.",N,[[["s"]],["blockingstream"]]],[5,"enter","","Marks the current thread as being within the dynamic extent of an executor.",N,[[],["result",["enter","entererror"]]]],[5,"spawn","","Spawn a task onto the default executor.",N,[[["f"]],["spawn"]]],[5,"spawn_with_handle","","Spawn a task onto the default executor, yielding a `JoinHandle` to the spawned task.",N,[[["f"]],["spawnwithhandle"]]],[0,"future","futures","Asynchronous values.",N,N],[8,"Future","futures::future","A future represents an asychronous computation.",N,N],[16,"Output","","The result of the `Future`.",0,N],[10,"poll","","Attempt to resolve the future to a final value, registering the current task for wakeup if the value is not yet available.",0,[[["pinmut"],["context"]],["poll"]]],[8,"TryFuture","","A convenience for futures that return `Result` values that includes a variety of adapters tailored to such futures.",N,N],[16,"Item","","The type of successful values yielded by this future",1,N],[16,"Error","","The type of failures yielded by this future",1,N],[10,"try_poll","","Poll this `TryFuture` as if it were a `Future`.",1,[[["pinmut"],["context"]],["poll",["result"]]]],[3,"FutureObj","","A custom trait object for polling futures, roughly akin to `Box<dyn Future<Output = T> + Send + 'a>`.",N,N],[3,"LocalFutureObj","","A custom trait object for polling futures, roughly akin to `Box<dyn Future<Output = T> + 'a>`.",N,N],[8,"UnsafeFutureObj","","A custom implementation of a future trait object for `FutureObj`, providing a hand-rolled vtable.",N,N],[10,"into_raw","","Convert an owned instance into a (conceptually owned) void pointer.",2,N],[10,"poll","","Poll the future represented by the given void pointer.",2,N],[10,"drop","","Drops the future represented by the given void pointer.",2,N],[5,"empty","","Creates a future which never resolves, representing a computation that never finishes.",N,[[],["empty"]]],[3,"Empty","","A future which is never resolved.",N,N],[5,"lazy","","Creates a new future from a closure.",N,[[["f"]],["lazy"]]],[3,"Lazy","","A future which, when polled, invokes a closure and yields its result.",N,N],[5,"maybe_done","","Creates a new future from a closure.",N,[[["fut"]],["maybedone"]]],[4,"MaybeDone","","`MaybeDone`, a future that may have completed.",N,N],[13,"Future","","A not-yet-completed future",3,N],[13,"Done","","The output of the completed future",3,N],[13,"Gone","","The empty variant after the result of a `maybe_done` has been taken using the `take_output` method.",3,N],[5,"poll_fn","","Creates a new future wrapping around a function returning `Poll`.",N,[[["f"]],["pollfn"]]],[3,"PollFn","","A future which adapts a function returning `Poll`.",N,N],[5,"ready","","Create a future that is immediately ready with a value.",N,[[["t"]],["ready"]]],[3,"Ready","","A future that is immediately ready with a value",N,N],[3,"OptionFuture","","A future representing a value which may or may not be present.",N,N],[8,"FutureExt","","An extension trait for `Future`s that provides a variety of convenient adapters.",N,N],[11,"map","","Map this future's result to a different type, returning a new future of the resulting type.",4,[[["self"],["f"]],["map"]]],[11,"then","","Chain on a computation for when a future finished, passing the result of the future to the provided closure `f`.",4,[[["self"],["f"]],["then"]]],[11,"join","","Joins the result of two futures, waiting for them both to complete.",4,[[["self"],["fut2"]],["join"]]],[11,"join3","","Same as `join`, but with more futures.",4,[[["self"],["fut2"],["fut3"]],["join3"]]],[11,"join4","","Same as `join`, but with more futures.",4,[[["self"],["fut2"],["fut3"],["fut4"]],["join4"]]],[11,"join5","","Same as `join`, but with more futures.",4,[[["self"],["fut2"],["fut3"],["fut4"],["fut5"]],["join5"]]],[11,"into_stream","","Convert this future into a single element stream.",4,[[["self"]],["intostream"]]],[11,"flatten","","Flatten the execution of this future when the successful result of this future is itself another future.",4,[[["self"]],["flatten"]]],[11,"flatten_stream","","Flatten the execution of this future when the successful result of this future is a stream.",4,[[["self"]],["flattenstream"]]],[11,"fuse","","Fuse a future such that `poll` will never again be called once it has completed.",4,[[["self"]],["fuse"]]],[11,"inspect","","Do something with the output of a future before passing it on.",4,[[["self"],["f"]],["inspect"]]],[11,"catch_unwind","","Catches unwinding panics while polling the future.",4,[[["self"]],["catchunwind"]]],[11,"shared","","Create a cloneable handle to this future where all handles will resolve to the same result.",4,[[["self"]],["shared"]]],[11,"with_executor","","Assigns the provided `Executor` to be used when spawning tasks from within the future.",4,[[["self"],["e"]],["withexecutor"]]],[11,"poll_unpin","","A convenience for calling `Future::poll` on `Unpin` future types.",4,[[["self"],["context"]],["poll"]]],[3,"FlattenStream","","Future for the `flatten_stream` combinator, flattening a future-of-a-stream to get just the result of the final stream as a stream.",N,N],[3,"Flatten","","Future for the `flatten` combinator.",N,N],[3,"Fuse","","A future which \"fuses\" a future once it's been resolved.",N,N],[3,"Inspect","","Do something with the item of a future, passing it on.",N,N],[3,"IntoStream","","A type which converts a `Future` into a `Stream` containing a single element.",N,N],[3,"Join","","Future for the `join` combinator, waiting for two futures to complete.",N,N],[3,"Join3","","Future for the `join3` combinator, waiting for three futures to complete.",N,N],[3,"Join4","","Future for the `join4` combinator, waiting for four futures to complete.",N,N],[3,"Join5","","Future for the `join5` combinator, waiting for five futures to complete.",N,N],[3,"Map","","Future for the `map` combinator, changing the type of a future.",N,N],[3,"Then","","Future for the `then` combinator, chaining computations on the end of another future regardless of its outcome.",N,N],[3,"WithExecutor","","Future for the `with_executor` combinator, assigning an executor to be used when spawning other futures.",N,N],[3,"CatchUnwind","","Future for the `catch_unwind` combinator.",N,N],[3,"Shared","","A future that is cloneable and can be polled in multiple threads. Use `Future::shared()` method to convert any future into a `Shared` future.",N,N],[8,"TryFutureExt","","Adapters specific to `Result`-returning futures",N,N],[11,"flatten_sink","","Flatten the execution of this future when the successful result of this future is a sink.",5,[[["self"]],["flattensink"]]],[11,"map_ok","","Map this future's result to a different type, returning a new future of the resulting type.",5,[[["self"],["f"]],["mapok"]]],[11,"map_err","","Map this future's error to a different error, returning a new future.",5,[[["self"],["f"]],["maperr"]]],[11,"err_into","","Map this future's error to a new error type using the `Into` trait.",5,[[["self"]],["errinto"]]],[11,"and_then","","Execute another future after this one has resolved successfully.",5,[[["self"],["f"]],["andthen"]]],[11,"or_else","","Execute another future if this one resolves with an error.",5,[[["self"],["f"]],["orelse"]]],[11,"unwrap_or_else","","Handle errors generated by this future by converting them into `Self::Item`.",5,[[["self"],["f"]],["unwraporelse"]]],[11,"into_future","","Wraps a `TryFuture` so that it implements `Future`. `TryFuture`s currently do not implement the `Future` trait due to limitations of the compiler.",5,[[["self"]],["intofuture"]]],[3,"AndThen","","Future for the `and_then` combinator, chaining a computation onto the end of another future which completes successfully.",N,N],[3,"ErrInto","","Future for the `err_into` combinator, changing the error type of a future.",N,N],[3,"FlattenSink","","Future for the `flatten_sink` combinator, flattening a future-of-a-sink to get just the result of the final sink as a sink.",N,N],[3,"IntoFuture","","Converts a `TryFuture` into a normal `Future`",N,N],[3,"MapErr","","Future for the `map_err` combinator, changing the type of a future.",N,N],[3,"MapOk","","Future for the `map_ok` combinator, changing the type of a future.",N,N],[3,"OrElse","","Future for the `or_else` combinator, chaining a computation onto the end of a future which fails with an error.",N,N],[3,"UnwrapOrElse","","Future for the `unwrap_or_else` combinator. It unwraps the result, returning the content of the `Ok` as `Output` or if the value is an `Err` then it calls `op` with its value.",N,N],[0,"io","futures","Asynchronous I/O.",N,N],[3,"Error","futures::io","The error type for I/O operations of the [`Read`], [`Write`], [`Seek`], and associated traits.",N,N],[3,"Initializer","","A type used to conditionally initialize buffers passed to `AsyncRead` methods, modeled after `std`.",N,N],[3,"IoVec","","A specialized byte slice type for performing vectored I/O operations.",N,N],[4,"ErrorKind","","A list specifying general categories of I/O error.",N,N],[13,"NotFound","","An entity was not found, often a file.",6,N],[13,"PermissionDenied","","The operation lacked the necessary privileges to complete.",6,N],[13,"ConnectionRefused","","The connection was refused by the remote server.",6,N],[13,"ConnectionReset","","The connection was reset by the remote server.",6,N],[13,"ConnectionAborted","","The connection was aborted (terminated) by the remote server.",6,N],[13,"NotConnected","","The network operation failed because it was not connected yet.",6,N],[13,"AddrInUse","","A socket address could not be bound because the address is already in use elsewhere.",6,N],[13,"AddrNotAvailable","","A nonexistent interface was requested or the requested address was not local.",6,N],[13,"BrokenPipe","","The operation failed because a pipe was closed.",6,N],[13,"AlreadyExists","","An entity already exists, often a file.",6,N],[13,"WouldBlock","","The operation needs to block to complete, but the blocking operation was requested to not occur.",6,N],[13,"InvalidInput","","A parameter was incorrect.",6,N],[13,"InvalidData","","Data not valid for the operation were encountered.",6,N],[13,"TimedOut","","The I/O operation's timeout expired, causing it to be canceled.",6,N],[13,"WriteZero","","An error returned when an operation could not be completed because a call to [`write`] returned [`Ok(0)`].",6,N],[13,"Interrupted","","This operation was interrupted.",6,N],[13,"Other","","Any I/O error not part of this list.",6,N],[13,"UnexpectedEof","","An error returned when an operation could not be completed because an \"end of file\" was reached prematurely.",6,N],[8,"AsyncRead","","Read bytes asynchronously.",N,N],[11,"initializer","","Determines if this `AsyncRead`er can work with buffers of uninitialized memory.",7,[[["self"]],["initializer"]]],[10,"poll_read","","Attempt to read from the `AsyncRead` into `buf`.",7,N],[11,"poll_vectored_read","","Attempt to read from the `AsyncRead` into `vec` using vectored IO operations.",7,N],[8,"AsyncWrite","","Write bytes asynchronously.",N,N],[10,"poll_write","","Attempt to write bytes from `buf` into the object.",8,N],[11,"poll_vectored_write","","Attempt to write bytes from `vec` into the object using vectored IO operations.",8,N],[10,"poll_flush","","Attempt to flush the object, ensuring that any buffered data reach their destination.",8,[[["self"],["context"]],["poll",["result"]]]],[10,"poll_close","","Attempt to close the object.",8,[[["self"],["context"]],["poll",["result"]]]],[6,"Result","","A specialized `Result` type for I/O operations.",N,N],[8,"AsyncReadExt","","An extension trait which adds utility methods to `AsyncRead` types.",N,N],[11,"copy_into","","Creates a future which copies all the bytes from one object to another.",9,[[["self"],["w"]],["copyinto"]]],[11,"read","","Tries to read some bytes directly into the given `buf` in asynchronous manner, returning a future type.",9,N],[11,"read_exact","","Creates a future which will read exactly enough bytes to fill `buf`, returning an error if EOF is hit sooner.",9,N],[11,"read_to_end","","Creates a future which will read all the bytes from this `AsyncRead`.",9,[[["self"],["vec"]],["readtoend"]]],[11,"split","","Helper method for splitting this read/write object into two halves.",9,N],[8,"AsyncWriteExt","","An extension trait which adds utility methods to `AsyncWrite` types.",N,N],[11,"flush","","Creates a future which will entirely flush this `AsyncWrite`.",10,[[["self"]],["flush"]]],[11,"close","","Creates a future which will entirely close this `AsyncWrite`.",10,[[["self"]],["close"]]],[11,"write_all","","Write data into this object.",10,N],[3,"AllowStdIo","","A simple wrapper type which allows types which implement only implement `std::io::Read` or `std::io::Write` to be used in contexts which expect an `AsyncRead` or `AsyncWrite`.",N,N],[3,"Close","","A future used to fully close an I/O object.",N,N],[3,"CopyInto","","A future which will copy all data from a reader into a writer.",N,N],[3,"Flush","","A future used to fully flush an I/O object.",N,N],[3,"Read","","A future which can be used to easily read available number of bytes to fill a buffer.",N,N],[3,"ReadExact","","A future which can be used to easily read exactly enough bytes to fill a buffer.",N,N],[3,"ReadHalf","","The readable half of an object returned from `AsyncRead::split`.",N,N],[3,"ReadToEnd","","A future which can be used to easily read the entire contents of a stream into a vector.",N,N],[3,"Window","","A owned window around an underlying buffer.",N,N],[3,"WriteAll","","A future used to write the entire contents of some data to a stream.",N,N],[3,"WriteHalf","","The writable half of an object returned from `AsyncRead::split`.",N,N],[0,"prelude","futures","A \"prelude\" for crates using the `futures` crate.",N,N],[8,"Future","futures::prelude","A future represents an asychronous computation.",N,N],[16,"Output","","The result of the `Future`.",0,N],[10,"poll","","Attempt to resolve the future to a final value, registering the current task for wakeup if the value is not yet available.",0,[[["pinmut"],["context"]],["poll"]]],[8,"TryFuture","","A convenience for futures that return `Result` values that includes a variety of adapters tailored to such futures.",N,N],[16,"Item","","The type of successful values yielded by this future",1,N],[16,"Error","","The type of failures yielded by this future",1,N],[10,"try_poll","","Poll this `TryFuture` as if it were a `Future`.",1,[[["pinmut"],["context"]],["poll",["result"]]]],[8,"Stream","","A stream of values produced asynchronously.",N,N],[16,"Item","","Values yielded by the stream.",11,N],[10,"poll_next","","Attempt to pull out the next value of this stream, registering the current task for wakeup if the value is not yet available, and returning `None` if the stream is exhausted.",11,[[["pinmut"],["context"]],["poll",["option"]]]],[11,"poll_next_unpin","","A convenience for calling `Stream::poll_next` on `Unpin` stream types.",11,[[["self"],["context"]],["poll",["option"]]]],[8,"TryStream","","A convenience for streams that return `Result` values that includes a variety of adapters tailored to such futures.",N,N],[16,"TryItem","","The type of successful values yielded by this future",12,N],[16,"TryError","","The type of failures yielded by this future",12,N],[10,"try_poll_next","","Poll this `TryStream` as if it were a `Stream`.",12,[[["pinmut"],["context"]],["poll",["option"]]]],[0,"task","","Task notification.",N,N],[8,"Executor","futures::prelude::task","A task executor.",N,N],[10,"spawn_obj","","Spawn the given task, polling it until completion.",13,[[["self"],["futureobj"]],["result",["spawnobjerror"]]]],[11,"status","","Determine whether the executor is able to spawn new tasks.",13,[[["self"]],["result",["spawnerrorkind"]]]],[5,"local_waker_from_nonlocal","","Creates a `LocalWaker` from a non-local `wake`.",N,[[["arc"]],["localwaker"]]],[3,"Context","","Information about the currently-running task.",N,N],[5,"local_waker","","Creates a `LocalWaker` from a local `wake`.",N,[[["arc"]],["localwaker"]]],[8,"Wake","","A way of waking up a specific task.",N,N],[10,"wake","","Indicates that the associated task is ready to make progress and should be `poll`ed.",14,N],[11,"wake_local","","Indicates that the associated task is ready to make progress and should be `poll`ed. This function is like `wake`, but can only be called from the thread on which this `Wake` was created.",14,N],[3,"SpawnObjError","","The result of a failed spawn",N,N],[12,"kind","","The kind of error",15,N],[12,"task","","The task for which spawning was attempted",15,N],[3,"LocalWaker","","A `LocalWaker` is a handle for waking up a task by notifying its executor that it is ready to be run.",N,N],[4,"Poll","","Indicates whether a value is available or if the current task has been scheduled to receive a wakeup instead.",N,N],[13,"Ready","","Represents that a value is immediately ready.",16,N],[13,"Pending","","Represents that a value is not ready yet.",16,N],[3,"SpawnErrorKind","","Provides the reason that an executor was unable to spawn.",N,N],[3,"SpawnLocalObjError","","The result of a failed spawn",N,N],[12,"kind","","The kind of error",17,N],[12,"task","","The task for which spawning was attempted",17,N],[3,"Waker","","A `Waker` is a handle for waking up a task by notifying its executor that it is ready to be run.",N,N],[8,"UnsafeWake","","An unsafe trait for implementing custom memory management for a `Waker` or `LocalWaker`.",N,N],[10,"clone_raw","","Creates a clone of this `UnsafeWake` and stores it behind a `Waker`.",18,[[["self"]],["waker"]]],[10,"drop_raw","","Drops this instance of `UnsafeWake`, deallocating resources associated with it.",18,N],[10,"wake","","Indicates that the associated task is ready to make progress and should be `poll`ed.",18,N],[11,"wake_local","","Indicates that the associated task is ready to make progress and should be `poll`ed. This function is the same as `wake`, but can only be called from the thread that this `UnsafeWake` is \"local\" to. This allows for implementors to provide specialized wakeup behavior specific to the current thread. This function is called by `LocalWaker::wake`.",18,N],[4,"Poll","futures::prelude","Indicates whether a value is available or if the current task has been scheduled to receive a wakeup instead.",N,N],[13,"Ready","","Represents that a value is immediately ready.",16,N],[13,"Pending","","Represents that a value is not ready yet.",16,N],[8,"Sink","","A `Sink` is a value into which other values can be sent, asynchronously.",N,N],[16,"SinkItem","","The type of value that the sink accepts.",19,N],[16,"SinkError","","The type of value produced by the sink when an error occurs.",19,N],[10,"poll_ready","","Attempts to prepare the `Sink` to receive a value.",19,[[["pinmut"],["context"]],["poll",["result"]]]],[10,"start_send","","Begin the process of sending a value to the sink. Each call to this function must be proceeded by a successful call to `poll_ready` which returned `Ok(Poll::Ready(()))`.",19,N],[10,"poll_flush","","Flush any remaining output from this sink.",19,[[["pinmut"],["context"]],["poll",["result"]]]],[10,"poll_close","","Flush any remaining output and close this sink, if necessary.",19,[[["pinmut"],["context"]],["poll",["result"]]]],[8,"AsyncRead","","Read bytes asynchronously.",N,N],[11,"initializer","","Determines if this `AsyncRead`er can work with buffers of uninitialized memory.",7,[[["self"]],["initializer"]]],[10,"poll_read","","Attempt to read from the `AsyncRead` into `buf`.",7,N],[11,"poll_vectored_read","","Attempt to read from the `AsyncRead` into `vec` using vectored IO operations.",7,N],[8,"AsyncWrite","","Write bytes asynchronously.",N,N],[10,"poll_write","","Attempt to write bytes from `buf` into the object.",8,N],[11,"poll_vectored_write","","Attempt to write bytes from `vec` into the object using vectored IO operations.",8,N],[10,"poll_flush","","Attempt to flush the object, ensuring that any buffered data reach their destination.",8,[[["self"],["context"]],["poll",["result"]]]],[10,"poll_close","","Attempt to close the object.",8,[[["self"],["context"]],["poll",["result"]]]],[8,"FutureExt","","An extension trait for `Future`s that provides a variety of convenient adapters.",N,N],[11,"map","","Map this future's result to a different type, returning a new future of the resulting type.",4,[[["self"],["f"]],["map"]]],[11,"then","","Chain on a computation for when a future finished, passing the result of the future to the provided closure `f`.",4,[[["self"],["f"]],["then"]]],[11,"join","","Joins the result of two futures, waiting for them both to complete.",4,[[["self"],["fut2"]],["join"]]],[11,"join3","","Same as `join`, but with more futures.",4,[[["self"],["fut2"],["fut3"]],["join3"]]],[11,"join4","","Same as `join`, but with more futures.",4,[[["self"],["fut2"],["fut3"],["fut4"]],["join4"]]],[11,"join5","","Same as `join`, but with more futures.",4,[[["self"],["fut2"],["fut3"],["fut4"],["fut5"]],["join5"]]],[11,"into_stream","","Convert this future into a single element stream.",4,[[["self"]],["intostream"]]],[11,"flatten","","Flatten the execution of this future when the successful result of this future is itself another future.",4,[[["self"]],["flatten"]]],[11,"flatten_stream","","Flatten the execution of this future when the successful result of this future is a stream.",4,[[["self"]],["flattenstream"]]],[11,"fuse","","Fuse a future such that `poll` will never again be called once it has completed.",4,[[["self"]],["fuse"]]],[11,"inspect","","Do something with the output of a future before passing it on.",4,[[["self"],["f"]],["inspect"]]],[11,"catch_unwind","","Catches unwinding panics while polling the future.",4,[[["self"]],["catchunwind"]]],[11,"shared","","Create a cloneable handle to this future where all handles will resolve to the same result.",4,[[["self"]],["shared"]]],[11,"with_executor","","Assigns the provided `Executor` to be used when spawning tasks from within the future.",4,[[["self"],["e"]],["withexecutor"]]],[11,"poll_unpin","","A convenience for calling `Future::poll` on `Unpin` future types.",4,[[["self"],["context"]],["poll"]]],[8,"TryFutureExt","","Adapters specific to `Result`-returning futures",N,N],[11,"flatten_sink","","Flatten the execution of this future when the successful result of this future is a sink.",5,[[["self"]],["flattensink"]]],[11,"map_ok","","Map this future's result to a different type, returning a new future of the resulting type.",5,[[["self"],["f"]],["mapok"]]],[11,"map_err","","Map this future's error to a different error, returning a new future.",5,[[["self"],["f"]],["maperr"]]],[11,"err_into","","Map this future's error to a new error type using the `Into` trait.",5,[[["self"]],["errinto"]]],[11,"and_then","","Execute another future after this one has resolved successfully.",5,[[["self"],["f"]],["andthen"]]],[11,"or_else","","Execute another future if this one resolves with an error.",5,[[["self"],["f"]],["orelse"]]],[11,"unwrap_or_else","","Handle errors generated by this future by converting them into `Self::Item`.",5,[[["self"],["f"]],["unwraporelse"]]],[11,"into_future","","Wraps a `TryFuture` so that it implements `Future`. `TryFuture`s currently do not implement the `Future` trait due to limitations of the compiler.",5,[[["self"]],["intofuture"]]],[8,"StreamExt","","An extension trait for `Stream`s that provides a variety of convenient combinator functions.",N,N],[11,"next","","Creates a future that resolves to the next element in the stream.",20,[[["self"]],["next"]]],[11,"into_future","","Converts this stream into a `Future` of `(next_item, tail_of_stream)`. If the stream terminates, then the next item is `None`.",20,[[["self"]],["streamfuture"]]],[11,"map","","Converts a stream of type `T` to a stream of type `U`.",20,[[["self"],["f"]],["map"]]],[11,"filter","","Filters the values produced by this stream according to the provided predicate.",20,[[["self"],["p"]],["filter"]]],[11,"filter_map","","Filters the values produced by this stream while simultaneously mapping them to a different type.",20,[[["self"],["f"]],["filtermap"]]],[11,"then","","Chain on a computation for when a value is ready, passing the resulting item to the provided closure `f`.",20,[[["self"],["f"]],["then"]]],[11,"collect","","Collect all of the values of this stream into a vector, returning a future representing the result of that computation.",20,[[["self"]],["collect"]]],[11,"concat","","Concatenate all results of a stream into a single extendable destination, returning a future representing the end result.",20,[[["self"]],["concat"]]],[11,"fold","","Execute an accumulating computation over a stream, collecting all the values into one final result.",20,[[["self"],["t"],["f"]],["fold"]]],[11,"flatten","","Flattens a stream of streams into just one continuous stream.",20,[[["self"]],["flatten"]]],[11,"skip_while","","Skip elements on this stream while the predicate provided resolves to `true`.",20,[[["self"],["p"]],["skipwhile"]]],[11,"take_while","","Take elements from this stream while the predicate provided resolves to `true`.",20,[[["self"],["p"]],["takewhile"]]],[11,"for_each","","Runs this stream to completion, executing the provided closure for each element on the stream.",20,[[["self"],["f"]],["foreach"]]],[11,"take","","Creates a new stream of at most `amt` items of the underlying stream.",20,[[["self"],["u64"]],["take"]]],[11,"skip","","Creates a new stream which skips `amt` items of the underlying stream.",20,[[["self"],["u64"]],["skip"]]],[11,"fuse","","Fuse a stream such that `poll_next` will never again be called once it has finished.",20,[[["self"]],["fuse"]]],[11,"by_ref","","Borrows a stream, rather than consuming it.",20,[[["self"]],["self"]]],[11,"catch_unwind","","Catches unwinding panics while polling the stream.",20,[[["self"]],["catchunwind"]]],[11,"buffered","","An adaptor for creating a buffered list of pending futures.",20,[[["self"],["usize"]],["buffered"]]],[11,"buffer_unordered","","An adaptor for creating a buffered list of pending futures (unordered).",20,[[["self"],["usize"]],["bufferunordered"]]],[11,"zip","","An adapter for zipping two streams together.",20,[[["self"],["s"]],["zip"]]],[11,"chain","","Adapter for chaining two stream.",20,[[["self"],["s"]],["chain"]]],[11,"peekable","","Creates a new stream which exposes a `peek` method.",20,[[["self"]],["peekable"]]],[11,"chunks","","An adaptor for chunking up items of the stream inside a vector.",20,[[["self"],["usize"]],["chunks"]]],[11,"select","","Creates a stream that selects the next element from either this stream or the provided one, whichever is ready first.",20,[[["self"],["s"]],["select"]]],[11,"forward","","A future that completes after the given stream has been fully processed into the sink, including flushing.",20,[[["self"],["s"]],["forward"]]],[11,"split","","Splits this `Stream + Sink` object into separate `Stream` and `Sink` objects.",20,N],[11,"inspect","","Do something with each item of this stream, afterwards passing it on.",20,[[["self"],["f"]],["inspect"]]],[11,"left_stream","","Wrap this stream in an `Either` stream, making it the left-hand variant of that `Either`.",20,[[["self"]],["either"]]],[11,"right_stream","","Wrap this stream in an `Either` stream, making it the right-hand variant of that `Either`.",20,[[["self"]],["either"]]],[8,"TryStreamExt","","Adapters specific to `Result`-returning streams",N,N],[11,"try_collect","","Attempt to Collect all of the values of this stream into a vector, returning a future representing the result of that computation.",21,[[["self"]],["trycollect"]]],[8,"SinkExt","","An extension trait for `Sink`s that provides a variety of convenient combinator functions.",N,N],[11,"with","","Composes a function in front of the sink.",22,[[["self"],["f"]],["with"]]],[11,"with_flat_map","","Composes a function in front of the sink.",22,[[["self"],["f"]],["withflatmap"]]],[11,"sink_map_err","","Transforms the error returned by the sink.",22,[[["self"],["f"]],["sinkmaperr"]]],[11,"sink_err_into","","Map this sink's error to a different error type using the `Into` trait.",22,[[["self"]],["sinkerrinto"]]],[11,"buffer","","Adds a fixed-size buffer to the current sink.",22,[[["self"],["usize"]],["buffer"]]],[11,"close","","Close the sink.",22,[[["self"]],["close"]]],[11,"fanout","","Fanout items to multiple sinks.",22,[[["self"],["s"]],["fanout"]]],[11,"flush","","Flush the sync, processing all pending items.",22,[[["self"]],["flush"]]],[11,"send","","A future that completes after the given item has been fully processed into the sink, including flushing.",22,N],[11,"send_all","","A future that completes after the given stream has been fully processed into the sink, including flushing.",22,[[["self"],["s"]],["sendall"]]],[11,"left_sink","","Wrap this sink in an `Either` sink, making it the left-hand variant of that `Either`.",22,[[["self"]],["either"]]],[11,"right_sink","","Wrap this stream in an `Either` stream, making it the right-hand variant of that `Either`.",22,[[["self"]],["either"]]],[8,"AsyncReadExt","","An extension trait which adds utility methods to `AsyncRead` types.",N,N],[11,"copy_into","","Creates a future which copies all the bytes from one object to another.",9,[[["self"],["w"]],["copyinto"]]],[11,"read","","Tries to read some bytes directly into the given `buf` in asynchronous manner, returning a future type.",9,N],[11,"read_exact","","Creates a future which will read exactly enough bytes to fill `buf`, returning an error if EOF is hit sooner.",9,N],[11,"read_to_end","","Creates a future which will read all the bytes from this `AsyncRead`.",9,[[["self"],["vec"]],["readtoend"]]],[11,"split","","Helper method for splitting this read/write object into two halves.",9,N],[8,"AsyncWriteExt","","An extension trait which adds utility methods to `AsyncWrite` types.",N,N],[11,"flush","","Creates a future which will entirely flush this `AsyncWrite`.",10,[[["self"]],["flush"]]],[11,"close","","Creates a future which will entirely close this `AsyncWrite`.",10,[[["self"]],["close"]]],[11,"write_all","","Write data into this object.",10,N],[0,"sink","futures","Asynchronous sinks.",N,N],[8,"Sink","futures::sink","A `Sink` is a value into which other values can be sent, asynchronously.",N,N],[16,"SinkItem","","The type of value that the sink accepts.",19,N],[16,"SinkError","","The type of value produced by the sink when an error occurs.",19,N],[10,"poll_ready","","Attempts to prepare the `Sink` to receive a value.",19,[[["pinmut"],["context"]],["poll",["result"]]]],[10,"start_send","","Begin the process of sending a value to the sink. Each call to this function must be proceeded by a successful call to `poll_ready` which returned `Ok(Poll::Ready(()))`.",19,N],[10,"poll_flush","","Flush any remaining output from this sink.",19,[[["pinmut"],["context"]],["poll",["result"]]]],[10,"poll_close","","Flush any remaining output and close this sink, if necessary.",19,[[["pinmut"],["context"]],["poll",["result"]]]],[3,"Close","","Future for the `close` combinator, which polls the sink until all data has been closed.",N,N],[3,"Flush","","Future for the `flush` combinator, which polls the sink until all data has been flushed.",N,N],[3,"Send","","Future for the `Sink::send` combinator, which sends a value to a sink and then waits until the sink has fully flushed.",N,N],[3,"SendAll","","Future for the `Sink::send_all` combinator, which sends a stream of values to a sink and then waits until the sink has fully flushed those values.",N,N],[3,"SinkErrInto","","A sink combinator to change the error type of a sink.",N,N],[3,"SinkMapErr","","Sink for the `Sink::sink_map_err` combinator.",N,N],[3,"With","","Sink for the `Sink::with` combinator, chaining a computation to run prior to pushing a value into the underlying sink.",N,N],[8,"SinkExt","","An extension trait for `Sink`s that provides a variety of convenient combinator functions.",N,N],[11,"with","","Composes a function in front of the sink.",22,[[["self"],["f"]],["with"]]],[11,"with_flat_map","","Composes a function in front of the sink.",22,[[["self"],["f"]],["withflatmap"]]],[11,"sink_map_err","","Transforms the error returned by the sink.",22,[[["self"],["f"]],["sinkmaperr"]]],[11,"sink_err_into","","Map this sink's error to a different error type using the `Into` trait.",22,[[["self"]],["sinkerrinto"]]],[11,"buffer","","Adds a fixed-size buffer to the current sink.",22,[[["self"],["usize"]],["buffer"]]],[11,"close","","Close the sink.",22,[[["self"]],["close"]]],[11,"fanout","","Fanout items to multiple sinks.",22,[[["self"],["s"]],["fanout"]]],[11,"flush","","Flush the sync, processing all pending items.",22,[[["self"]],["flush"]]],[11,"send","","A future that completes after the given item has been fully processed into the sink, including flushing.",22,N],[11,"send_all","","A future that completes after the given stream has been fully processed into the sink, including flushing.",22,[[["self"],["s"]],["sendall"]]],[11,"left_sink","","Wrap this sink in an `Either` sink, making it the left-hand variant of that `Either`.",22,[[["self"]],["either"]]],[11,"right_sink","","Wrap this stream in an `Either` stream, making it the right-hand variant of that `Either`.",22,[[["self"]],["either"]]],[3,"Fanout","","Sink that clones incoming items and forwards them to two sinks at the same time.",N,N],[3,"Buffer","","Sink for the `Sink::buffer` combinator, which buffers up to some fixed number of values when the underlying sink is unable to accept them.",N,N],[0,"stream","futures","Asynchronous streams.",N,N],[8,"Stream","futures::stream","A stream of values produced asynchronously.",N,N],[16,"Item","","Values yielded by the stream.",11,N],[10,"poll_next","","Attempt to pull out the next value of this stream, registering the current task for wakeup if the value is not yet available, and returning `None` if the stream is exhausted.",11,[[["pinmut"],["context"]],["poll",["option"]]]],[11,"poll_next_unpin","","A convenience for calling `Stream::poll_next` on `Unpin` stream types.",11,[[["self"],["context"]],["poll",["option"]]]],[8,"TryStream","","A convenience for streams that return `Result` values that includes a variety of adapters tailored to such futures.",N,N],[16,"TryItem","","The type of successful values yielded by this future",12,N],[16,"TryError","","The type of failures yielded by this future",12,N],[10,"try_poll_next","","Poll this `TryStream` as if it were a `Stream`.",12,[[["pinmut"],["context"]],["poll",["option"]]]],[5,"iter","","Converts an `Iterator` into a `Stream` which is always ready to yield the next value.",N,[[["i"]],["iter"]]],[3,"Iter","","A stream which is just a shim over an underlying instance of `Iterator`.",N,N],[5,"repeat","","Create a stream which produces the same item repeatedly.",N,[[["t"]],["repeat"]]],[3,"Repeat","","Stream that produces the same element repeatedly.",N,N],[5,"empty","","Creates a stream which contains no elements.",N,[[],["empty"]]],[3,"Empty","","A stream which contains no elements.",N,N],[5,"once","","Creates a stream of single element",N,[[["f"]],["once"]]],[3,"Once","","A stream which emits single element and then EOF.",N,N],[5,"poll_fn","","Creates a new stream wrapping around a function returning `Poll`.",N,[[["f"]],["pollfn"]]],[3,"PollFn","","A stream which adapts a function returning `Poll`.",N,N],[5,"unfold","","Creates a `Stream` from a seed and a closure returning a `Future`.",N,[[["t"],["f"]],["unfold"]]],[3,"Unfold","","A stream which creates futures, polls them and return their result",N,N],[8,"StreamExt","","An extension trait for `Stream`s that provides a variety of convenient combinator functions.",N,N],[11,"next","","Creates a future that resolves to the next element in the stream.",20,[[["self"]],["next"]]],[11,"into_future","","Converts this stream into a `Future` of `(next_item, tail_of_stream)`. If the stream terminates, then the next item is `None`.",20,[[["self"]],["streamfuture"]]],[11,"map","","Converts a stream of type `T` to a stream of type `U`.",20,[[["self"],["f"]],["map"]]],[11,"filter","","Filters the values produced by this stream according to the provided predicate.",20,[[["self"],["p"]],["filter"]]],[11,"filter_map","","Filters the values produced by this stream while simultaneously mapping them to a different type.",20,[[["self"],["f"]],["filtermap"]]],[11,"then","","Chain on a computation for when a value is ready, passing the resulting item to the provided closure `f`.",20,[[["self"],["f"]],["then"]]],[11,"collect","","Collect all of the values of this stream into a vector, returning a future representing the result of that computation.",20,[[["self"]],["collect"]]],[11,"concat","","Concatenate all results of a stream into a single extendable destination, returning a future representing the end result.",20,[[["self"]],["concat"]]],[11,"fold","","Execute an accumulating computation over a stream, collecting all the values into one final result.",20,[[["self"],["t"],["f"]],["fold"]]],[11,"flatten","","Flattens a stream of streams into just one continuous stream.",20,[[["self"]],["flatten"]]],[11,"skip_while","","Skip elements on this stream while the predicate provided resolves to `true`.",20,[[["self"],["p"]],["skipwhile"]]],[11,"take_while","","Take elements from this stream while the predicate provided resolves to `true`.",20,[[["self"],["p"]],["takewhile"]]],[11,"for_each","","Runs this stream to completion, executing the provided closure for each element on the stream.",20,[[["self"],["f"]],["foreach"]]],[11,"take","","Creates a new stream of at most `amt` items of the underlying stream.",20,[[["self"],["u64"]],["take"]]],[11,"skip","","Creates a new stream which skips `amt` items of the underlying stream.",20,[[["self"],["u64"]],["skip"]]],[11,"fuse","","Fuse a stream such that `poll_next` will never again be called once it has finished.",20,[[["self"]],["fuse"]]],[11,"by_ref","","Borrows a stream, rather than consuming it.",20,[[["self"]],["self"]]],[11,"catch_unwind","","Catches unwinding panics while polling the stream.",20,[[["self"]],["catchunwind"]]],[11,"buffered","","An adaptor for creating a buffered list of pending futures.",20,[[["self"],["usize"]],["buffered"]]],[11,"buffer_unordered","","An adaptor for creating a buffered list of pending futures (unordered).",20,[[["self"],["usize"]],["bufferunordered"]]],[11,"zip","","An adapter for zipping two streams together.",20,[[["self"],["s"]],["zip"]]],[11,"chain","","Adapter for chaining two stream.",20,[[["self"],["s"]],["chain"]]],[11,"peekable","","Creates a new stream which exposes a `peek` method.",20,[[["self"]],["peekable"]]],[11,"chunks","","An adaptor for chunking up items of the stream inside a vector.",20,[[["self"],["usize"]],["chunks"]]],[11,"select","","Creates a stream that selects the next element from either this stream or the provided one, whichever is ready first.",20,[[["self"],["s"]],["select"]]],[11,"forward","","A future that completes after the given stream has been fully processed into the sink, including flushing.",20,[[["self"],["s"]],["forward"]]],[11,"split","","Splits this `Stream + Sink` object into separate `Stream` and `Sink` objects.",20,N],[11,"inspect","","Do something with each item of this stream, afterwards passing it on.",20,[[["self"],["f"]],["inspect"]]],[11,"left_stream","","Wrap this stream in an `Either` stream, making it the left-hand variant of that `Either`.",20,[[["self"]],["either"]]],[11,"right_stream","","Wrap this stream in an `Either` stream, making it the right-hand variant of that `Either`.",20,[[["self"]],["either"]]],[3,"Chain","","An adapter for chaining the output of two streams.",N,N],[3,"Concat","","A stream combinator to concatenate the results of a stream into the first yielded item.",N,N],[3,"Filter","","A stream combinator used to filter the results of a stream and only yield some values.",N,N],[3,"FilterMap","","A combinator used to filter the results of a stream and simultaneously map them to a different type.",N,N],[3,"Flatten","","A combinator used to flatten a stream-of-streams into one long stream of elements.",N,N],[3,"Fold","","A future used to collect all the results of a stream into one generic type.",N,N],[3,"Forward","","Future for the `Stream::forward` combinator, which sends a stream of values to a sink and then flushes the sink.",N,N],[3,"ForEach","","A stream combinator which executes a unit closure over each item on a stream.",N,N],[3,"Fuse","","A stream which \"fuse\"s a stream once it's terminated.",N,N],[3,"StreamFuture","","A combinator used to temporarily convert a stream into a future.",N,N],[3,"Inspect","","Do something with the items of a stream, passing it on.",N,N],[3,"Map","","A stream combinator which will change the type of a stream from one type to another.",N,N],[3,"Next","","A future of the next element of a stream.",N,N],[3,"Peekable","","A `Stream` that implements a `peek` method.",N,N],[3,"Select","","An adapter for merging the output of two streams.",N,N],[3,"Skip","","A stream combinator which skips a number of elements before continuing.",N,N],[3,"SkipWhile","","A stream combinator which skips elements of a stream while a predicate holds.",N,N],[3,"Take","","A stream combinator which returns a maximum number of elements.",N,N],[3,"TakeWhile","","A stream combinator which takes elements from a stream while a predicate holds.",N,N],[3,"Then","","A stream combinator which chains a computation onto each item produced by a stream.",N,N],[3,"Zip","","An adapter for merging the output of two streams.",N,N],[5,"futures_ordered","","Converts a list of futures into a `Stream` of results from the futures.",N,[[["i"]],["futuresordered"]]],[3,"FuturesOrdered","","An unbounded queue of futures.",N,N],[5,"futures_unordered","","Converts a list of futures into a `Stream` of results from the futures.",N,[[["i"]],["futuresunordered"]]],[3,"FuturesUnordered","","A set of `Future`s which may complete in any order.",N,N],[3,"BufferUnordered","","An adaptor for a stream of futures to execute the futures concurrently, if possible, delivering results as they become available.",N,N],[3,"Buffered","","An adaptor for a stream of futures to execute the futures concurrently, if possible.",N,N],[3,"CatchUnwind","","Stream for the `catch_unwind` combinator.",N,N],[3,"Chunks","","An adaptor that chunks up elements in a vector.",N,N],[3,"Collect","","A future which collects all of the values of a stream into a vector.",N,N],[3,"SplitStream","","A `Stream` part of the split pair",N,N],[3,"SplitSink","","A `Sink` part of the split pair",N,N],[3,"ReuniteError","","Error indicating a `SplitSink<S>` and `SplitStream<S>` were not two halves of a `Stream + Split`, and thus could not be `reunite`d.",N,N],[12,"0","","",23,N],[12,"1","","",23,N],[3,"TryCollect","","A future which attempts to collect all of the values of a stream.",N,N],[0,"task","futures","Tools for working with tasks.",N,N],[3,"Context","futures::task","Information about the currently-running task.",N,N],[4,"Poll","","Indicates whether a value is available or if the current task has been scheduled to receive a wakeup instead.",N,N],[13,"Ready","","Represents that a value is immediately ready.",16,N],[13,"Pending","","Represents that a value is not ready yet.",16,N],[8,"Executor","","A task executor.",N,N],[10,"spawn_obj","","Spawn the given task, polling it until completion.",13,[[["self"],["futureobj"]],["result",["spawnobjerror"]]]],[11,"status","","Determine whether the executor is able to spawn new tasks.",13,[[["self"]],["result",["spawnerrorkind"]]]],[3,"Waker","","A `Waker` is a handle for waking up a task by notifying its executor that it is ready to be run.",N,N],[3,"LocalWaker","","A `LocalWaker` is a handle for waking up a task by notifying its executor that it is ready to be run.",N,N],[8,"UnsafeWake","","An unsafe trait for implementing custom memory management for a `Waker` or `LocalWaker`.",N,N],[10,"clone_raw","","Creates a clone of this `UnsafeWake` and stores it behind a `Waker`.",18,[[["self"]],["waker"]]],[10,"drop_raw","","Drops this instance of `UnsafeWake`, deallocating resources associated with it.",18,N],[10,"wake","","Indicates that the associated task is ready to make progress and should be `poll`ed.",18,N],[11,"wake_local","","Indicates that the associated task is ready to make progress and should be `poll`ed. This function is the same as `wake`, but can only be called from the thread that this `UnsafeWake` is \"local\" to. This allows for implementors to provide specialized wakeup behavior specific to the current thread. This function is called by `LocalWaker::wake`.",18,N],[3,"SpawnErrorKind","","Provides the reason that an executor was unable to spawn.",N,N],[3,"SpawnObjError","","The result of a failed spawn",N,N],[12,"kind","","The kind of error",15,N],[12,"task","","The task for which spawning was attempted",15,N],[3,"SpawnLocalObjError","","The result of a failed spawn",N,N],[12,"kind","","The kind of error",17,N],[12,"task","","The task for which spawning was attempted",17,N],[8,"ContextExt","","Extension trait for `Context`, adding methods that require allocation.",N,N],[10,"spawn","","Spawn a future onto the default executor.",24,N],[3,"AtomicWaker","","A synchronization primitive for task wakeup.",N,N],[8,"Wake","","A way of waking up a specific task.",N,N],[10,"wake","","Indicates that the associated task is ready to make progress and should be `poll`ed.",14,N],[11,"wake_local","","Indicates that the associated task is ready to make progress and should be `poll`ed. This function is like `wake`, but can only be called from the thread on which this `Wake` was created.",14,N],[5,"local_waker","","Creates a `LocalWaker` from a local `wake`.",N,[[["arc"]],["localwaker"]]],[5,"local_waker_from_nonlocal","","Creates a `LocalWaker` from a non-local `wake`.",N,[[["arc"]],["localwaker"]]],[14,"unsafe_pinned","futures","A pinned projection of a struct field.",N,N],[14,"unsafe_unpinned","","An unpinned projection of a struct field.",N,N],[14,"pin_mut","","Pins a value on the stack.",N,N],[14,"try_ready","","Extracts the successful type of a `Poll<Result<T, E>>`.",N,N],[14,"try_poll","","Extracts `Poll<T>` from `Poll<Result<T, E>>`.",N,N],[14,"ready","","Extracts the successful type of a `Poll<T>`.",N,N],[11,"close","futures::channel::oneshot","Gracefully close this receiver, preventing any subsequent attempts to send to it.",25,N],[11,"try_recv","","Attempts to receive a message outside of the context of a task.",25,[[["self"]],["result",["option","canceled"]]]],[11,"from","futures::task","",26,[[["localwaker"]],["waker"]]],[11,"from","futures::future","",27,[[["futureobj"]],["localfutureobj"]]],[11,"from","futures::task","",16,[[["t"]],["poll"]]],[11,"cmp","","",16,[[["self"],["poll"]],["ordering"]]],[11,"drop","","",26,N],[11,"drop","futures::future","",27,N],[11,"drop","futures::task","",28,N],[11,"eq","","",16,[[["self"],["poll"]],["bool"]]],[11,"ne","","",16,[[["self"],["poll"]],["bool"]]],[11,"hash","","",16,N],[11,"clone","","",28,[[["self"]],["localwaker"]]],[11,"clone","","",16,[[["self"]],["poll"]]],[11,"clone","","",26,[[["self"]],["waker"]]],[11,"partial_cmp","","",16,[[["self"],["poll"]],["option",["ordering"]]]],[11,"lt","","",16,[[["self"],["poll"]],["bool"]]],[11,"le","","",16,[[["self"],["poll"]],["bool"]]],[11,"gt","","",16,[[["self"],["poll"]],["bool"]]],[11,"ge","","",16,[[["self"],["poll"]],["bool"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::future","",27,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::task","",29,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::future","",30,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::task","",31,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result",["error"]]]],[11,"poll","futures::future","",30,[[["pinmut",["futureobj"]],["context"]],["poll"]]],[11,"poll","","",27,[[["pinmut",["localfutureobj"]],["context"]],["poll"]]],[11,"poll_ready","","",32,[[["pinmut",["flattensink"]],["context"]],["poll",["result"]]]],[11,"start_send","","",32,N],[11,"poll_flush","","",32,[[["pinmut",["flattensink"]],["context"]],["poll",["result"]]]],[11,"poll_close","","",32,[[["pinmut",["flattensink"]],["context"]],["poll",["result"]]]],[11,"poll_ready","futures::sink","",33,[[["pinmut",["fanout"]],["context"]],["poll",["result"]]]],[11,"start_send","","",33,N],[11,"poll_flush","","",33,[[["pinmut",["fanout"]],["context"]],["poll",["result"]]]],[11,"poll_close","","",33,[[["pinmut",["fanout"]],["context"]],["poll",["result"]]]],[11,"poll_ready","","",34,[[["pinmut",["sinkmaperr"]],["context"]],["poll",["result"]]]],[11,"start_send","","",34,N],[11,"poll_flush","","",34,[[["pinmut",["sinkmaperr"]],["context"]],["poll",["result"]]]],[11,"poll_close","","",34,[[["pinmut",["sinkmaperr"]],["context"]],["poll",["result"]]]],[11,"poll_ready","futures::stream","",35,[[["pinmut",["buffered"]],["context"]],["poll",["result"]]]],[11,"start_send","","",35,N],[11,"poll_flush","","",35,[[["pinmut",["buffered"]],["context"]],["poll",["result"]]]],[11,"poll_close","","",35,[[["pinmut",["buffered"]],["context"]],["poll",["result"]]]],[11,"poll_ready","","",36,[[["pinmut",["fuse"]],["context"]],["poll",["result"]]]],[11,"start_send","","",36,N],[11,"poll_flush","","",36,[[["pinmut",["fuse"]],["context"]],["poll",["result"]]]],[11,"poll_close","","",36,[[["pinmut",["fuse"]],["context"]],["poll",["result"]]]],[11,"poll_ready","futures::sink","",37,[[["pinmut",["sinkerrinto"]],["context"]],["poll",["result"]]]],[11,"start_send","","",37,N],[11,"poll_flush","","",37,[[["pinmut",["sinkerrinto"]],["context"]],["poll",["result"]]]],[11,"poll_close","","",37,[[["pinmut",["sinkerrinto"]],["context"]],["poll",["result"]]]],[11,"poll_ready","futures::stream","",38,[[["pinmut",["bufferunordered"]],["context"]],["poll",["result"]]]],[11,"start_send","","",38,N],[11,"poll_flush","","",38,[[["pinmut",["bufferunordered"]],["context"]],["poll",["result"]]]],[11,"poll_close","","",38,[[["pinmut",["bufferunordered"]],["context"]],["poll",["result"]]]],[11,"poll_ready","futures::sink","",39,[[["pinmut",["buffer"]],["context"]],["poll",["result"]]]],[11,"start_send","","",39,N],[11,"poll_flush","","",39,[[["pinmut",["buffer"]],["context"]],["poll",["result"]]]],[11,"poll_close","","",39,[[["pinmut",["buffer"]],["context"]],["poll",["result"]]]],[11,"poll_ready","futures::stream","",40,[[["pinmut",["splitsink"]],["context"]],["poll",["result"]]]],[11,"start_send","","",40,N],[11,"poll_flush","","",40,[[["pinmut",["splitsink"]],["context"]],["poll",["result"]]]],[11,"poll_close","","",40,[[["pinmut",["splitsink"]],["context"]],["poll",["result"]]]],[11,"poll_ready","futures::sink","",41,[[["pinmut",["with"]],["context"]],["poll",["result"]]]],[11,"start_send","","",41,N],[11,"poll_flush","","",41,[[["pinmut",["with"]],["context"]],["poll",["result"]]]],[11,"poll_close","","",41,[[["pinmut",["with"]],["context"]],["poll",["result"]]]],[11,"read","futures::io","",42,N],[11,"read_to_end","","",42,[[["self"],["vec"]],["result",["usize","error"]]]],[11,"read_to_string","","",42,[[["self"],["string"]],["result",["usize","error"]]]],[11,"read_exact","","",42,N],[11,"clone","","",42,[[["self"]],["allowstdio"]]],[11,"clone","futures::future","",43,[[["self"]],["ready"]]],[11,"clone","","",44,[[["self"]],["shared"]]],[11,"clone","","",45,[[["self"]],["optionfuture"]]],[11,"cmp","futures::io","",42,[[["self"],["allowstdio"]],["ordering"]]],[11,"default","futures::task","",46,[[],["atomicwaker"]]],[11,"default","futures::stream","",47,[[],["futuresunordered"]]],[11,"default","","",48,[[],["futuresordered"]]],[11,"poll_write","futures::io","",49,N],[11,"poll_vectored_write","","",49,N],[11,"poll_flush","","",49,[[["self"],["context"]],["poll",["result"]]]],[11,"poll_close","","",49,[[["self"],["context"]],["poll",["result"]]]],[11,"poll_write","","",42,N],[11,"poll_flush","","",42,[[["self"],["context"]],["poll",["result"]]]],[11,"poll_close","","",42,[[["self"],["context"]],["poll",["result"]]]],[11,"poll","futures::future","",50,[[["pinmut",["catchunwind"]],["context"]],["poll"]]],[11,"poll","futures::stream","",51,[[["pinmut",["forward"]],["context"]],["poll"]]],[11,"poll","futures::future","",52,[[["pinmut",["lazy"]],["context"]],["poll"]]],[11,"poll","","",53,[[["pinmut",["join3"]],["context"]],["poll"]]],[11,"poll","","",54,[[["pinmut",["flatten"]],["context"]],["poll"]]],[11,"poll","","",55,[[["pinmut",["errinto"]],["context"]],["poll"]]],[11,"poll","","",56,[[["pinmut",["inspect"]],["context"]],["poll"]]],[11,"poll","futures::io","",57,[[["pinmut",["readexact"]],["context"]],["poll"]]],[11,"poll","futures::stream","",58,[[["pinmut",["next"]],["context"]],["poll"]]],[11,"poll","futures::future","",45,[[["pinmut",["optionfuture"]],["context"]],["poll"]]],[11,"poll","futures::stream","",59,[[["pinmut",["trycollect"]],["context"]],["poll"]]],[11,"poll","futures::io","",60,[[["pinmut",["read"]],["context"]],["poll"]]],[11,"poll","","",61,[[["pinmut",["copyinto"]],["context"]],["poll"]]],[11,"poll","futures::future","",62,[[["pinmut",["fuse"]],["context"]],["poll"]]],[11,"poll","","",63,[[["pinmut",["orelse"]],["context"]],["poll"]]],[11,"poll","futures::stream","",64,[[["pinmut",["concat"]],["context"]],["poll"]]],[11,"poll","futures::io","",65,[[["pinmut",["flush"]],["context"]],["poll"]]],[11,"poll","futures::future","",66,[[["pinmut",["empty"]],["context"]],["poll"]]],[11,"poll","","",67,[[["pinmut",["maperr"]],["context"]],["poll"]]],[11,"poll","futures::stream","",68,[[["pinmut",["foreach"]],["context"]],["poll"]]],[11,"poll","futures::future","",43,[[["pinmut",["ready"]],["context"]],["poll"]]],[11,"poll","","",69,[[["pinmut",["join5"]],["context"]],["poll"]]],[11,"poll","futures::sink","",70,[[["pinmut",["close"]],["context"]],["poll"]]],[11,"poll","futures::future","",71,[[["pinmut",["join"]],["context"]],["poll"]]],[11,"poll","","",3,[[["pinmut",["maybedone"]],["context"]],["poll"]]],[11,"poll","","",72,[[["pinmut",["pollfn"]],["context"]],["poll"]]],[11,"poll","","",73,[[["pinmut",["unwraporelse"]],["context"]],["poll"]]],[11,"poll","","",74,[[["pinmut",["map"]],["context"]],["poll"]]],[11,"poll","futures::sink","",75,[[["pinmut",["flush"]],["context"]],["poll"]]],[11,"poll","","",76,[[["pinmut",["send"]],["context"]],["poll"]]],[11,"poll","futures::io","",77,[[["pinmut",["writeall"]],["context"]],["poll",["result"]]]],[11,"poll","","",78,[[["pinmut",["close"]],["context"]],["poll"]]],[11,"poll","futures::stream","",79,[[["pinmut",["fold"]],["context"]],["poll"]]],[11,"poll","futures::future","",80,[[["pinmut",["join4"]],["context"]],["poll"]]],[11,"poll","","",81,[[["pinmut",["withexecutor"]],["context"]],["poll"]]],[11,"poll","futures::io","",82,[[["pinmut",["readtoend"]],["context"]],["poll"]]],[11,"poll","futures::future","",83,[[["pinmut",["andthen"]],["context"]],["poll"]]],[11,"poll","futures::stream","",84,[[["pinmut",["streamfuture"]],["context"]],["poll"]]],[11,"poll","futures::future","",85,[[["pinmut",["then"]],["context"]],["poll"]]],[11,"poll","","",44,[[["pinmut",["shared"]],["context"]],["poll"]]],[11,"poll","","",86,[[["pinmut",["mapok"]],["context"]],["poll"]]],[11,"poll","futures::stream","",87,[[["pinmut",["collect"]],["context"]],["poll"]]],[11,"poll","futures::sink","",88,[[["pinmut",["sendall"]],["context"]],["poll"]]],[11,"poll","futures::future","",89,[[["pinmut",["intofuture"]],["context"]],["poll"]]],[11,"drop","futures::stream","",47,N],[11,"drop","futures::future","",44,N],[11,"write","futures::io","",42,N],[11,"flush","","",42,[[["self"]],["result",["error"]]]],[11,"write_all","","",42,N],[11,"write_fmt","","",42,[[["self"],["arguments"]],["result",["error"]]]],[11,"as_mut","","",90,N],[11,"fmt","futures::sink","",33,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::future","",72,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",80,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::stream","",91,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::sink","",75,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::future","",92,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::stream","",93,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::io","",94,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::stream","",95,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::io","",77,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::future","",66,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",69,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::stream","",96,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",97,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::io","",90,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::stream","",23,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::future","",52,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::sink","",41,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::io","",82,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::future","",50,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::stream","",98,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::io","",57,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::stream","",99,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",68,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::future","",62,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::io","",61,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::stream","",38,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::future","",43,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::stream","",100,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::task","",46,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::stream","",51,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",101,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::sink","",70,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",76,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::stream","",47,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::io","",60,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::stream","",102,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",103,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",104,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",105,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::future","",63,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::sink","",37,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::stream","",40,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::io","",42,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::stream","",36,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::future","",89,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::stream","",106,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::sink","",39,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::future","",81,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",73,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::stream","",107,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::future","",53,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",74,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::stream","",59,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::future","",67,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::stream","",79,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",108,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",109,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",110,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::future","",86,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::stream","",64,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",112,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",113,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::sink","",88,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::future","",71,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::stream","",114,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",115,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::sink","",34,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::io","",49,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::stream","",116,[[["self"],["formatter"]],["result",["error"]]]],[11,"from_iter","","",48,[[["t"]],["futuresordered"]]],[11,"from_iter","","",47,[[["t"]],["futuresunordered"]]],[11,"spawn","futures::task","",31,N],[11,"partial_cmp","futures::io","",42,[[["self"],["allowstdio"]],["option",["ordering"]]]],[11,"lt","","",42,[[["self"],["allowstdio"]],["bool"]]],[11,"le","","",42,[[["self"],["allowstdio"]],["bool"]]],[11,"gt","","",42,[[["self"],["allowstdio"]],["bool"]]],[11,"ge","","",42,[[["self"],["allowstdio"]],["bool"]]],[11,"from","futures::future","",45,[[["option"]],["optionfuture"]]],[11,"hash","futures::io","",42,N],[11,"description","futures::stream","",23,[[["self"]],["str"]]],[11,"eq","futures::io","",42,[[["self"],["allowstdio"]],["bool"]]],[11,"ne","","",42,[[["self"],["allowstdio"]],["bool"]]],[11,"as_ref","","",90,N],[11,"poll_read","","",42,N],[11,"poll_read","","",94,N],[11,"poll_vectored_read","","",94,N],[11,"poll_next","futures::stream","",100,[[["pinmut",["flatten"]],["context"]],["poll",["option"]]]],[11,"poll_next","","",95,[[["pinmut",["inspect"]],["context"]],["poll",["option"]]]],[11,"poll_next","","",102,[[["pinmut",["takewhile"]],["context"]],["poll",["option"]]]],[11,"poll_next","","",99,[[["pinmut",["chain"]],["context"]],["poll",["option"]]]],[11,"poll_next","","",36,[[["pinmut",["fuse"]],["context"]],["poll",["option"]]]],[11,"poll_next","","",106,[[["pinmut",["repeat"]],["context"]],["poll",["option"]]]],[11,"poll_next","","",114,[[["pinmut",["iter"]],["context"]],["poll",["option"]]]],[11,"poll_next","","",35,[[["pinmut",["buffered"]],["context"]],["poll",["option"]]]],[11,"poll_next","","",109,[[["pinmut",["catchunwind"]],["context"]],["poll",["option"]]]],[11,"poll_next","","",101,[[["pinmut",["skip"]],["context"]],["poll",["option"]]]],[11,"poll_next","","",93,[[["pinmut",["skipwhile"]],["context"]],["poll",["option"]]]],[11,"poll_next","futures::future","",111,[[["pinmut",["intostream"]],["context"]],["poll",["option"]]]],[11,"poll_next","futures::sink","",37,[[["pinmut",["sinkerrinto"]],["context"]],["poll",["option"]]]],[11,"poll_next","futures::stream","",104,[[["pinmut",["filter"]],["context"]],["poll",["option"]]]],[11,"poll_next","","",103,[[["pinmut",["take"]],["context"]],["poll",["option"]]]],[11,"poll_next","","",112,[[["pinmut",["filtermap"]],["context"]],["poll",["option"]]]],[11,"poll_next","futures::sink","",34,[[["pinmut",["sinkmaperr"]],["context"]],["poll",["option"]]]],[11,"poll_next","futures::stream","",97,[[["pinmut",["once"]],["context"]],["poll",["option"]]]],[11,"poll_next","","",115,[[["pinmut",["unfold"]],["context"]],["poll",["option"]]]],[11,"poll_next","","",110,[[["pinmut",["zip"]],["context"]],["poll",["option"]]]],[11,"poll_next","","",105,[[["pinmut",["splitstream"]],["context"]],["poll",["option"]]]],[11,"poll_next","","",91,[[["pinmut",["select"]],["context"]],["poll",["option"]]]],[11,"poll_next","","",96,[[["pinmut",["empty"]],["context"]],["poll",["option"]]]],[11,"poll_next","","",47,[[["pinmut",["futuresunordered"]],["context"]],["poll",["option"]]]],[11,"poll_next","","",48,[[["pinmut",["futuresordered"]],["context"]],["poll",["option"]]]],[11,"poll_next","","",98,[[["pinmut",["map"]],["context"]],["poll",["option"]]]],[11,"poll_next","","",107,[[["pinmut",["then"]],["context"]],["poll",["option"]]]],[11,"poll_next","","",38,[[["pinmut",["bufferunordered"]],["context"]],["poll",["option"]]]],[11,"poll_next","futures::sink","",41,[[["pinmut",["with"]],["context"]],["poll",["option"]]]],[11,"poll_next","futures::future","",92,[[["pinmut",["flattenstream"]],["context"]],["poll",["option"]]]],[11,"poll_next","futures::stream","",113,[[["pinmut",["chunks"]],["context"]],["poll",["option"]]]],[11,"poll_next","","",116,[[["pinmut",["pollfn"]],["context"]],["poll",["option"]]]],[11,"poll_next","futures::sink","",39,[[["pinmut",["buffer"]],["context"]],["poll",["option"]]]],[11,"poll_next","futures::stream","",108,[[["pinmut",["peekable"]],["context"]],["poll",["option"]]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::io","",117,[[["self"],["formatter"]],["result",["error"]]]],[11,"from","","",117,[[["intoinnererror"]],["error"]]],[11,"from","","",117,[[["errorkind"]],["error"]]],[11,"from","","",117,[[["nulerror"]],["error"]]],[11,"cmp","","",6,[[["self"],["errorkind"]],["ordering"]]],[11,"clone","","",6,[[["self"]],["errorkind"]]],[11,"description","","",117,[[["self"]],["str"]]],[11,"cause","","",117,[[["self"]],["option",["error"]]]],[11,"eq","","",6,[[["self"],["errorkind"]],["bool"]]],[11,"hash","","",6,N],[11,"partial_cmp","","",6,[[["self"],["errorkind"]],["option",["ordering"]]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result",["error"]]]],[11,"from","futures::future","",27,[[["box"]],["localfutureobj"]]],[11,"from","","",30,[[["box"]],["futureobj"]]],[11,"from","futures::task","",26,[[["arc"]],["waker"]]],[11,"from","futures::future","",27,[[["pinbox"]],["localfutureobj"]]],[11,"from","","",30,[[["pinbox"]],["futureobj"]]],[11,"poll_ready","futures::channel::mpsc","",118,[[["pinmut",["unboundedsender"]],["context"]],["poll",["result"]]]],[11,"start_send","","",118,[[["pinmut",["unboundedsender"]],["t"]],["result"]]],[11,"poll_flush","","",118,[[["pinmut",["unboundedsender"]],["context"]],["poll",["result"]]]],[11,"poll_close","","",118,[[["pinmut",["unboundedsender"]],["context"]],["poll",["result"]]]],[11,"poll_ready","","",119,[[["pinmut",["sender"]],["context"]],["poll",["result"]]]],[11,"start_send","","",119,[[["pinmut",["sender"]],["t"]],["result"]]],[11,"poll_flush","","",119,[[["pinmut",["sender"]],["context"]],["poll",["result"]]]],[11,"poll_close","","",119,[[["pinmut",["sender"]],["context"]],["poll",["result"]]]],[11,"poll","futures::channel::oneshot","",25,[[["pinmut",["receiver"]],["context"]],["poll",["result"]]]],[11,"drop","futures::channel::mpsc","",119,N],[11,"drop","","",120,N],[11,"drop","futures::channel::oneshot","",25,N],[11,"drop","","",121,N],[11,"eq","futures::channel::mpsc","",122,[[["self"],["trysenderror"]],["bool"]]],[11,"ne","","",122,[[["self"],["trysenderror"]],["bool"]]],[11,"eq","futures::channel::oneshot","",123,[[["self"],["canceled"]],["bool"]]],[11,"eq","futures::channel::mpsc","",124,[[["self"],["senderror"]],["bool"]]],[11,"ne","","",124,[[["self"],["senderror"]],["bool"]]],[11,"clone","","",118,[[["self"]],["unboundedsender"]]],[11,"clone","futures::channel::oneshot","",123,[[["self"]],["canceled"]]],[11,"clone","futures::channel::mpsc","",122,[[["self"]],["trysenderror"]]],[11,"clone","","",119,[[["self"]],["sender"]]],[11,"clone","","",124,[[["self"]],["senderror"]]],[11,"description","","",124,[[["self"]],["str"]]],[11,"description","","",122,[[["self"]],["str"]]],[11,"description","futures::channel::oneshot","",123,[[["self"]],["str"]]],[11,"description","futures::channel::mpsc","",125,[[["self"]],["str"]]],[11,"fmt","futures::channel::oneshot","",121,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",123,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::channel::mpsc","",124,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",126,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",125,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",122,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",119,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",118,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",122,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::channel::oneshot","",123,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures::channel::mpsc","",125,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",124,[[["self"],["formatter"]],["result",["error"]]]],[11,"poll_next","","",120,[[["pinmut",["receiver"]],["context"]],["poll",["option"]]]],[11,"poll_next","","",126,[[["pinmut",["unboundedreceiver"]],["context"]],["poll",["option"]]]],[11,"fmt","futures::io","",127,[[["self"],["formatter"]],["result",["error"]]]],[11,"deref","","",128,N],[11,"deref_mut","","",128,N],[11,"poll","futures::executor","",129,[[["pinmut",["joinhandle"]],["context"]],["poll"]]],[11,"poll","","",130,[[["pinmut",["spawnwithhandle"]],["context"]],["poll"]]],[11,"poll","","",131,[[["pinmut",["spawn"]],["context"]],["poll"]]],[11,"drop","","",132,N],[11,"drop","","",133,N],[11,"spawn_obj","","",132,[[["self"],["futureobj"]],["result",["spawnobjerror"]]]],[11,"spawn_obj","","",134,[[["self"],["futureobj"]],["result",["spawnobjerror"]]]],[11,"status","","",134,[[["self"]],["result",["spawnerrorkind"]]]],[11,"next","","",135,[[["self"]],["option"]]],[11,"deref_mut","","",135,N],[11,"clone","","",132,[[["self"]],["threadpool"]]],[11,"clone","","",134,[[["self"]],["localexecutor"]]],[11,"deref","","",135,N],[11,"fmt","","",134,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",136,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",137,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",132,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",130,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",131,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",129,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",133,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",135,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",138,[[["self"],["formatter"]],["result",["error"]]]],[11,"send","futures::channel::oneshot","Completes this oneshot with a successful result.",121,[[["self"],["t"]],["result"]]],[11,"poll_cancel","","Polls this `Sender` half to detect whether its associated `Receiver` with has been dropped.",121,[[["self"],["context"]],["poll"]]],[11,"is_canceled","","Tests to see whether this `Sender`'s corresponding `Receiver` has been dropped.",121,[[["self"]],["bool"]]],[11,"try_send","futures::channel::mpsc","Attempts to send a message on this `Sender`, returning the message if there was an error.",119,[[["self"],["t"]],["result",["trysenderror"]]]],[11,"start_send","","Send a message on the channel.",119,[[["self"],["t"]],["result",["senderror"]]]],[11,"poll_ready","","Polls the channel to determine if there is guaranteed capacity to send at least one item without waiting.",119,[[["self"],["context"]],["poll",["result"]]]],[11,"is_closed","","Returns whether this channel is closed without needing a context.",119,[[["self"]],["bool"]]],[11,"close_channel","","Closes this channel from the sender side, preventing any new messages.",119,N],[11,"poll_ready","","Check if the channel is ready to receive a message.",118,[[["self"],["context"]],["poll",["result"]]]],[11,"is_closed","","Returns whether this channel is closed without needing a context.",118,[[["self"]],["bool"]]],[11,"close_channel","","Closes this channel from the sender side, preventing any new messages.",118,N],[11,"start_send","","Send a message on the channel.",118,[[["self"],["t"]],["result",["senderror"]]]],[11,"unbounded_send","","Sends a message along this channel.",118,[[["self"],["t"]],["result",["trysenderror"]]]],[11,"close","","Closes the receiving half of a channel, without dropping it.",120,N],[11,"try_next","","Tries to receive the next message without notifying a context if empty.",120,[[["self"]],["result",["option","tryrecverror"]]]],[11,"close","","Closes the receiving half of the channel, without dropping it.",126,N],[11,"try_next","","Tries to receive the next message without notifying a context if empty.",126,[[["self"]],["result",["option","tryrecverror"]]]],[11,"is_full","","Returns true if this error is a result of the channel being full.",124,[[["self"]],["bool"]]],[11,"is_disconnected","","Returns true if this error is a result of the receiver being dropped.",124,[[["self"]],["bool"]]],[11,"is_full","","Returns true if this error is a result of the channel being full.",122,[[["self"]],["bool"]]],[11,"is_disconnected","","Returns true if this error is a result of the receiver being dropped.",122,[[["self"]],["bool"]]],[11,"into_inner","","Returns the message that was attempted to be sent but failed.",122,[[["self"]],["t"]]],[11,"into_send_error","","Drops the message and converts into a `SendError`.",122,[[["self"]],["senderror"]]],[11,"into_inner","futures::executor","Convert this `BlockingStream` into the inner `Stream` type.",135,[[["self"]],["s"]]],[11,"spawn_local_obj","","Spawn a non-`Send` future onto the associated `LocalPool`.",134,[[["self"],["localfutureobj"]],["result",["spawnlocalobjerror"]]]],[11,"new","","Create a new, empty pool of tasks.",137,[[],["localpool"]]],[11,"executor","","Get a clonable handle to the pool as an executor.",137,[[["self"]],["localexecutor"]]],[11,"run","","Run all tasks in the pool to completion.",137,N],[11,"run_until","","Runs all the tasks in the pool until the given future completes.",137,N],[11,"new","","Creates a new thread pool with the default configuration.",132,[[],["result",["threadpool","error"]]]],[11,"builder","","Create a default thread pool configuration, which can then be customized.",132,[[],["threadpoolbuilder"]]],[11,"run","","Runs the given future with this thread pool as the default executor for spawning tasks.",132,N],[11,"new","","Create a default thread pool configuration.",138,[[],["threadpoolbuilder"]]],[11,"pool_size","","Set size of a future ThreadPool",138,[[["self"],["usize"]],["threadpoolbuilder"]]],[11,"stack_size","","Set stack size of threads in the pool.",138,[[["self"],["usize"]],["threadpoolbuilder"]]],[11,"name_prefix","","Set thread name prefix of a future ThreadPool.",138,[[["self"],["s"]],["threadpoolbuilder"]]],[11,"after_start","","Execute the closure `f` immediately after each worker thread is started, but before running any tasks on it.",138,[[["self"],["f"]],["threadpoolbuilder"]]],[11,"before_stop","","Execute closure `f` just prior to shutting down each worker thread.",138,[[["self"],["f"]],["threadpoolbuilder"]]],[11,"create","","Create a `ThreadPool` with the given configuration.",138,[[["self"]],["result",["threadpool","error"]]]],[11,"forget","","Drop this handle without canceling the underlying future.",129,N],[11,"new","futures::future","Create a `FutureObj` from a custom trait object representation.",30,[[["f"]],["futureobj"]]],[11,"new","","Create a `LocalFutureObj` from a custom trait object representation.",27,[[["f"]],["localfutureobj"]]],[11,"into_future_obj","","Converts the `LocalFutureObj` into a `FutureObj` To make this operation safe one has to ensure that the `UnsafeFutureObj` instance from which this `LocalFutureObj` was created actually implements `Send`.",27,[[["self"]],["futureobj"]]],[11,"take_output","","Attempt to take the output of a `MaybeDone` without driving it towards completion.",3,[[["pinmut",["maybedone"]]],["option"]]],[11,"peek","","If any clone of this `Shared` has completed execution, returns its result immediately without blocking. Otherwise, returns None without triggering the work represented by this `Shared`.",44,[[["self"]],["option",["arc"]]]],[11,"new","futures::io","Creates a new I/O error from a known kind of error as well as an arbitrary error payload.",117,[[["errorkind"],["e"]],["error"]]],[11,"last_os_error","","Returns an error representing the last OS error which occurred.",117,[[],["error"]]],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS error code.",117,[[["i32"]],["error"]]],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",117,[[["self"]],["option",["i32"]]]],[11,"get_ref","","Returns a reference to the inner error wrapped by this error (if any).",117,[[["self"]],["option",["error"]]]],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by this error (if any).",117,[[["self"]],["option",["error"]]]],[11,"into_inner","","Consumes the `Error`, returning its inner error (if any).",117,[[["self"]],["option",["box"]]]],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",117,[[["self"]],["errorkind"]]],[11,"zeroing","","Returns a new `Initializer` which will zero out buffers.",127,[[],["initializer"]]],[11,"nop","","Returns a new `Initializer` which will not zero out buffers.",127,[[],["initializer"]]],[11,"should_initialize","","Indicates if a buffer should be initialized.",127,[[["self"]],["bool"]]],[11,"initialize","","Initializes a buffer if necessary.",127,N],[11,"from_bytes","","",128,N],[11,"from_bytes_mut","","",128,N],[11,"new","","Creates a new `AllowStdIo` from an existing IO object.",42,[[["t"]],["allowstdio"]]],[11,"get_ref","","Returns a reference to the contained IO object.",42,[[["self"]],["t"]]],[11,"get_mut","","Returns a mutable reference to the contained IO object.",42,[[["self"]],["t"]]],[11,"into_inner","","Consumes self and returns the contained IO object.",42,[[["self"]],["t"]]],[11,"new","","Creates a new window around the buffer `t` defaulting to the entire slice.",90,[[["t"]],["window"]]],[11,"get_ref","","Gets a shared reference to the underlying buffer inside of this `Window`.",90,[[["self"]],["t"]]],[11,"get_mut","","Gets a mutable reference to the underlying buffer inside of this `Window`.",90,[[["self"]],["t"]]],[11,"into_inner","","Consumes this `Window`, returning the underlying buffer.",90,[[["self"]],["t"]]],[11,"start","","Returns the starting index of this window into the underlying buffer `T`.",90,[[["self"]],["usize"]]],[11,"end","","Returns the end index of this window into the underlying buffer `T`.",90,[[["self"]],["usize"]]],[11,"set_start","","Changes the starting index of this window to the index specified.",90,[[["self"],["usize"]],["window"]]],[11,"set_end","","Changes the end index of this window to the index specified.",90,[[["self"],["usize"]],["window"]]],[11,"new","futures::task","Create a new task `Context` with the provided `local_waker`, `waker`, and `executor`.",31,[[["localwaker"],["executor"]],["context"]]],[11,"local_waker","","Get the `LocalWaker` associated with the current task.",31,[[["self"]],["localwaker"]]],[11,"waker","","Get the `Waker` associated with the current task.",31,[[["self"]],["waker"]]],[11,"executor","","Get the default executor associated with this task.",31,[[["self"]],["executor"]]],[11,"with_waker","","Produce a context like the current one, but using the given waker instead.",31,[[["self"],["localwaker"]],["context"]]],[11,"with_executor","","Produce a context like the current one, but using the given executor instead.",31,[[["self"],["e"]],["context"]]],[11,"new","","Constructs a new `LocalWaker` directly.",28,[[["nonnull",["unsafewake"]]],["localwaker"]]],[11,"wake","","Wake up the task associated with this `LocalWaker`.",28,N],[11,"will_wake","","Returns whether or not this `LocalWaker` and `other` `LocalWaker` awaken the same task.",28,[[["self"],["localwaker"]],["bool"]]],[11,"will_wake_nonlocal","","Returns whether or not this `LocalWaker` and `other` `Waker` awaken the same task.",28,[[["self"],["waker"]],["bool"]]],[11,"map","","Change the ready value of this `Poll` with the closure provided",16,[[["self"],["f"]],["poll"]]],[11,"is_ready","","Returns whether this is `Poll::Ready`",16,[[["self"]],["bool"]]],[11,"is_pending","","Returns whether this is `Poll::Pending`",16,[[["self"]],["bool"]]],[11,"map_ok","","Change the success value of this `Poll` with the closure provided",16,[[["self"],["f"]],["poll",["result"]]]],[11,"map_err","","Change the error value of this `Poll` with the closure provided",16,[[["self"],["f"]],["poll",["result"]]]],[11,"shutdown","","Spawning is failing because the executor has been shut down.",29,[[],["spawnerrorkind"]]],[11,"is_shutdown","","Check whether this error is the `shutdown` error.",29,[[["self"]],["bool"]]],[11,"new","","Constructs a new `Waker` directly.",26,[[["nonnull",["unsafewake"]]],["waker"]]],[11,"wake","","Wake up the task associated with this `Waker`.",26,N],[11,"will_wake","","Returns whether or not this `Waker` and `other` awaken the same task.",26,[[["self"],["waker"]],["bool"]]],[11,"get_ref","futures::sink","Get a shared reference to the inner sink.",37,[[["self"]],["si"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",37,[[["self"]],["si"]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",37,[[["self"]],["si"]]],[11,"get_ref","","Get a shared reference to the inner sink.",34,[[["self"]],["si"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",34,[[["self"]],["si"]]],[11,"get_pinned_mut","","Get a pinned reference to the inner sink.",34,[[["pinmut",["sinkmaperr"]]],["pinmut"]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",34,[[["self"]],["si"]]],[11,"get_ref","","Get a shared reference to the inner sink.",41,[[["self"]],["si"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",41,[[["self"]],["si"]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",41,[[["self"]],["si"]]],[11,"into_inner","","Consumes this combinator, returning the underlying sinks.",33,N],[11,"get_ref","","Get a shared reference to the inner sink.",39,[[["self"]],["si"]]],[11,"get_ref","futures::stream","Acquires a reference to the underlying stream that this combinator is pulling from.",104,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",104,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",104,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",112,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",112,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",112,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",100,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",100,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",100,[[["self"]],["s"]]],[11,"is_done","","Returns whether the underlying stream has finished or not.",36,[[["self"]],["bool"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",36,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",36,[[["self"]],["s"]]],[11,"get_pin_mut","","Acquires a mutable pinned reference to the underlying stream that this combinator is pulling from.",36,[[["pinmut",["fuse"]]],["pinmut"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",36,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",84,[[["self"]],["option"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",84,[[["self"]],["option"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",84,[[["self"]],["option"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",95,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",95,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",95,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",98,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",98,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",98,[[["self"]],["s"]]],[11,"peek","","Peek retrieves a reference to the next item in the stream.",108,[[["pinmut"],["context"]],["poll",["option"]]]],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",101,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",101,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",101,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",93,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",93,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",93,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",103,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",103,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",103,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",102,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",102,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",102,[[["self"]],["s"]]],[11,"new","","Constructs a new, empty `FuturesOrdered`",48,[[],["futuresordered"]]],[11,"len","","Returns the number of futures contained in the queue.",48,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the queue contains no futures",48,[[["self"]],["bool"]]],[11,"push","","Push a future into the queue.",48,N],[11,"new","","Constructs a new, empty `FuturesUnordered`",47,[[],["futuresunordered"]]],[11,"len","","Returns the number of futures contained in the set.",47,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the set contains no futures",47,[[["self"]],["bool"]]],[11,"push","","Push a future into the set.",47,N],[11,"iter_mut","","Returns an iterator that allows modifying each future in the set.",47,[[["self"]],["itermut"]]],[11,"iter_pin_mut","","Returns an iterator that allows modifying each future in the set.",47,[[["pinmut",["futuresunordered"]]],["iterpinmut"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",38,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",38,[[["self"]],["s"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying stream that this combinator is pulling from.",38,[[["pinmut",["bufferunordered"]]],["pinmut"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",38,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",35,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",35,[[["self"]],["s"]]],[11,"get_pin_mut","","Acquires a mutable pinned reference to the underlying stream that this combinator is pulling from.",35,[[["pinmut",["buffered"]]],["pinmut"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",35,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",113,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",113,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",113,[[["self"]],["s"]]],[11,"reunite","","Attempts to put the two \"halves\" of a split `Stream + Sink` back together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are a matching pair originating from the same call to `Stream::split`.",105,[[["self"],["splitsink"]],["result",["reuniteerror"]]]],[11,"reunite","","Attempts to put the two \"halves\" of a split `Stream + Sink` back together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are a matching pair originating from the same call to `Stream::split`.",40,[[["self"],["splitstream"]],["result",["reuniteerror"]]]],[11,"new","futures::task","Create an `AtomicWaker`.",46,[[],["atomicwaker"]]],[11,"register","","Registers the waker to be notified on calls to `wake`.",46,N],[11,"wake","","Calls `wake` on the last `Waker` passed to `register`.",46,N]],"paths":[[8,"Future"],[8,"TryFuture"],[8,"UnsafeFutureObj"],[4,"MaybeDone"],[8,"FutureExt"],[8,"TryFutureExt"],[4,"ErrorKind"],[8,"AsyncRead"],[8,"AsyncWrite"],[8,"AsyncReadExt"],[8,"AsyncWriteExt"],[8,"Stream"],[8,"TryStream"],[8,"Executor"],[8,"Wake"],[3,"SpawnObjError"],[4,"Poll"],[3,"SpawnLocalObjError"],[8,"UnsafeWake"],[8,"Sink"],[8,"StreamExt"],[8,"TryStreamExt"],[8,"SinkExt"],[3,"ReuniteError"],[8,"ContextExt"],[3,"Receiver"],[3,"Waker"],[3,"LocalFutureObj"],[3,"LocalWaker"],[3,"SpawnErrorKind"],[3,"FutureObj"],[3,"Context"],[3,"FlattenSink"],[3,"Fanout"],[3,"SinkMapErr"],[3,"Buffered"],[3,"Fuse"],[3,"SinkErrInto"],[3,"BufferUnordered"],[3,"Buffer"],[3,"SplitSink"],[3,"With"],[3,"AllowStdIo"],[3,"Ready"],[3,"Shared"],[3,"OptionFuture"],[3,"AtomicWaker"],[3,"FuturesUnordered"],[3,"FuturesOrdered"],[3,"WriteHalf"],[3,"CatchUnwind"],[3,"Forward"],[3,"Lazy"],[3,"Join3"],[3,"Flatten"],[3,"ErrInto"],[3,"Inspect"],[3,"ReadExact"],[3,"Next"],[3,"TryCollect"],[3,"Read"],[3,"CopyInto"],[3,"Fuse"],[3,"OrElse"],[3,"Concat"],[3,"Flush"],[3,"Empty"],[3,"MapErr"],[3,"ForEach"],[3,"Join5"],[3,"Close"],[3,"Join"],[3,"PollFn"],[3,"UnwrapOrElse"],[3,"Map"],[3,"Flush"],[3,"Send"],[3,"WriteAll"],[3,"Close"],[3,"Fold"],[3,"Join4"],[3,"WithExecutor"],[3,"ReadToEnd"],[3,"AndThen"],[3,"StreamFuture"],[3,"Then"],[3,"MapOk"],[3,"Collect"],[3,"SendAll"],[3,"IntoFuture"],[3,"Window"],[3,"Select"],[3,"FlattenStream"],[3,"SkipWhile"],[3,"ReadHalf"],[3,"Inspect"],[3,"Empty"],[3,"Once"],[3,"Map"],[3,"Chain"],[3,"Flatten"],[3,"Skip"],[3,"TakeWhile"],[3,"Take"],[3,"Filter"],[3,"SplitStream"],[3,"Repeat"],[3,"Then"],[3,"Peekable"],[3,"CatchUnwind"],[3,"Zip"],[3,"IntoStream"],[3,"FilterMap"],[3,"Chunks"],[3,"Iter"],[3,"Unfold"],[3,"PollFn"],[3,"Error"],[3,"UnboundedSender"],[3,"Sender"],[3,"Receiver"],[3,"Sender"],[3,"TrySendError"],[3,"Canceled"],[3,"SendError"],[3,"TryRecvError"],[3,"UnboundedReceiver"],[3,"Initializer"],[3,"IoVec"],[3,"JoinHandle"],[3,"SpawnWithHandle"],[3,"Spawn"],[3,"ThreadPool"],[3,"Enter"],[3,"LocalExecutor"],[3,"BlockingStream"],[3,"EnterError"],[3,"LocalPool"],[3,"ThreadPoolBuilder"]]};
searchIndex["futures_channel"]={"doc":"Asynchronous channels.","items":[[0,"mpsc","futures_channel","A multi-producer, single-consumer queue for sending values across asynchronous tasks.",N,N],[3,"Sender","futures_channel::mpsc","The transmission end of a bounded mpsc channel.",N,N],[3,"UnboundedSender","","The transmission end of an unbounded mpsc channel.",N,N],[3,"Receiver","","The receiving end of a bounded mpsc channel.",N,N],[3,"UnboundedReceiver","","The receiving end of an unbounded mpsc channel.",N,N],[3,"SendError","","The error type for `Sender`s used as `Sink`s.",N,N],[3,"TrySendError","","The error type returned from `try_send`.",N,N],[3,"TryRecvError","","The error type returned from `try_next`.",N,N],[5,"channel","","Creates a bounded mpsc channel for communicating between asynchronous tasks.",N,N],[5,"unbounded","","Creates an unbounded mpsc channel for communicating between asynchronous tasks.",N,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"clone","","",4,[[["self"]],["senderror"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"eq","","",4,[[["self"],["senderror"]],["bool"]]],[11,"ne","","",4,[[["self"],["senderror"]],["bool"]]],[11,"clone","","",5,[[["self"]],["trysenderror"]]],[11,"eq","","",5,[[["self"],["trysenderror"]],["bool"]]],[11,"ne","","",5,[[["self"],["trysenderror"]],["bool"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"description","","",4,[[["self"]],["str"]]],[11,"is_full","","Returns true if this error is a result of the channel being full.",4,[[["self"]],["bool"]]],[11,"is_disconnected","","Returns true if this error is a result of the receiver being dropped.",4,[[["self"]],["bool"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"description","","",5,[[["self"]],["str"]]],[11,"is_full","","Returns true if this error is a result of the channel being full.",5,[[["self"]],["bool"]]],[11,"is_disconnected","","Returns true if this error is a result of the receiver being dropped.",5,[[["self"]],["bool"]]],[11,"into_inner","","Returns the message that was attempted to be sent but failed.",5,[[["self"]],["t"]]],[11,"into_send_error","","Drops the message and converts into a `SendError`.",5,[[["self"]],["senderror"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"description","","",6,[[["self"]],["str"]]],[11,"try_send","","Attempts to send a message on this `Sender`, returning the message if there was an error.",0,[[["self"],["t"]],["result",["trysenderror"]]]],[11,"start_send","","Send a message on the channel.",0,[[["self"],["t"]],["result",["senderror"]]]],[11,"poll_ready","","Polls the channel to determine if there is guaranteed capacity to send at least one item without waiting.",0,[[["self"],["context"]],["poll",["result"]]]],[11,"is_closed","","Returns whether this channel is closed without needing a context.",0,[[["self"]],["bool"]]],[11,"close_channel","","Closes this channel from the sender side, preventing any new messages.",0,[[["self"]]]],[11,"poll_ready","","Check if the channel is ready to receive a message.",1,[[["self"],["context"]],["poll",["result"]]]],[11,"is_closed","","Returns whether this channel is closed without needing a context.",1,[[["self"]],["bool"]]],[11,"close_channel","","Closes this channel from the sender side, preventing any new messages.",1,[[["self"]]]],[11,"start_send","","Send a message on the channel.",1,[[["self"],["t"]],["result",["senderror"]]]],[11,"unbounded_send","","Sends a message along this channel.",1,[[["self"],["t"]],["result",["trysenderror"]]]],[11,"clone","","",1,[[["self"]],["unboundedsender"]]],[11,"clone","","",0,[[["self"]],["sender"]]],[11,"drop","","",0,[[["self"]]]],[11,"close","","Closes the receiving half of a channel, without dropping it.",2,[[["self"]]]],[11,"try_next","","Tries to receive the next message without notifying a context if empty.",2,[[["self"]],["result",["option","tryrecverror"]]]],[11,"poll_next","","",2,[[["pinmut"],["context"]],["poll",["option"]]]],[11,"drop","","",2,[[["self"]]]],[11,"close","","Closes the receiving half of the channel, without dropping it.",3,[[["self"]]]],[11,"try_next","","Tries to receive the next message without notifying a context if empty.",3,[[["self"]],["result",["option","tryrecverror"]]]],[11,"poll_next","","",3,[[["pinmut"],["context"]],["poll",["option"]]]],[0,"oneshot","futures_channel","A channel for sending a single message between asynchronous tasks.",N,N],[3,"Receiver","futures_channel::oneshot","A future for a value that will be provided by another asynchronous task.",N,N],[3,"Sender","","A means of transmitting a single value to another task.",N,N],[3,"Canceled","","Error returned from a `Receiver` when the corresponding `Sender` is dropped.",N,N],[5,"channel","","Creates a new one-shot channel for sending values across asynchronous tasks.",N,N],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"send","","Completes this oneshot with a successful result.",8,[[["self"],["t"]],["result"]]],[11,"poll_cancel","","Polls this `Sender` half to detect whether its associated `Receiver` with has been dropped.",8,[[["self"],["context"]],["poll"]]],[11,"is_canceled","","Tests to see whether this `Sender`'s corresponding `Receiver` has been dropped.",8,[[["self"]],["bool"]]],[11,"drop","","",8,[[["self"]]]],[11,"clone","","",9,[[["self"]],["canceled"]]],[11,"eq","","",9,[[["self"],["canceled"]],["bool"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"description","","",9,[[["self"]],["str"]]],[11,"close","","Gracefully close this receiver, preventing any subsequent attempts to send to it.",7,[[["self"]]]],[11,"try_recv","","Attempts to receive a message outside of the context of a task.",7,[[["self"]],["result",["option","canceled"]]]],[11,"poll","","",7,[[["pinmut"],["context"]],["poll",["result"]]]],[11,"drop","","",7,[[["self"]]]]],"paths":[[3,"Sender"],[3,"UnboundedSender"],[3,"Receiver"],[3,"UnboundedReceiver"],[3,"SendError"],[3,"TrySendError"],[3,"TryRecvError"],[3,"Receiver"],[3,"Sender"],[3,"Canceled"]]};
searchIndex["futures_core"]={"doc":"Core traits and types for asynchronous operations in Rust.","items":[[0,"future","futures_core","Futures.",N,N],[8,"Future","futures_core::future","A future represents an asychronous computation.",N,N],[16,"Output","","The result of the `Future`.",0,N],[10,"poll","","Attempt to resolve the future to a final value, registering the current task for wakeup if the value is not yet available.",0,[[["pinmut"],["context"]],["poll"]]],[3,"FutureObj","","A custom trait object for polling futures, roughly akin to `Box<dyn Future<Output = T> + Send + 'a>`.",N,N],[3,"LocalFutureObj","","A custom trait object for polling futures, roughly akin to `Box<dyn Future<Output = T> + 'a>`.",N,N],[8,"UnsafeFutureObj","","A custom implementation of a future trait object for `FutureObj`, providing a hand-rolled vtable.",N,N],[10,"into_raw","","Convert an owned instance into a (conceptually owned) void pointer.",1,N],[10,"poll","","Poll the future represented by the given void pointer.",1,N],[10,"drop","","Drops the future represented by the given void pointer.",1,N],[8,"TryFuture","","A convenience for futures that return `Result` values that includes a variety of adapters tailored to such futures.",N,N],[16,"Item","","The type of successful values yielded by this future",2,N],[16,"Error","","The type of failures yielded by this future",2,N],[10,"try_poll","","Poll this `TryFuture` as if it were a `Future`.",2,[[["pinmut"],["context"]],["poll",["result"]]]],[0,"stream","futures_core","Asynchronous streams.",N,N],[8,"Stream","futures_core::stream","A stream of values produced asynchronously.",N,N],[16,"Item","","Values yielded by the stream.",3,N],[10,"poll_next","","Attempt to pull out the next value of this stream, registering the current task for wakeup if the value is not yet available, and returning `None` if the stream is exhausted.",3,[[["pinmut"],["context"]],["poll",["option"]]]],[11,"poll_next_unpin","","A convenience for calling `Stream::poll_next` on `Unpin` stream types.",3,[[["self"],["context"]],["poll",["option"]]]],[8,"TryStream","","A convenience for streams that return `Result` values that includes a variety of adapters tailored to such futures.",N,N],[16,"TryItem","","The type of successful values yielded by this future",4,N],[16,"TryError","","The type of failures yielded by this future",4,N],[10,"try_poll_next","","Poll this `TryStream` as if it were a `Stream`.",4,[[["pinmut"],["context"]],["poll",["option"]]]],[0,"task","futures_core","Task notification.",N,N],[3,"Context","futures_core::task","Information about the currently-running task.",N,N],[4,"Poll","","Indicates whether a value is available or if the current task has been scheduled to receive a wakeup instead.",N,N],[13,"Ready","","Represents that a value is immediately ready.",5,N],[13,"Pending","","Represents that a value is not ready yet.",5,N],[8,"Executor","","A task executor.",N,N],[10,"spawn_obj","","Spawn the given task, polling it until completion.",6,[[["self"],["futureobj"]],["result",["spawnobjerror"]]]],[11,"status","","Determine whether the executor is able to spawn new tasks.",6,[[["self"]],["result",["spawnerrorkind"]]]],[3,"Waker","","A `Waker` is a handle for waking up a task by notifying its executor that it is ready to be run.",N,N],[3,"LocalWaker","","A `LocalWaker` is a handle for waking up a task by notifying its executor that it is ready to be run.",N,N],[8,"UnsafeWake","","An unsafe trait for implementing custom memory management for a `Waker` or `LocalWaker`.",N,N],[10,"clone_raw","","Creates a clone of this `UnsafeWake` and stores it behind a `Waker`.",7,[[["self"]],["waker"]]],[10,"drop_raw","","Drops this instance of `UnsafeWake`, deallocating resources associated with it.",7,N],[10,"wake","","Indicates that the associated task is ready to make progress and should be `poll`ed.",7,N],[11,"wake_local","","Indicates that the associated task is ready to make progress and should be `poll`ed. This function is the same as `wake`, but can only be called from the thread that this `UnsafeWake` is \"local\" to. This allows for implementors to provide specialized wakeup behavior specific to the current thread. This function is called by `LocalWaker::wake`.",7,N],[3,"SpawnErrorKind","","Provides the reason that an executor was unable to spawn.",N,N],[3,"SpawnObjError","","The result of a failed spawn",N,N],[12,"kind","","The kind of error",8,N],[12,"task","","The task for which spawning was attempted",8,N],[3,"SpawnLocalObjError","","The result of a failed spawn",N,N],[12,"kind","","The kind of error",9,N],[12,"task","","The task for which spawning was attempted",9,N],[8,"Wake","","A way of waking up a specific task.",N,N],[10,"wake","","Indicates that the associated task is ready to make progress and should be `poll`ed.",10,N],[11,"wake_local","","Indicates that the associated task is ready to make progress and should be `poll`ed. This function is like `wake`, but can only be called from the thread on which this `Wake` was created.",10,N],[5,"local_waker","","Creates a `LocalWaker` from a local `wake`.",N,[[["arc"]],["localwaker"]]],[5,"local_waker_from_nonlocal","","Creates a `LocalWaker` from a non-local `wake`.",N,[[["arc"]],["localwaker"]]],[11,"from","","",11,[[["localwaker"]],["waker"]]],[11,"from","futures_core::future","",12,[[["futureobj"]],["localfutureobj"]]],[11,"from","futures_core::task","",5,[[["t"]],["poll"]]],[11,"cmp","","",5,[[["self"],["poll"]],["ordering"]]],[11,"drop","","",11,N],[11,"drop","futures_core::future","",12,N],[11,"drop","futures_core::task","",13,N],[11,"eq","","",5,[[["self"],["poll"]],["bool"]]],[11,"ne","","",5,[[["self"],["poll"]],["bool"]]],[11,"hash","","",5,N],[11,"clone","","",13,[[["self"]],["localwaker"]]],[11,"clone","","",5,[[["self"]],["poll"]]],[11,"clone","","",11,[[["self"]],["waker"]]],[11,"partial_cmp","","",5,[[["self"],["poll"]],["option",["ordering"]]]],[11,"lt","","",5,[[["self"],["poll"]],["bool"]]],[11,"le","","",5,[[["self"],["poll"]],["bool"]]],[11,"gt","","",5,[[["self"],["poll"]],["bool"]]],[11,"ge","","",5,[[["self"],["poll"]],["bool"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures_core::future","",12,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures_core::task","",14,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures_core::future","",15,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","futures_core::task","",16,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result",["error"]]]],[11,"poll","futures_core::future","",15,[[["pinmut",["futureobj"]],["context"]],["poll"]]],[11,"poll","","",12,[[["pinmut",["localfutureobj"]],["context"]],["poll"]]],[11,"from","","",12,[[["box"]],["localfutureobj"]]],[11,"from","","",15,[[["box"]],["futureobj"]]],[11,"from","futures_core::task","",11,[[["arc"]],["waker"]]],[11,"from","futures_core::future","",12,[[["pinbox"]],["localfutureobj"]]],[11,"from","","",15,[[["pinbox"]],["futureobj"]]],[11,"new","","Create a `FutureObj` from a custom trait object representation.",15,[[["f"]],["futureobj"]]],[11,"new","","Create a `LocalFutureObj` from a custom trait object representation.",12,[[["f"]],["localfutureobj"]]],[11,"into_future_obj","","Converts the `LocalFutureObj` into a `FutureObj` To make this operation safe one has to ensure that the `UnsafeFutureObj` instance from which this `LocalFutureObj` was created actually implements `Send`.",12,[[["self"]],["futureobj"]]],[11,"new","futures_core::task","Create a new task `Context` with the provided `local_waker`, `waker`, and `executor`.",16,[[["localwaker"],["executor"]],["context"]]],[11,"local_waker","","Get the `LocalWaker` associated with the current task.",16,[[["self"]],["localwaker"]]],[11,"waker","","Get the `Waker` associated with the current task.",16,[[["self"]],["waker"]]],[11,"executor","","Get the default executor associated with this task.",16,[[["self"]],["executor"]]],[11,"with_waker","","Produce a context like the current one, but using the given waker instead.",16,[[["self"],["localwaker"]],["context"]]],[11,"with_executor","","Produce a context like the current one, but using the given executor instead.",16,[[["self"],["e"]],["context"]]],[11,"map","","Change the ready value of this `Poll` with the closure provided",5,[[["self"],["f"]],["poll"]]],[11,"is_ready","","Returns whether this is `Poll::Ready`",5,[[["self"]],["bool"]]],[11,"is_pending","","Returns whether this is `Poll::Pending`",5,[[["self"]],["bool"]]],[11,"map_ok","","Change the success value of this `Poll` with the closure provided",5,[[["self"],["f"]],["poll",["result"]]]],[11,"map_err","","Change the error value of this `Poll` with the closure provided",5,[[["self"],["f"]],["poll",["result"]]]],[11,"new","","Constructs a new `Waker` directly.",11,[[["nonnull",["unsafewake"]]],["waker"]]],[11,"wake","","Wake up the task associated with this `Waker`.",11,N],[11,"will_wake","","Returns whether or not this `Waker` and `other` awaken the same task.",11,[[["self"],["waker"]],["bool"]]],[11,"new","","Constructs a new `LocalWaker` directly.",13,[[["nonnull",["unsafewake"]]],["localwaker"]]],[11,"wake","","Wake up the task associated with this `LocalWaker`.",13,N],[11,"will_wake","","Returns whether or not this `LocalWaker` and `other` `LocalWaker` awaken the same task.",13,[[["self"],["localwaker"]],["bool"]]],[11,"will_wake_nonlocal","","Returns whether or not this `LocalWaker` and `other` `Waker` awaken the same task.",13,[[["self"],["waker"]],["bool"]]],[11,"shutdown","","Spawning is failing because the executor has been shut down.",14,[[],["spawnerrorkind"]]],[11,"is_shutdown","","Check whether this error is the `shutdown` error.",14,[[["self"]],["bool"]]]],"paths":[[8,"Future"],[8,"UnsafeFutureObj"],[8,"TryFuture"],[8,"Stream"],[8,"TryStream"],[4,"Poll"],[8,"Executor"],[8,"UnsafeWake"],[3,"SpawnObjError"],[3,"SpawnLocalObjError"],[8,"Wake"],[3,"Waker"],[3,"LocalFutureObj"],[3,"LocalWaker"],[3,"SpawnErrorKind"],[3,"FutureObj"],[3,"Context"]]};
searchIndex["futures_executor"]={"doc":"Built-in executors and related tools.","items":[[3,"BlockingStream","futures_executor","An iterator which blocks on values from a stream until they become available.",N,N],[3,"LocalPool","","A single-threaded task pool.",N,N],[3,"LocalExecutor","","A handle to a `LocalPool` that implements `Executor`.",N,N],[3,"ThreadPool","","A general-purpose thread pool for scheduling asynchronous tasks.",N,N],[3,"ThreadPoolBuilder","","Thread pool configuration object.",N,N],[3,"Enter","","Represents an executor context.",N,N],[3,"EnterError","","An error returned by `enter` if an execution scope has already been entered.",N,N],[3,"Spawn","","A future representing the completion of task spawning.",N,N],[3,"SpawnWithHandle","","A future representing the completion of task spawning, yielding a `JoinHandle` to the spawned task.",N,N],[3,"JoinHandle","","The type of future returned from the `ThreadPool::spawn` function, which proxies the futures running on the thread pool.",N,N],[5,"block_on","","Run a future to completion on the current thread.",N,N],[5,"block_on_stream","","Turn a stream into a blocking iterator.",N,[[["s"]],["blockingstream"]]],[5,"enter","","Marks the current thread as being within the dynamic extent of an executor.",N,[[],["result",["enter","entererror"]]]],[5,"spawn","","Spawn a task onto the default executor.",N,[[["f"]],["spawn"]]],[5,"spawn_with_handle","","Spawn a task onto the default executor, yielding a `JoinHandle` to the spawned task.",N,[[["f"]],["spawnwithhandle"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"clone","","",1,[[["self"]],["localexecutor"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"new","","Create a new, empty pool of tasks.",0,[[],["localpool"]]],[11,"executor","","Get a clonable handle to the pool as an executor.",0,[[["self"]],["localexecutor"]]],[11,"run","","Run all tasks in the pool to completion.",0,[[["self"],["exec"]]]],[11,"run_until","","Runs all the tasks in the pool until the given future completes.",0,N],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"deref","","",2,N],[11,"deref_mut","","",2,N],[11,"into_inner","","Convert this `BlockingStream` into the inner `Stream` type.",2,[[["self"]],["s"]]],[11,"next","","",2,[[["self"]],["option"]]],[11,"spawn_obj","","",1,[[["self"],["futureobj"]],["result",["spawnobjerror"]]]],[11,"status","","",1,[[["self"]],["result",["spawnerrorkind"]]]],[11,"spawn_local_obj","","Spawn a non-`Send` future onto the associated `LocalPool`.",1,[[["self"],["localfutureobj"]],["result",["spawnlocalobjerror"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"new","","Creates a new thread pool with the default configuration.",3,[[],["result",["threadpool","error"]]]],[11,"builder","","Create a default thread pool configuration, which can then be customized.",3,[[],["threadpoolbuilder"]]],[11,"run","","Runs the given future with this thread pool as the default executor for spawning tasks.",3,N],[11,"spawn_obj","","",3,[[["self"],["futureobj"]],["result",["spawnobjerror"]]]],[11,"clone","","",3,[[["self"]],["threadpool"]]],[11,"drop","","",3,[[["self"]]]],[11,"new","","Create a default thread pool configuration.",4,[[],["threadpoolbuilder"]]],[11,"pool_size","","Set size of a future ThreadPool",4,[[["self"],["usize"]],["self"]]],[11,"stack_size","","Set stack size of threads in the pool.",4,[[["self"],["usize"]],["self"]]],[11,"name_prefix","","Set thread name prefix of a future ThreadPool.",4,[[["self"],["s"]],["self"]]],[11,"after_start","","Execute the closure `f` immediately after each worker thread is started, but before running any tasks on it.",4,[[["self"],["f"]],["self"]]],[11,"before_stop","","Execute closure `f` just prior to shutting down each worker thread.",4,[[["self"],["f"]],["self"]]],[11,"create","","Create a `ThreadPool` with the given configuration.",4,[[["self"]],["result",["threadpool","error"]]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"drop","","",6,[[["self"]]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"poll","","",7,[[["pinmut"],["context"]],["poll"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"poll","","",8,[[["pinmut"],["context"]],["poll"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"forget","","Drop this handle without canceling the underlying future.",9,[[["self"]]]],[11,"poll","","",9,[[["pinmut"],["context"]],["poll"]]]],"paths":[[3,"LocalPool"],[3,"LocalExecutor"],[3,"BlockingStream"],[3,"ThreadPool"],[3,"ThreadPoolBuilder"],[3,"EnterError"],[3,"Enter"],[3,"Spawn"],[3,"SpawnWithHandle"],[3,"JoinHandle"]]};
searchIndex["futures_io"]={"doc":"Asynchronous I/O","items":[[3,"IoVec","futures_io","A specialized byte slice type for performing vectored I/O operations.",N,N],[3,"Error","","The error type for I/O operations of the [`Read`], [`Write`], [`Seek`], and associated traits.",N,N],[4,"ErrorKind","","A list specifying general categories of I/O error.",N,N],[13,"NotFound","","An entity was not found, often a file.",0,N],[13,"PermissionDenied","","The operation lacked the necessary privileges to complete.",0,N],[13,"ConnectionRefused","","The connection was refused by the remote server.",0,N],[13,"ConnectionReset","","The connection was reset by the remote server.",0,N],[13,"ConnectionAborted","","The connection was aborted (terminated) by the remote server.",0,N],[13,"NotConnected","","The network operation failed because it was not connected yet.",0,N],[13,"AddrInUse","","A socket address could not be bound because the address is already in use elsewhere.",0,N],[13,"AddrNotAvailable","","A nonexistent interface was requested or the requested address was not local.",0,N],[13,"BrokenPipe","","The operation failed because a pipe was closed.",0,N],[13,"AlreadyExists","","An entity already exists, often a file.",0,N],[13,"WouldBlock","","The operation needs to block to complete, but the blocking operation was requested to not occur.",0,N],[13,"InvalidInput","","A parameter was incorrect.",0,N],[13,"InvalidData","","Data not valid for the operation were encountered.",0,N],[13,"TimedOut","","The I/O operation's timeout expired, causing it to be canceled.",0,N],[13,"WriteZero","","An error returned when an operation could not be completed because a call to [`write`] returned [`Ok(0)`].",0,N],[13,"Interrupted","","This operation was interrupted.",0,N],[13,"Other","","Any I/O error not part of this list.",0,N],[13,"UnexpectedEof","","An error returned when an operation could not be completed because an \"end of file\" was reached prematurely.",0,N],[6,"Result","","A specialized `Result` type for I/O operations.",N,N],[3,"Initializer","","A type used to conditionally initialize buffers passed to `AsyncRead` methods, modeled after `std`.",N,N],[8,"AsyncRead","","Read bytes asynchronously.",N,N],[11,"initializer","","Determines if this `AsyncRead`er can work with buffers of uninitialized memory.",1,[[["self"]],["initializer"]]],[10,"poll_read","","Attempt to read from the `AsyncRead` into `buf`.",1,N],[11,"poll_vectored_read","","Attempt to read from the `AsyncRead` into `vec` using vectored IO operations.",1,N],[8,"AsyncWrite","","Write bytes asynchronously.",N,N],[10,"poll_write","","Attempt to write bytes from `buf` into the object.",2,N],[11,"poll_vectored_write","","Attempt to write bytes from `vec` into the object using vectored IO operations.",2,N],[10,"poll_flush","","Attempt to flush the object, ensuring that any buffered data reach their destination.",2,[[["self"],["context"]],["poll",["result"]]]],[10,"poll_close","","Attempt to close the object.",2,[[["self"],["context"]],["poll",["result"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"zeroing","","Returns a new `Initializer` which will zero out buffers.",3,[[],["initializer"]]],[11,"nop","","Returns a new `Initializer` which will not zero out buffers.",3,[[],["initializer"]]],[11,"should_initialize","","Indicates if a buffer should be initialized.",3,[[["self"]],["bool"]]],[11,"initialize","","Initializes a buffer if necessary.",3,N],[11,"from_bytes","","",4,N],[11,"from_bytes_mut","","",4,N],[11,"fmt","","",5,[[["self"],["formatter"]],["result",["error"]]]],[11,"from","","",5,[[["intoinnererror"]],["error"]]],[11,"from","","",5,[[["errorkind"]],["error"]]],[11,"from","","",5,[[["nulerror"]],["error"]]],[11,"cmp","","",0,[[["self"],["errorkind"]],["ordering"]]],[11,"clone","","",0,[[["self"]],["errorkind"]]],[11,"description","","",5,[[["self"]],["str"]]],[11,"cause","","",5,[[["self"]],["option",["error"]]]],[11,"eq","","",0,[[["self"],["errorkind"]],["bool"]]],[11,"hash","","",0,N],[11,"partial_cmp","","",0,[[["self"],["errorkind"]],["option",["ordering"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result",["error"]]]],[11,"deref","","",4,N],[11,"deref_mut","","",4,N],[11,"new","","Creates a new I/O error from a known kind of error as well as an arbitrary error payload.",5,[[["errorkind"],["e"]],["error"]]],[11,"last_os_error","","Returns an error representing the last OS error which occurred.",5,[[],["error"]]],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS error code.",5,[[["i32"]],["error"]]],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",5,[[["self"]],["option",["i32"]]]],[11,"get_ref","","Returns a reference to the inner error wrapped by this error (if any).",5,[[["self"]],["option",["error"]]]],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by this error (if any).",5,[[["self"]],["option",["error"]]]],[11,"into_inner","","Consumes the `Error`, returning its inner error (if any).",5,[[["self"]],["option",["box"]]]],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",5,[[["self"]],["errorkind"]]]],"paths":[[4,"ErrorKind"],[8,"AsyncRead"],[8,"AsyncWrite"],[3,"Initializer"],[3,"IoVec"],[3,"Error"]]};
searchIndex["futures_sink"]={"doc":"Asynchronous sinks","items":[[4,"VecSinkError","futures_sink","The error type for `Vec` and `VecDequeue` when used as `Sink`s. Values of this type can never be created.",N,N],[8,"Sink","","A `Sink` is a value into which other values can be sent, asynchronously.",N,N],[16,"SinkItem","","The type of value that the sink accepts.",0,N],[16,"SinkError","","The type of value produced by the sink when an error occurs.",0,N],[10,"poll_ready","","Attempts to prepare the `Sink` to receive a value.",0,[[["pinmut"],["context"]],["poll",["result"]]]],[10,"start_send","","Begin the process of sending a value to the sink. Each call to this function must be proceeded by a successful call to `poll_ready` which returned `Ok(Poll::Ready(()))`.",0,N],[10,"poll_flush","","Flush any remaining output from this sink.",0,[[["pinmut"],["context"]],["poll",["result"]]]],[10,"poll_close","","Flush any remaining output and close this sink, if necessary.",0,[[["pinmut"],["context"]],["poll",["result"]]]],[11,"clone","","",1,[[["self"]],["vecsinkerror"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]]],"paths":[[8,"Sink"],[4,"VecSinkError"]]};
searchIndex["futures_util"]={"doc":"Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s, and the `AsyncRead` and `AsyncWrite` traits.","items":[[0,"future","futures_util","Futures",N,N],[3,"Empty","futures_util::future","A future which is never resolved.",N,N],[3,"Lazy","","A future which, when polled, invokes a closure and yields its result.",N,N],[3,"OptionFuture","","A future representing a value which may or may not be present.",N,N],[3,"PollFn","","A future which adapts a function returning `Poll`.",N,N],[3,"Ready","","A future that is immediately ready with a value",N,N],[3,"Flatten","","Future for the `flatten` combinator.",N,N],[3,"FlattenStream","","Future for the `flatten_stream` combinator, flattening a future-of-a-stream to get just the result of the final stream as a stream.",N,N],[3,"Fuse","","A future which \"fuses\" a future once it's been resolved.",N,N],[3,"IntoStream","","A type which converts a `Future` into a `Stream` containing a single element.",N,N],[3,"Join","","Future for the `join` combinator, waiting for two futures to complete.",N,N],[3,"Join3","","Future for the `join3` combinator, waiting for three futures to complete.",N,N],[3,"Join4","","Future for the `join4` combinator, waiting for four futures to complete.",N,N],[3,"Join5","","Future for the `join5` combinator, waiting for five futures to complete.",N,N],[3,"Map","","Future for the `map` combinator, changing the type of a future.",N,N],[3,"Then","","Future for the `then` combinator, chaining computations on the end of another future regardless of its outcome.",N,N],[3,"Inspect","","Do something with the item of a future, passing it on.",N,N],[3,"WithExecutor","","Future for the `with_executor` combinator, assigning an executor to be used when spawning other futures.",N,N],[3,"CatchUnwind","","Future for the `catch_unwind` combinator.",N,N],[3,"Shared","","A future that is cloneable and can be polled in multiple threads. Use `Future::shared()` method to convert any future into a `Shared` future.",N,N],[4,"MaybeDone","","`MaybeDone`, a future that may have completed.",N,N],[13,"Future","","A not-yet-completed future",0,N],[13,"Done","","The output of the completed future",0,N],[13,"Gone","","The empty variant after the result of a `maybe_done` has been taken using the `take_output` method.",0,N],[5,"empty","","Creates a future which never resolves, representing a computation that never finishes.",N,[[],["empty"]]],[5,"lazy","","Creates a new future from a closure.",N,[[["f"]],["lazy"]]],[5,"maybe_done","","Creates a new future from a closure.",N,[[["fut"]],["maybedone"]]],[5,"poll_fn","","Creates a new future wrapping around a function returning `Poll`.",N,[[["f"]],["pollfn"]]],[5,"ready","","Create a future that is immediately ready with a value.",N,[[["t"]],["ready"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"poll","","",1,[[["pinmut"],["context"]],["poll"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"poll","","",2,[[["pinmut"],["context"]],["poll"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"take_output","","Attempt to take the output of a `MaybeDone` without driving it towards completion.",0,[[["pinmut"]],["option"]]],[11,"poll","","",0,[[["pinmut"],["context"]],["poll"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"clone","","",3,[[["self"]],["optionfuture"]]],[11,"poll","","",3,[[["pinmut"],["context"]],["poll"]]],[11,"from","","",3,[[["option"]],["self"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"poll","","",4,[[["pinmut"],["context"]],["poll"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"clone","","",5,[[["self"]],["ready"]]],[11,"poll","","",5,[[["pinmut"],["context"]],["poll"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"poll","","",6,[[["pinmut"],["context"]],["poll"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"poll_next","","",7,[[["pinmut"],["context"]],["poll",["option"]]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"poll","","",8,[[["pinmut"],["context"]],["poll"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"poll_next","","",9,[[["pinmut"],["context"]],["poll",["option"]]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"poll","","",10,[[["pinmut"],["context"]],["poll"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"poll","","",11,[[["pinmut"],["context"]],["poll"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"poll","","",12,[[["pinmut"],["context"]],["poll"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"poll","","",13,[[["pinmut"],["context"]],["poll"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"poll","","",14,[[["pinmut"],["context"]],["poll"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"poll","","",15,[[["pinmut"],["context"]],["poll"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"poll","","",16,[[["pinmut"],["context"]],["poll"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"poll","","",17,[[["pinmut"],["context"]],["poll"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"poll","","",18,[[["pinmut"],["context"]],["poll"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"peek","","If any clone of this `Shared` has completed execution, returns its result immediately without blocking. Otherwise, returns None without triggering the work represented by this `Shared`.",19,[[["self"]],["option",["arc"]]]],[11,"poll","","",19,[[["pinmut"],["context"]],["poll"]]],[11,"clone","","",19,[[["self"]],["self"]]],[11,"drop","","",19,[[["self"]]]],[8,"FutureExt","","An extension trait for `Future`s that provides a variety of convenient adapters.",N,N],[11,"map","","Map this future's result to a different type, returning a new future of the resulting type.",20,[[["self"],["f"]],["map"]]],[11,"then","","Chain on a computation for when a future finished, passing the result of the future to the provided closure `f`.",20,[[["self"],["f"]],["then"]]],[11,"join","","Joins the result of two futures, waiting for them both to complete.",20,[[["self"],["fut2"]],["join"]]],[11,"join3","","Same as `join`, but with more futures.",20,[[["self"],["fut2"],["fut3"]],["join3"]]],[11,"join4","","Same as `join`, but with more futures.",20,[[["self"],["fut2"],["fut3"],["fut4"]],["join4"]]],[11,"join5","","Same as `join`, but with more futures.",20,[[["self"],["fut2"],["fut3"],["fut4"],["fut5"]],["join5"]]],[11,"into_stream","","Convert this future into a single element stream.",20,[[["self"]],["intostream"]]],[11,"flatten","","Flatten the execution of this future when the successful result of this future is itself another future.",20,[[["self"]],["flatten"]]],[11,"flatten_stream","","Flatten the execution of this future when the successful result of this future is a stream.",20,[[["self"]],["flattenstream"]]],[11,"fuse","","Fuse a future such that `poll` will never again be called once it has completed.",20,[[["self"]],["fuse"]]],[11,"inspect","","Do something with the output of a future before passing it on.",20,[[["self"],["f"]],["inspect"]]],[11,"catch_unwind","","Catches unwinding panics while polling the future.",20,[[["self"]],["catchunwind"]]],[11,"shared","","Create a cloneable handle to this future where all handles will resolve to the same result.",20,[[["self"]],["shared"]]],[11,"with_executor","","Assigns the provided `Executor` to be used when spawning tasks from within the future.",20,[[["self"],["e"]],["withexecutor"]]],[11,"poll_unpin","","A convenience for calling `Future::poll` on `Unpin` future types.",20,[[["self"],["context"]],["poll"]]],[0,"try_future","futures_util","Futures",N,N],[3,"AndThen","futures_util::try_future","Future for the `and_then` combinator, chaining a computation onto the end of another future which completes successfully.",N,N],[3,"ErrInto","","Future for the `err_into` combinator, changing the error type of a future.",N,N],[3,"FlattenSink","","Future for the `flatten_sink` combinator, flattening a future-of-a-sink to get just the result of the final sink as a sink.",N,N],[3,"IntoFuture","","Converts a `TryFuture` into a normal `Future`",N,N],[3,"MapErr","","Future for the `map_err` combinator, changing the type of a future.",N,N],[3,"MapOk","","Future for the `map_ok` combinator, changing the type of a future.",N,N],[3,"OrElse","","Future for the `or_else` combinator, chaining a computation onto the end of a future which fails with an error.",N,N],[3,"UnwrapOrElse","","Future for the `unwrap_or_else` combinator. It unwraps the result, returning the content of the `Ok` as `Output` or if the value is an `Err` then it calls `op` with its value.",N,N],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"poll","","",21,[[["pinmut"],["context"]],["poll"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"poll","","",22,[[["pinmut"],["context"]],["poll"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"poll_ready","","",23,[[["pinmut"],["context"]],["poll",["result"]]]],[11,"start_send","","",23,N],[11,"poll_flush","","",23,[[["pinmut"],["context"]],["poll",["result"]]]],[11,"poll_close","","",23,[[["pinmut"],["context"]],["poll",["result"]]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"poll","","",24,[[["pinmut"],["context"]],["poll"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"poll","","",25,[[["pinmut"],["context"]],["poll"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"poll","","",26,[[["pinmut"],["context"]],["poll"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"poll","","",27,[[["pinmut"],["context"]],["poll"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"poll","","",28,[[["pinmut"],["context"]],["poll"]]],[8,"TryFutureExt","","Adapters specific to `Result`-returning futures",N,N],[11,"flatten_sink","","Flatten the execution of this future when the successful result of this future is a sink.",29,[[["self"]],["flattensink"]]],[11,"map_ok","","Map this future's result to a different type, returning a new future of the resulting type.",29,[[["self"],["f"]],["mapok"]]],[11,"map_err","","Map this future's error to a different error, returning a new future.",29,[[["self"],["f"]],["maperr"]]],[11,"err_into","","Map this future's error to a new error type using the `Into` trait.",29,[[["self"]],["errinto"]]],[11,"and_then","","Execute another future after this one has resolved successfully.",29,[[["self"],["f"]],["andthen"]]],[11,"or_else","","Execute another future if this one resolves with an error.",29,[[["self"],["f"]],["orelse"]]],[11,"unwrap_or_else","","Handle errors generated by this future by converting them into `Self::Item`.",29,[[["self"],["f"]],["unwraporelse"]]],[11,"into_future","","Wraps a `TryFuture` so that it implements `Future`. `TryFuture`s currently do not implement the `Future` trait due to limitations of the compiler.",29,[[["self"]],["intofuture"]]],[0,"stream","futures_util","Streams",N,N],[3,"Iter","futures_util::stream","A stream which is just a shim over an underlying instance of `Iterator`.",N,N],[3,"Repeat","","Stream that produces the same element repeatedly.",N,N],[3,"Chain","","An adapter for chaining the output of two streams.",N,N],[3,"Concat","","A stream combinator to concatenate the results of a stream into the first yielded item.",N,N],[3,"Empty","","A stream which contains no elements.",N,N],[3,"Filter","","A stream combinator used to filter the results of a stream and only yield some values.",N,N],[3,"FilterMap","","A combinator used to filter the results of a stream and simultaneously map them to a different type.",N,N],[3,"Flatten","","A combinator used to flatten a stream-of-streams into one long stream of elements.",N,N],[3,"Fold","","A future used to collect all the results of a stream into one generic type.",N,N],[3,"Forward","","Future for the `Stream::forward` combinator, which sends a stream of values to a sink and then flushes the sink.",N,N],[3,"ForEach","","A stream combinator which executes a unit closure over each item on a stream.",N,N],[3,"Fuse","","A stream which \"fuse\"s a stream once it's terminated.",N,N],[3,"StreamFuture","","A combinator used to temporarily convert a stream into a future.",N,N],[3,"Inspect","","Do something with the items of a stream, passing it on.",N,N],[3,"Map","","A stream combinator which will change the type of a stream from one type to another.",N,N],[3,"Next","","A future of the next element of a stream.",N,N],[3,"Once","","A stream which emits single element and then EOF.",N,N],[3,"Peekable","","A `Stream` that implements a `peek` method.",N,N],[3,"PollFn","","A stream which adapts a function returning `Poll`.",N,N],[3,"Select","","An adapter for merging the output of two streams.",N,N],[3,"Skip","","A stream combinator which skips a number of elements before continuing.",N,N],[3,"SkipWhile","","A stream combinator which skips elements of a stream while a predicate holds.",N,N],[3,"Take","","A stream combinator which returns a maximum number of elements.",N,N],[3,"TakeWhile","","A stream combinator which takes elements from a stream while a predicate holds.",N,N],[3,"Then","","A stream combinator which chains a computation onto each item produced by a stream.",N,N],[3,"Unfold","","A stream which creates futures, polls them and return their result",N,N],[3,"Zip","","An adapter for merging the output of two streams.",N,N],[3,"BufferUnordered","","An adaptor for a stream of futures to execute the futures concurrently, if possible, delivering results as they become available.",N,N],[3,"Buffered","","An adaptor for a stream of futures to execute the futures concurrently, if possible.",N,N],[3,"CatchUnwind","","Stream for the `catch_unwind` combinator.",N,N],[3,"Chunks","","An adaptor that chunks up elements in a vector.",N,N],[3,"Collect","","A future which collects all of the values of a stream into a vector.",N,N],[3,"FuturesOrdered","","An unbounded queue of futures.",N,N],[3,"FuturesUnordered","","A set of `Future`s which may complete in any order.",N,N],[3,"SplitStream","","A `Stream` part of the split pair",N,N],[3,"SplitSink","","A `Sink` part of the split pair",N,N],[3,"ReuniteError","","Error indicating a `SplitSink<S>` and `SplitStream<S>` were not two halves of a `Stream + Split`, and thus could not be `reunite`d.",N,N],[12,"0","","",30,N],[12,"1","","",30,N],[5,"iter","","Converts an `Iterator` into a `Stream` which is always ready to yield the next value.",N,[[["i"]],["iter"]]],[5,"repeat","","Create a stream which produces the same item repeatedly.",N,[[["t"]],["repeat"]]],[5,"empty","","Creates a stream which contains no elements.",N,[[],["empty"]]],[5,"once","","Creates a stream of single element",N,[[["f"]],["once"]]],[5,"poll_fn","","Creates a new stream wrapping around a function returning `Poll`.",N,[[["f"]],["pollfn"]]],[5,"unfold","","Creates a `Stream` from a seed and a closure returning a `Future`.",N,[[["t"],["f"]],["unfold"]]],[5,"futures_ordered","","Converts a list of futures into a `Stream` of results from the futures.",N,[[["i"]],["futuresordered"]]],[5,"futures_unordered","","Converts a list of futures into a `Stream` of results from the futures.",N,[[["i"]],["futuresunordered"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"poll_next","","",31,[[["pinmut"],["context"]],["poll",["option"]]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"poll_next","","",32,[[["pinmut"],["context"]],["poll",["option"]]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"poll_next","","",33,[[["pinmut"],["context"]],["poll",["option"]]]],[11,"fmt","","",34,[[["self"],["formatter"]],["fmtresult"]]],[11,"poll","","",34,[[["pinmut"],["context"]],["poll"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"poll_next","","",35,[[["pinmut"],["context"]],["poll",["option"]]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",36,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",36,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",36,[[["self"]],["s"]]],[11,"poll_next","","",36,[[["pinmut"],["context"]],["poll",["option"]]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",37,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",37,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",37,[[["self"]],["s"]]],[11,"poll_next","","",37,[[["pinmut"],["context"]],["poll",["option"]]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",38,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",38,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",38,[[["self"]],["s"]]],[11,"poll_next","","",38,[[["pinmut"],["context"]],["poll",["option"]]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"poll","","",39,[[["pinmut"],["context"]],["poll"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"poll","","",40,[[["pinmut"],["context"]],["poll"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"poll","","",41,[[["pinmut"],["context"]],["poll"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"poll_ready","","",42,[[["pinmut"],["context"]],["poll",["result"]]]],[11,"start_send","","",42,N],[11,"poll_flush","","",42,[[["pinmut"],["context"]],["poll",["result"]]]],[11,"poll_close","","",42,[[["pinmut"],["context"]],["poll",["result"]]]],[11,"is_done","","Returns whether the underlying stream has finished or not.",42,[[["self"]],["bool"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",42,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",42,[[["self"]],["s"]]],[11,"get_pin_mut","","Acquires a mutable pinned reference to the underlying stream that this combinator is pulling from.",42,[[["pinmut"]],["pinmut"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",42,[[["self"]],["s"]]],[11,"poll_next","","",42,[[["pinmut"],["context"]],["poll",["option"]]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",43,[[["self"]],["option"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",43,[[["self"]],["option"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",43,[[["self"]],["option"]]],[11,"poll","","",43,[[["pinmut"],["context"]],["poll"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",44,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",44,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",44,[[["self"]],["s"]]],[11,"poll_next","","",44,[[["pinmut"],["context"]],["poll",["option"]]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",45,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",45,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",45,[[["self"]],["s"]]],[11,"poll_next","","",45,[[["pinmut"],["context"]],["poll",["option"]]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"poll","","",46,[[["pinmut"],["context"]],["poll"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"poll_next","","",47,[[["pinmut"],["context"]],["poll",["option"]]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"peek","","Peek retrieves a reference to the next item in the stream.",48,[[["pinmut"],["context"]],["poll",["option"]]]],[11,"poll_next","","",48,[[["pinmut"],["context"]],["poll",["option"]]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"poll_next","","",49,[[["pinmut"],["context"]],["poll",["option"]]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"poll_next","","",50,[[["pinmut"],["context"]],["poll",["option"]]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",51,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",51,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",51,[[["self"]],["s"]]],[11,"poll_next","","",51,[[["pinmut"],["context"]],["poll",["option"]]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",52,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",52,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",52,[[["self"]],["s"]]],[11,"poll_next","","",52,[[["pinmut"],["context"]],["poll",["option"]]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",53,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",53,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",53,[[["self"]],["s"]]],[11,"poll_next","","",53,[[["pinmut"],["context"]],["poll",["option"]]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",54,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",54,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",54,[[["self"]],["s"]]],[11,"poll_next","","",54,[[["pinmut"],["context"]],["poll",["option"]]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"poll_next","","",55,[[["pinmut"],["context"]],["poll",["option"]]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"poll_next","","",56,[[["pinmut"],["context"]],["poll",["option"]]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"poll_next","","",57,[[["pinmut"],["context"]],["poll",["option"]]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",58,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",58,[[["self"]],["s"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying stream that this combinator is pulling from.",58,[[["pinmut"]],["pinmut"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",58,[[["self"]],["s"]]],[11,"poll_next","","",58,[[["pinmut"],["context"]],["poll",["option"]]]],[11,"poll_ready","","",58,[[["pinmut"],["context"]],["poll",["result"]]]],[11,"start_send","","",58,N],[11,"poll_flush","","",58,[[["pinmut"],["context"]],["poll",["result"]]]],[11,"poll_close","","",58,[[["pinmut"],["context"]],["poll",["result"]]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",59,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",59,[[["self"]],["s"]]],[11,"get_pin_mut","","Acquires a mutable pinned reference to the underlying stream that this combinator is pulling from.",59,[[["pinmut"]],["pinmut"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",59,[[["self"]],["s"]]],[11,"poll_ready","","",59,[[["pinmut"],["context"]],["poll",["result"]]]],[11,"start_send","","",59,N],[11,"poll_flush","","",59,[[["pinmut"],["context"]],["poll",["result"]]]],[11,"poll_close","","",59,[[["pinmut"],["context"]],["poll",["result"]]]],[11,"poll_next","","",59,[[["pinmut"],["context"]],["poll",["option"]]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"poll_next","","",60,[[["pinmut"],["context"]],["poll",["option"]]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",61,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",61,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",61,[[["self"]],["s"]]],[11,"poll_next","","",61,[[["pinmut"],["context"]],["poll",["option"]]]],[11,"fmt","","",62,[[["self"],["formatter"]],["result"]]],[11,"poll","","",62,[[["pinmut"],["context"]],["poll"]]],[11,"new","","Constructs a new, empty `FuturesOrdered`",63,[[],["futuresordered"]]],[11,"len","","Returns the number of futures contained in the queue.",63,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the queue contains no futures",63,[[["self"]],["bool"]]],[11,"push","","Push a future into the queue.",63,[[["self"],["t"]]]],[11,"default","","",63,[[],["futuresordered"]]],[11,"poll_next","","",63,[[["pinmut"],["context"]],["poll",["option"]]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"from_iter","","",63,[[["t"]],["self"]]],[11,"new","","Constructs a new, empty `FuturesUnordered`",64,[[],["futuresunordered"]]],[11,"default","","",64,[[],["futuresunordered"]]],[11,"len","","Returns the number of futures contained in the set.",64,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the set contains no futures",64,[[["self"]],["bool"]]],[11,"push","","Push a future into the set.",64,[[["self"],["t"]]]],[11,"iter_mut","","Returns an iterator that allows modifying each future in the set.",64,[[["self"]],["itermut"]]],[11,"iter_pin_mut","","Returns an iterator that allows modifying each future in the set.",64,[[["pinmut"]],["iterpinmut"]]],[11,"poll_next","","",64,[[["pinmut"],["context"]],["poll",["option"]]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result"]]],[11,"drop","","",64,[[["self"]]]],[11,"from_iter","","",64,[[["t"]],["self"]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result"]]],[11,"reunite","","Attempts to put the two \"halves\" of a split `Stream + Sink` back together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are a matching pair originating from the same call to `Stream::split`.",65,[[["self"],["splitsink"]],["result",["reuniteerror"]]]],[11,"poll_next","","",65,[[["pinmut"],["context"]],["poll",["option"]]]],[11,"fmt","","",66,[[["self"],["formatter"]],["result"]]],[11,"reunite","","Attempts to put the two \"halves\" of a split `Stream + Sink` back together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are a matching pair originating from the same call to `Stream::split`.",66,[[["self"],["splitstream"]],["result",["reuniteerror"]]]],[11,"poll_ready","","",66,[[["pinmut"],["context"]],["poll",["result"]]]],[11,"start_send","","",66,N],[11,"poll_flush","","",66,[[["pinmut"],["context"]],["poll",["result"]]]],[11,"poll_close","","",66,[[["pinmut"],["context"]],["poll",["result"]]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"description","","",30,[[["self"]],["str"]]],[8,"StreamExt","","An extension trait for `Stream`s that provides a variety of convenient combinator functions.",N,N],[11,"next","","Creates a future that resolves to the next element in the stream.",67,[[["self"]],["next"]]],[11,"into_future","","Converts this stream into a `Future` of `(next_item, tail_of_stream)`. If the stream terminates, then the next item is `None`.",67,[[["self"]],["streamfuture"]]],[11,"map","","Converts a stream of type `T` to a stream of type `U`.",67,[[["self"],["f"]],["map"]]],[11,"filter","","Filters the values produced by this stream according to the provided predicate.",67,[[["self"],["p"]],["filter"]]],[11,"filter_map","","Filters the values produced by this stream while simultaneously mapping them to a different type.",67,[[["self"],["f"]],["filtermap"]]],[11,"then","","Chain on a computation for when a value is ready, passing the resulting item to the provided closure `f`.",67,[[["self"],["f"]],["then"]]],[11,"collect","","Collect all of the values of this stream into a vector, returning a future representing the result of that computation.",67,[[["self"]],["collect"]]],[11,"concat","","Concatenate all results of a stream into a single extendable destination, returning a future representing the end result.",67,[[["self"]],["concat"]]],[11,"fold","","Execute an accumulating computation over a stream, collecting all the values into one final result.",67,[[["self"],["t"],["f"]],["fold"]]],[11,"flatten","","Flattens a stream of streams into just one continuous stream.",67,[[["self"]],["flatten"]]],[11,"skip_while","","Skip elements on this stream while the predicate provided resolves to `true`.",67,[[["self"],["p"]],["skipwhile"]]],[11,"take_while","","Take elements from this stream while the predicate provided resolves to `true`.",67,[[["self"],["p"]],["takewhile"]]],[11,"for_each","","Runs this stream to completion, executing the provided closure for each element on the stream.",67,[[["self"],["f"]],["foreach"]]],[11,"take","","Creates a new stream of at most `amt` items of the underlying stream.",67,[[["self"],["u64"]],["take"]]],[11,"skip","","Creates a new stream which skips `amt` items of the underlying stream.",67,[[["self"],["u64"]],["skip"]]],[11,"fuse","","Fuse a stream such that `poll_next` will never again be called once it has finished.",67,[[["self"]],["fuse"]]],[11,"by_ref","","Borrows a stream, rather than consuming it.",67,[[["self"]],["self"]]],[11,"catch_unwind","","Catches unwinding panics while polling the stream.",67,[[["self"]],["catchunwind"]]],[11,"buffered","","An adaptor for creating a buffered list of pending futures.",67,[[["self"],["usize"]],["buffered"]]],[11,"buffer_unordered","","An adaptor for creating a buffered list of pending futures (unordered).",67,[[["self"],["usize"]],["bufferunordered"]]],[11,"zip","","An adapter for zipping two streams together.",67,[[["self"],["s"]],["zip"]]],[11,"chain","","Adapter for chaining two stream.",67,[[["self"],["s"]],["chain"]]],[11,"peekable","","Creates a new stream which exposes a `peek` method.",67,[[["self"]],["peekable"]]],[11,"chunks","","An adaptor for chunking up items of the stream inside a vector.",67,[[["self"],["usize"]],["chunks"]]],[11,"select","","Creates a stream that selects the next element from either this stream or the provided one, whichever is ready first.",67,[[["self"],["s"]],["select"]]],[11,"forward","","A future that completes after the given stream has been fully processed into the sink, including flushing.",67,[[["self"],["s"]],["forward"]]],[11,"split","","Splits this `Stream + Sink` object into separate `Stream` and `Sink` objects.",67,N],[11,"inspect","","Do something with each item of this stream, afterwards passing it on.",67,[[["self"],["f"]],["inspect"]]],[11,"left_stream","","Wrap this stream in an `Either` stream, making it the left-hand variant of that `Either`.",67,[[["self"]],["either"]]],[11,"right_stream","","Wrap this stream in an `Either` stream, making it the right-hand variant of that `Either`.",67,[[["self"]],["either"]]],[0,"try_stream","futures_util","Streams",N,N],[3,"TryCollect","futures_util::try_stream","A future which attempts to collect all of the values of a stream.",N,N],[11,"fmt","","",68,[[["self"],["formatter"]],["result"]]],[11,"poll","","",68,[[["pinmut"],["context"]],["poll"]]],[8,"TryStreamExt","","Adapters specific to `Result`-returning streams",N,N],[11,"try_collect","","Attempt to Collect all of the values of this stream into a vector, returning a future representing the result of that computation.",69,[[["self"]],["trycollect"]]],[0,"sink","futures_util","Sinks",N,N],[3,"Close","futures_util::sink","Future for the `close` combinator, which polls the sink until all data has been closed.",N,N],[3,"Fanout","","Sink that clones incoming items and forwards them to two sinks at the same time.",N,N],[3,"Flush","","Future for the `flush` combinator, which polls the sink until all data has been flushed.",N,N],[3,"SinkErrInto","","A sink combinator to change the error type of a sink.",N,N],[3,"SinkMapErr","","Sink for the `Sink::sink_map_err` combinator.",N,N],[3,"Send","","Future for the `Sink::send` combinator, which sends a value to a sink and then waits until the sink has fully flushed.",N,N],[3,"SendAll","","Future for the `Sink::send_all` combinator, which sends a stream of values to a sink and then waits until the sink has fully flushed those values.",N,N],[3,"With","","Sink for the `Sink::with` combinator, chaining a computation to run prior to pushing a value into the underlying sink.",N,N],[3,"WithFlatMap","","Sink for the `Sink::with_flat_map` combinator, chaining a computation that returns an iterator to run prior to pushing a value into the underlying sink.",N,N],[3,"Buffer","","Sink for the `Sink::buffer` combinator, which buffers up to some fixed number of values when the underlying sink is unable to accept them.",N,N],[11,"fmt","","",70,[[["self"],["formatter"]],["result"]]],[11,"poll","","",70,[[["pinmut"],["context"]],["poll"]]],[11,"into_inner","","Consumes this combinator, returning the underlying sinks.",71,N],[11,"fmt","","",71,[[["self"],["formatter"]],["fmtresult"]]],[11,"poll_ready","","",71,[[["pinmut"],["context"]],["poll",["result"]]]],[11,"start_send","","",71,N],[11,"poll_flush","","",71,[[["pinmut"],["context"]],["poll",["result"]]]],[11,"poll_close","","",71,[[["pinmut"],["context"]],["poll",["result"]]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result"]]],[11,"poll","","",72,[[["pinmut"],["context"]],["poll"]]],[11,"fmt","","",73,[[["self"],["formatter"]],["result"]]],[11,"get_ref","","Get a shared reference to the inner sink.",73,[[["self"]],["si"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",73,[[["self"]],["si"]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",73,[[["self"]],["si"]]],[11,"poll_ready","","",73,[[["pinmut"],["context"]],["poll",["result"]]]],[11,"start_send","","",73,N],[11,"poll_flush","","",73,[[["pinmut"],["context"]],["poll",["result"]]]],[11,"poll_close","","",73,[[["pinmut"],["context"]],["poll",["result"]]]],[11,"poll_next","","",73,[[["pinmut"],["context"]],["poll",["option"]]]],[11,"fmt","","",74,[[["self"],["formatter"]],["result"]]],[11,"get_ref","","Get a shared reference to the inner sink.",74,[[["self"]],["si"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",74,[[["self"]],["si"]]],[11,"get_pinned_mut","","Get a pinned reference to the inner sink.",74,[[["pinmut"]],["pinmut"]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",74,[[["self"]],["si"]]],[11,"poll_ready","","",74,[[["pinmut"],["context"]],["poll",["result"]]]],[11,"start_send","","",74,N],[11,"poll_flush","","",74,[[["pinmut"],["context"]],["poll",["result"]]]],[11,"poll_close","","",74,[[["pinmut"],["context"]],["poll",["result"]]]],[11,"poll_next","","",74,[[["pinmut"],["context"]],["poll",["option"]]]],[11,"fmt","","",75,[[["self"],["formatter"]],["result"]]],[11,"poll","","",75,[[["pinmut"],["context"]],["poll"]]],[11,"fmt","","",76,[[["self"],["formatter"]],["result"]]],[11,"poll","","",76,[[["pinmut"],["context"]],["poll"]]],[11,"fmt","","",77,[[["self"],["formatter"]],["result"]]],[11,"poll_next","","",77,[[["pinmut"],["context"]],["poll",["option"]]]],[11,"get_ref","","Get a shared reference to the inner sink.",77,[[["self"]],["si"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",77,[[["self"]],["si"]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",77,[[["self"]],["si"]]],[11,"poll_ready","","",77,[[["pinmut"],["context"]],["poll",["result"]]]],[11,"start_send","","",77,N],[11,"poll_flush","","",77,[[["pinmut"],["context"]],["poll",["result"]]]],[11,"poll_close","","",77,[[["pinmut"],["context"]],["poll",["result"]]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[11,"get_ref","","Get a shared reference to the inner sink.",78,[[["self"]],["si"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",78,[[["self"]],["si"]]],[11,"get_pin_mut","","Get a pinned mutable reference to the inner sink.",78,[[["pinmut"]],["pinmut"]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",78,[[["self"]],["si"]]],[11,"poll_next","","",78,[[["pinmut"],["context"]],["poll",["option"]]]],[11,"poll_ready","","",78,[[["pinmut"],["context"]],["poll",["result"]]]],[11,"start_send","","",78,N],[11,"poll_flush","","",78,[[["pinmut"],["context"]],["poll",["result"]]]],[11,"poll_close","","",78,[[["pinmut"],["context"]],["poll",["result"]]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result"]]],[11,"get_ref","","Get a shared reference to the inner sink.",79,[[["self"]],["si"]]],[11,"poll_next","","",79,[[["pinmut"],["context"]],["poll",["option"]]]],[11,"poll_ready","","",79,[[["pinmut"],["context"]],["poll",["result"]]]],[11,"start_send","","",79,N],[11,"poll_flush","","",79,[[["pinmut"],["context"]],["poll",["result"]]]],[11,"poll_close","","",79,[[["pinmut"],["context"]],["poll",["result"]]]],[8,"SinkExt","","An extension trait for `Sink`s that provides a variety of convenient combinator functions.",N,N],[11,"with","","Composes a function in front of the sink.",80,[[["self"],["f"]],["with"]]],[11,"with_flat_map","","Composes a function in front of the sink.",80,[[["self"],["f"]],["withflatmap"]]],[11,"sink_map_err","","Transforms the error returned by the sink.",80,[[["self"],["f"]],["sinkmaperr"]]],[11,"sink_err_into","","Map this sink's error to a different error type using the `Into` trait.",80,[[["self"]],["sinkerrinto"]]],[11,"buffer","","Adds a fixed-size buffer to the current sink.",80,[[["self"],["usize"]],["buffer"]]],[11,"close","","Close the sink.",80,[[["self"]],["close"]]],[11,"fanout","","Fanout items to multiple sinks.",80,[[["self"],["s"]],["fanout"]]],[11,"flush","","Flush the sync, processing all pending items.",80,[[["self"]],["flush"]]],[11,"send","","A future that completes after the given item has been fully processed into the sink, including flushing.",80,N],[11,"send_all","","A future that completes after the given stream has been fully processed into the sink, including flushing.",80,[[["self"],["s"]],["sendall"]]],[11,"left_sink","","Wrap this sink in an `Either` sink, making it the left-hand variant of that `Either`.",80,[[["self"]],["either"]]],[11,"right_sink","","Wrap this stream in an `Either` stream, making it the right-hand variant of that `Either`.",80,[[["self"]],["either"]]],[0,"task","futures_util","Task notification",N,N],[3,"AtomicWaker","futures_util::task","A synchronization primitive for task wakeup.",N,N],[11,"new","","Create an `AtomicWaker`.",81,[[],["atomicwaker"]]],[11,"register","","Registers the waker to be notified on calls to `wake`.",81,[[["self"],["waker"]]]],[11,"wake","","Calls `wake` on the last `Waker` passed to `register`.",81,[[["self"]]]],[11,"default","","",81,[[],["self"]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result"]]],[8,"ContextExt","","Extension trait for `Context`, adding methods that require allocation.",N,N],[10,"spawn","","Spawn a future onto the default executor.",82,[[["self"],["fut"]]]],[0,"async_await","futures_util","Await",N,N],[0,"io","","IO",N,N],[8,"AsyncRead","futures_util::io","Read bytes asynchronously.",N,N],[11,"initializer","","Determines if this `AsyncRead`er can work with buffers of uninitialized memory.",83,[[["self"]],["initializer"]]],[10,"poll_read","","Attempt to read from the `AsyncRead` into `buf`.",83,N],[11,"poll_vectored_read","","Attempt to read from the `AsyncRead` into `vec` using vectored IO operations.",83,N],[8,"AsyncWrite","","Write bytes asynchronously.",N,N],[10,"poll_write","","Attempt to write bytes from `buf` into the object.",84,N],[11,"poll_vectored_write","","Attempt to write bytes from `vec` into the object using vectored IO operations.",84,N],[10,"poll_flush","","Attempt to flush the object, ensuring that any buffered data reach their destination.",84,[[["self"],["context"]],["poll",["result"]]]],[10,"poll_close","","Attempt to close the object.",84,[[["self"],["context"]],["poll",["result"]]]],[3,"IoVec","","A specialized byte slice type for performing vectored I/O operations.",N,N],[3,"AllowStdIo","","A simple wrapper type which allows types which implement only implement `std::io::Read` or `std::io::Write` to be used in contexts which expect an `AsyncRead` or `AsyncWrite`.",N,N],[3,"CopyInto","","A future which will copy all data from a reader into a writer.",N,N],[3,"Flush","","A future used to fully flush an I/O object.",N,N],[3,"Read","","A future which can be used to easily read available number of bytes to fill a buffer.",N,N],[3,"ReadExact","","A future which can be used to easily read exactly enough bytes to fill a buffer.",N,N],[3,"ReadToEnd","","A future which can be used to easily read the entire contents of a stream into a vector.",N,N],[3,"Close","","A future used to fully close an I/O object.",N,N],[3,"ReadHalf","","The readable half of an object returned from `AsyncRead::split`.",N,N],[3,"WriteHalf","","The writable half of an object returned from `AsyncRead::split`.",N,N],[3,"Window","","A owned window around an underlying buffer.",N,N],[3,"WriteAll","","A future used to write the entire contents of some data to a stream.",N,N],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"clone","","",85,[[["self"]],["allowstdio"]]],[11,"eq","","",85,[[["self"],["allowstdio"]],["bool"]]],[11,"ne","","",85,[[["self"],["allowstdio"]],["bool"]]],[11,"cmp","","",85,[[["self"],["allowstdio"]],["ordering"]]],[11,"partial_cmp","","",85,[[["self"],["allowstdio"]],["option",["ordering"]]]],[11,"lt","","",85,[[["self"],["allowstdio"]],["bool"]]],[11,"le","","",85,[[["self"],["allowstdio"]],["bool"]]],[11,"gt","","",85,[[["self"],["allowstdio"]],["bool"]]],[11,"ge","","",85,[[["self"],["allowstdio"]],["bool"]]],[11,"hash","","",85,N],[11,"new","","Creates a new `AllowStdIo` from an existing IO object.",85,[[["t"]],["self"]]],[11,"get_ref","","Returns a reference to the contained IO object.",85,[[["self"]],["t"]]],[11,"get_mut","","Returns a mutable reference to the contained IO object.",85,[[["self"]],["t"]]],[11,"into_inner","","Consumes self and returns the contained IO object.",85,[[["self"]],["t"]]],[11,"write","","",85,N],[11,"flush","","",85,[[["self"]],["result"]]],[11,"write_all","","",85,N],[11,"write_fmt","","",85,[[["self"],["arguments"]],["result"]]],[11,"poll_write","","",85,N],[11,"poll_flush","","",85,[[["self"],["context"]],["poll",["result"]]]],[11,"poll_close","","",85,[[["self"],["context"]],["poll",["result"]]]],[11,"read","","",85,N],[11,"read_to_end","","",85,[[["self"],["vec"]],["result",["usize"]]]],[11,"read_to_string","","",85,[[["self"],["string"]],["result",["usize"]]]],[11,"read_exact","","",85,N],[11,"poll_read","","",85,N],[11,"fmt","","",86,[[["self"],["formatter"]],["result"]]],[11,"poll","","",86,[[["pinmut"],["context"]],["poll"]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[11,"poll","","",87,[[["pinmut"],["context"]],["poll"]]],[11,"fmt","","",88,[[["self"],["formatter"]],["result"]]],[11,"poll","","",88,[[["pinmut"],["context"]],["poll"]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"poll","","",89,[[["pinmut"],["context"]],["poll"]]],[11,"fmt","","",90,[[["self"],["formatter"]],["result"]]],[11,"poll","","",90,[[["pinmut"],["context"]],["poll"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"poll","","",91,[[["pinmut"],["context"]],["poll"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"poll_read","","",92,N],[11,"poll_vectored_read","","",92,N],[11,"poll_write","","",93,N],[11,"poll_vectored_write","","",93,N],[11,"poll_flush","","",93,[[["self"],["context"]],["poll",["result"]]]],[11,"poll_close","","",93,[[["self"],["context"]],["poll",["result"]]]],[11,"fmt","","",94,[[["self"],["formatter"]],["result"]]],[11,"new","","Creates a new window around the buffer `t` defaulting to the entire slice.",94,[[["t"]],["window"]]],[11,"get_ref","","Gets a shared reference to the underlying buffer inside of this `Window`.",94,[[["self"]],["t"]]],[11,"get_mut","","Gets a mutable reference to the underlying buffer inside of this `Window`.",94,[[["self"]],["t"]]],[11,"into_inner","","Consumes this `Window`, returning the underlying buffer.",94,[[["self"]],["t"]]],[11,"start","","Returns the starting index of this window into the underlying buffer `T`.",94,[[["self"]],["usize"]]],[11,"end","","Returns the end index of this window into the underlying buffer `T`.",94,[[["self"]],["usize"]]],[11,"set_start","","Changes the starting index of this window to the index specified.",94,[[["self"],["usize"]],["window"]]],[11,"set_end","","Changes the end index of this window to the index specified.",94,[[["self"],["usize"]],["window"]]],[11,"as_ref","","",94,N],[11,"as_mut","","",94,N],[11,"fmt","","",95,[[["self"],["formatter"]],["result"]]],[11,"poll","","",95,[[["pinmut"],["context"]],["poll",["result"]]]],[8,"AsyncReadExt","","An extension trait which adds utility methods to `AsyncRead` types.",N,N],[11,"copy_into","","Creates a future which copies all the bytes from one object to another.",96,[[["self"],["w"]],["copyinto"]]],[11,"read","","Tries to read some bytes directly into the given `buf` in asynchronous manner, returning a future type.",96,N],[11,"read_exact","","Creates a future which will read exactly enough bytes to fill `buf`, returning an error if EOF is hit sooner.",96,N],[11,"read_to_end","","Creates a future which will read all the bytes from this `AsyncRead`.",96,[[["self"],["vec"]],["readtoend"]]],[11,"split","","Helper method for splitting this read/write object into two halves.",96,N],[8,"AsyncWriteExt","","An extension trait which adds utility methods to `AsyncWrite` types.",N,N],[11,"flush","","Creates a future which will entirely flush this `AsyncWrite`.",97,[[["self"]],["flush"]]],[11,"close","","Creates a future which will entirely close this `AsyncWrite`.",97,[[["self"]],["close"]]],[11,"write_all","","Write data into this object.",97,N],[14,"unsafe_pinned","futures_util","A pinned projection of a struct field.",N,N],[14,"unsafe_unpinned","","An unpinned projection of a struct field.",N,N],[14,"pin_mut","","Pins a value on the stack.",N,N],[14,"try_ready","","Extracts the successful type of a `Poll<Result<T, E>>`.",N,N],[14,"try_poll","","Extracts `Poll<T>` from `Poll<Result<T, E>>`.",N,N],[14,"ready","","Extracts the successful type of a `Poll<T>`.",N,N],[14,"poll","","A macro which returns the result of polling a future once within the current `async` context.",N,N],[14,"pending","","A macro which yields to the event loop once. This is similar to returning `Poll::Pending` from a `Future::poll` implementation. If `pending!` is used, the current task should be scheduled to receive a wakeup when it is ready to make progress.",N,N],[14,"join","","",N,N],[14,"select","","",N,N],[11,"deref","futures_util::io","",98,N],[11,"deref_mut","","",98,N],[11,"from_bytes","","",98,N],[11,"from_bytes_mut","","",98,N]],"paths":[[4,"MaybeDone"],[3,"Empty"],[3,"Lazy"],[3,"OptionFuture"],[3,"PollFn"],[3,"Ready"],[3,"Flatten"],[3,"FlattenStream"],[3,"Fuse"],[3,"IntoStream"],[3,"Join"],[3,"Join3"],[3,"Join4"],[3,"Join5"],[3,"Map"],[3,"Then"],[3,"Inspect"],[3,"WithExecutor"],[3,"CatchUnwind"],[3,"Shared"],[8,"FutureExt"],[3,"AndThen"],[3,"ErrInto"],[3,"FlattenSink"],[3,"IntoFuture"],[3,"MapErr"],[3,"MapOk"],[3,"OrElse"],[3,"UnwrapOrElse"],[8,"TryFutureExt"],[3,"ReuniteError"],[3,"Iter"],[3,"Repeat"],[3,"Chain"],[3,"Concat"],[3,"Empty"],[3,"Filter"],[3,"FilterMap"],[3,"Flatten"],[3,"Fold"],[3,"Forward"],[3,"ForEach"],[3,"Fuse"],[3,"StreamFuture"],[3,"Inspect"],[3,"Map"],[3,"Next"],[3,"Once"],[3,"Peekable"],[3,"PollFn"],[3,"Select"],[3,"Skip"],[3,"SkipWhile"],[3,"Take"],[3,"TakeWhile"],[3,"Then"],[3,"Unfold"],[3,"Zip"],[3,"BufferUnordered"],[3,"Buffered"],[3,"CatchUnwind"],[3,"Chunks"],[3,"Collect"],[3,"FuturesOrdered"],[3,"FuturesUnordered"],[3,"SplitStream"],[3,"SplitSink"],[8,"StreamExt"],[3,"TryCollect"],[8,"TryStreamExt"],[3,"Close"],[3,"Fanout"],[3,"Flush"],[3,"SinkErrInto"],[3,"SinkMapErr"],[3,"Send"],[3,"SendAll"],[3,"With"],[3,"WithFlatMap"],[3,"Buffer"],[8,"SinkExt"],[3,"AtomicWaker"],[8,"ContextExt"],[8,"AsyncRead"],[8,"AsyncWrite"],[3,"AllowStdIo"],[3,"CopyInto"],[3,"Flush"],[3,"Read"],[3,"ReadExact"],[3,"ReadToEnd"],[3,"Close"],[3,"ReadHalf"],[3,"WriteHalf"],[3,"Window"],[3,"WriteAll"],[8,"AsyncReadExt"],[8,"AsyncWriteExt"],[3,"IoVec"]]};
searchIndex["iovec"]={"doc":"A specialized byte slice type for performing vectored I/O operations.","items":[[3,"IoVec","iovec","A specialized byte slice type for performing vectored I/O operations.",N,N],[0,"unix","","IoVec extensions for Unix platforms.",N,N],[5,"as_os_slice","iovec::unix","Convert a slice of `IoVec` refs to a slice of `libc::iovec`.",N,N],[5,"as_os_slice_mut","","Convert a mutable slice of `IoVec` refs to a mutable slice of `libc::iovec`.",N,N],[17,"MAX_LENGTH","iovec","Max length of an `IoVec` slice.",N,N],[11,"from_bytes","","",0,N],[11,"from_bytes_mut","","",0,N],[11,"deref","","",0,N],[11,"deref_mut","","",0,N]],"paths":[[3,"IoVec"]]};
searchIndex["lazy_static"]={"doc":"A macro for declaring lazily evaluated statics.","items":[[5,"initialize","lazy_static","Takes a shared reference to a lazy static and initializes it if it has not been already.",N,[[["t"]]]],[8,"LazyStatic","","Support trait for enabling a few common operation on lazy static values.",N,N],[14,"lazy_static","","",N,N]],"paths":[]};
searchIndex["libc"]={"doc":"Crate docs","items":[[3,"group","libc","",N,N],[12,"gr_name","","",0,N],[12,"gr_passwd","","",0,N],[12,"gr_gid","","",0,N],[12,"gr_mem","","",0,N],[3,"utimbuf","","",N,N],[12,"actime","","",1,N],[12,"modtime","","",1,N],[3,"timeval","","",N,N],[12,"tv_sec","","",2,N],[12,"tv_usec","","",2,N],[3,"timespec","","",N,N],[12,"tv_sec","","",3,N],[12,"tv_nsec","","",3,N],[3,"rlimit","","",N,N],[12,"rlim_cur","","",4,N],[12,"rlim_max","","",4,N],[3,"rusage","","",N,N],[12,"ru_utime","","",5,N],[12,"ru_stime","","",5,N],[12,"ru_maxrss","","",5,N],[12,"ru_ixrss","","",5,N],[12,"ru_idrss","","",5,N],[12,"ru_isrss","","",5,N],[12,"ru_minflt","","",5,N],[12,"ru_majflt","","",5,N],[12,"ru_nswap","","",5,N],[12,"ru_inblock","","",5,N],[12,"ru_oublock","","",5,N],[12,"ru_msgsnd","","",5,N],[12,"ru_msgrcv","","",5,N],[12,"ru_nsignals","","",5,N],[12,"ru_nvcsw","","",5,N],[12,"ru_nivcsw","","",5,N],[3,"in_addr","","",N,N],[12,"s_addr","","",6,N],[3,"in6_addr","","",N,N],[12,"s6_addr","","",7,N],[3,"ip_mreq","","",N,N],[12,"imr_multiaddr","","",8,N],[12,"imr_interface","","",8,N],[3,"ipv6_mreq","","",N,N],[12,"ipv6mr_multiaddr","","",9,N],[12,"ipv6mr_interface","","",9,N],[3,"hostent","","",N,N],[12,"h_name","","",10,N],[12,"h_aliases","","",10,N],[12,"h_addrtype","","",10,N],[12,"h_length","","",10,N],[12,"h_addr_list","","",10,N],[3,"iovec","","",N,N],[12,"iov_base","","",11,N],[12,"iov_len","","",11,N],[3,"pollfd","","",N,N],[12,"fd","","",12,N],[12,"events","","",12,N],[12,"revents","","",12,N],[3,"winsize","","",N,N],[12,"ws_row","","",13,N],[12,"ws_col","","",13,N],[12,"ws_xpixel","","",13,N],[12,"ws_ypixel","","",13,N],[3,"linger","","",N,N],[12,"l_onoff","","",14,N],[12,"l_linger","","",14,N],[3,"sigval","","",N,N],[12,"sival_ptr","","",15,N],[3,"itimerval","","",N,N],[12,"it_interval","","",16,N],[12,"it_value","","",16,N],[3,"tms","","",N,N],[12,"tms_utime","","",17,N],[12,"tms_stime","","",17,N],[12,"tms_cutime","","",17,N],[12,"tms_cstime","","",17,N],[3,"servent","","",N,N],[12,"s_name","","",18,N],[12,"s_aliases","","",18,N],[12,"s_port","","",18,N],[12,"s_proto","","",18,N],[3,"protoent","","",N,N],[12,"p_name","","",19,N],[12,"p_aliases","","",19,N],[12,"p_proto","","",19,N],[3,"sockaddr","","",N,N],[12,"sa_family","","",20,N],[12,"sa_data","","",20,N],[3,"sockaddr_in","","",N,N],[12,"sin_family","","",21,N],[12,"sin_port","","",21,N],[12,"sin_addr","","",21,N],[12,"sin_zero","","",21,N],[3,"sockaddr_in6","","",N,N],[12,"sin6_family","","",22,N],[12,"sin6_port","","",22,N],[12,"sin6_flowinfo","","",22,N],[12,"sin6_addr","","",22,N],[12,"sin6_scope_id","","",22,N],[3,"sockaddr_un","","",N,N],[12,"sun_family","","",23,N],[12,"sun_path","","",23,N],[3,"sockaddr_storage","","",N,N],[12,"ss_family","","",24,N],[3,"addrinfo","","",N,N],[12,"ai_flags","","",25,N],[12,"ai_family","","",25,N],[12,"ai_socktype","","",25,N],[12,"ai_protocol","","",25,N],[12,"ai_addrlen","","",25,N],[12,"ai_addr","","",25,N],[12,"ai_canonname","","",25,N],[12,"ai_next","","",25,N],[3,"sockaddr_nl","","",N,N],[12,"nl_family","","",26,N],[12,"nl_pid","","",26,N],[12,"nl_groups","","",26,N],[3,"sockaddr_ll","","",N,N],[12,"sll_family","","",27,N],[12,"sll_protocol","","",27,N],[12,"sll_ifindex","","",27,N],[12,"sll_hatype","","",27,N],[12,"sll_pkttype","","",27,N],[12,"sll_halen","","",27,N],[12,"sll_addr","","",27,N],[3,"fd_set","","",N,N],[3,"tm","","",N,N],[12,"tm_sec","","",28,N],[12,"tm_min","","",28,N],[12,"tm_hour","","",28,N],[12,"tm_mday","","",28,N],[12,"tm_mon","","",28,N],[12,"tm_year","","",28,N],[12,"tm_wday","","",28,N],[12,"tm_yday","","",28,N],[12,"tm_isdst","","",28,N],[12,"tm_gmtoff","","",28,N],[12,"tm_zone","","",28,N],[3,"sched_param","","",N,N],[12,"sched_priority","","",29,N],[3,"Dl_info","","",N,N],[12,"dli_fname","","",30,N],[12,"dli_fbase","","",30,N],[12,"dli_sname","","",30,N],[12,"dli_saddr","","",30,N],[3,"epoll_event","","",N,N],[12,"events","","",31,N],[12,"u64","","",31,N],[3,"utsname","","",N,N],[12,"sysname","","",32,N],[12,"nodename","","",32,N],[12,"release","","",32,N],[12,"version","","",32,N],[12,"machine","","",32,N],[12,"domainname","","",32,N],[3,"lconv","","",N,N],[12,"decimal_point","","",33,N],[12,"thousands_sep","","",33,N],[12,"grouping","","",33,N],[12,"int_curr_symbol","","",33,N],[12,"currency_symbol","","",33,N],[12,"mon_decimal_point","","",33,N],[12,"mon_thousands_sep","","",33,N],[12,"mon_grouping","","",33,N],[12,"positive_sign","","",33,N],[12,"negative_sign","","",33,N],[12,"int_frac_digits","","",33,N],[12,"frac_digits","","",33,N],[12,"p_cs_precedes","","",33,N],[12,"p_sep_by_space","","",33,N],[12,"n_cs_precedes","","",33,N],[12,"n_sep_by_space","","",33,N],[12,"p_sign_posn","","",33,N],[12,"n_sign_posn","","",33,N],[12,"int_p_cs_precedes","","",33,N],[12,"int_p_sep_by_space","","",33,N],[12,"int_n_cs_precedes","","",33,N],[12,"int_n_sep_by_space","","",33,N],[12,"int_p_sign_posn","","",33,N],[12,"int_n_sign_posn","","",33,N],[3,"sigevent","","",N,N],[12,"sigev_value","","",34,N],[12,"sigev_signo","","",34,N],[12,"sigev_notify","","",34,N],[12,"sigev_notify_thread_id","","",34,N],[3,"in_pktinfo","","",N,N],[12,"ipi_ifindex","","",35,N],[12,"ipi_spec_dst","","",35,N],[12,"ipi_addr","","",35,N],[3,"ifaddrs","","",N,N],[12,"ifa_next","","",36,N],[12,"ifa_name","","",36,N],[12,"ifa_flags","","",36,N],[12,"ifa_addr","","",36,N],[12,"ifa_netmask","","",36,N],[12,"ifa_ifu","","",36,N],[12,"ifa_data","","",36,N],[3,"in6_rtmsg","","",N,N],[3,"dirent","","",N,N],[12,"d_ino","","",37,N],[12,"d_off","","",37,N],[12,"d_reclen","","",37,N],[12,"d_type","","",37,N],[12,"d_name","","",37,N],[3,"dirent64","","",N,N],[12,"d_ino","","",38,N],[12,"d_off","","",38,N],[12,"d_reclen","","",38,N],[12,"d_type","","",38,N],[12,"d_name","","",38,N],[3,"rlimit64","","",N,N],[12,"rlim_cur","","",39,N],[12,"rlim_max","","",39,N],[3,"glob_t","","",N,N],[12,"gl_pathc","","",40,N],[12,"gl_pathv","","",40,N],[12,"gl_offs","","",40,N],[12,"gl_flags","","",40,N],[3,"pthread_mutex_t","","",N,N],[3,"pthread_rwlock_t","","",N,N],[3,"pthread_mutexattr_t","","",N,N],[3,"pthread_rwlockattr_t","","",N,N],[3,"pthread_cond_t","","",N,N],[3,"pthread_condattr_t","","",N,N],[3,"passwd","","",N,N],[12,"pw_name","","",41,N],[12,"pw_passwd","","",41,N],[12,"pw_uid","","",41,N],[12,"pw_gid","","",41,N],[12,"pw_gecos","","",41,N],[12,"pw_dir","","",41,N],[12,"pw_shell","","",41,N],[3,"spwd","","",N,N],[12,"sp_namp","","",42,N],[12,"sp_pwdp","","",42,N],[12,"sp_lstchg","","",42,N],[12,"sp_min","","",42,N],[12,"sp_max","","",42,N],[12,"sp_warn","","",42,N],[12,"sp_inact","","",42,N],[12,"sp_expire","","",42,N],[12,"sp_flag","","",42,N],[3,"dqblk","","",N,N],[12,"dqb_bhardlimit","","",43,N],[12,"dqb_bsoftlimit","","",43,N],[12,"dqb_curspace","","",43,N],[12,"dqb_ihardlimit","","",43,N],[12,"dqb_isoftlimit","","",43,N],[12,"dqb_curinodes","","",43,N],[12,"dqb_btime","","",43,N],[12,"dqb_itime","","",43,N],[12,"dqb_valid","","",43,N],[3,"signalfd_siginfo","","",N,N],[12,"ssi_signo","","",44,N],[12,"ssi_errno","","",44,N],[12,"ssi_code","","",44,N],[12,"ssi_pid","","",44,N],[12,"ssi_uid","","",44,N],[12,"ssi_fd","","",44,N],[12,"ssi_tid","","",44,N],[12,"ssi_band","","",44,N],[12,"ssi_overrun","","",44,N],[12,"ssi_trapno","","",44,N],[12,"ssi_status","","",44,N],[12,"ssi_int","","",44,N],[12,"ssi_ptr","","",44,N],[12,"ssi_utime","","",44,N],[12,"ssi_stime","","",44,N],[12,"ssi_addr","","",44,N],[3,"itimerspec","","",N,N],[12,"it_interval","","",45,N],[12,"it_value","","",45,N],[3,"fsid_t","","",N,N],[3,"mq_attr","","",N,N],[12,"mq_flags","","",46,N],[12,"mq_maxmsg","","",46,N],[12,"mq_msgsize","","",46,N],[12,"mq_curmsgs","","",46,N],[3,"cpu_set_t","","",N,N],[3,"if_nameindex","","",N,N],[12,"if_index","","",47,N],[12,"if_name","","",47,N],[3,"msginfo","","",N,N],[12,"msgpool","","",48,N],[12,"msgmap","","",48,N],[12,"msgmax","","",48,N],[12,"msgmnb","","",48,N],[12,"msgmni","","",48,N],[12,"msgssz","","",48,N],[12,"msgtql","","",48,N],[12,"msgseg","","",48,N],[3,"mmsghdr","","",N,N],[12,"msg_hdr","","",49,N],[12,"msg_len","","",49,N],[3,"sembuf","","",N,N],[12,"sem_num","","",50,N],[12,"sem_op","","",50,N],[12,"sem_flg","","",50,N],[3,"input_event","","",N,N],[12,"time","","",51,N],[12,"type_","","",51,N],[12,"code","","",51,N],[12,"value","","",51,N],[3,"input_id","","",N,N],[12,"bustype","","",52,N],[12,"vendor","","",52,N],[12,"product","","",52,N],[12,"version","","",52,N],[3,"input_absinfo","","",N,N],[12,"value","","",53,N],[12,"minimum","","",53,N],[12,"maximum","","",53,N],[12,"fuzz","","",53,N],[12,"flat","","",53,N],[12,"resolution","","",53,N],[3,"input_keymap_entry","","",N,N],[12,"flags","","",54,N],[12,"len","","",54,N],[12,"index","","",54,N],[12,"keycode","","",54,N],[12,"scancode","","",54,N],[3,"input_mask","","",N,N],[12,"type_","","",55,N],[12,"codes_size","","",55,N],[12,"codes_ptr","","",55,N],[3,"ff_replay","","",N,N],[12,"length","","",56,N],[12,"delay","","",56,N],[3,"ff_trigger","","",N,N],[12,"button","","",57,N],[12,"interval","","",57,N],[3,"ff_envelope","","",N,N],[12,"attack_length","","",58,N],[12,"attack_level","","",58,N],[12,"fade_length","","",58,N],[12,"fade_level","","",58,N],[3,"ff_constant_effect","","",N,N],[12,"level","","",59,N],[12,"envelope","","",59,N],[3,"ff_ramp_effect","","",N,N],[12,"start_level","","",60,N],[12,"end_level","","",60,N],[12,"envelope","","",60,N],[3,"ff_condition_effect","","",N,N],[12,"right_saturation","","",61,N],[12,"left_saturation","","",61,N],[12,"right_coeff","","",61,N],[12,"left_coeff","","",61,N],[12,"deadband","","",61,N],[12,"center","","",61,N],[3,"ff_periodic_effect","","",N,N],[12,"waveform","","",62,N],[12,"period","","",62,N],[12,"magnitude","","",62,N],[12,"offset","","",62,N],[12,"phase","","",62,N],[12,"envelope","","",62,N],[12,"custom_len","","",62,N],[12,"custom_data","","",62,N],[3,"ff_rumble_effect","","",N,N],[12,"strong_magnitude","","",63,N],[12,"weak_magnitude","","",63,N],[3,"ff_effect","","",N,N],[12,"type_","","",64,N],[12,"id","","",64,N],[12,"direction","","",64,N],[12,"trigger","","",64,N],[12,"replay","","",64,N],[12,"u","","",64,N],[3,"dl_phdr_info","","",N,N],[12,"dlpi_addr","","",65,N],[12,"dlpi_name","","",65,N],[12,"dlpi_phdr","","",65,N],[12,"dlpi_phnum","","",65,N],[12,"dlpi_adds","","",65,N],[12,"dlpi_subs","","",65,N],[12,"dlpi_tls_modid","","",65,N],[12,"dlpi_tls_data","","",65,N],[3,"Elf32_Phdr","","",N,N],[12,"p_type","","",66,N],[12,"p_offset","","",66,N],[12,"p_vaddr","","",66,N],[12,"p_paddr","","",66,N],[12,"p_filesz","","",66,N],[12,"p_memsz","","",66,N],[12,"p_flags","","",66,N],[12,"p_align","","",66,N],[3,"Elf64_Phdr","","",N,N],[12,"p_type","","",67,N],[12,"p_flags","","",67,N],[12,"p_offset","","",67,N],[12,"p_vaddr","","",67,N],[12,"p_paddr","","",67,N],[12,"p_filesz","","",67,N],[12,"p_memsz","","",67,N],[12,"p_align","","",67,N],[3,"ucred","","",N,N],[12,"pid","","",68,N],[12,"uid","","",68,N],[12,"gid","","",68,N],[3,"mntent","","",N,N],[12,"mnt_fsname","","",69,N],[12,"mnt_dir","","",69,N],[12,"mnt_type","","",69,N],[12,"mnt_opts","","",69,N],[12,"mnt_freq","","",69,N],[12,"mnt_passno","","",69,N],[3,"posix_spawn_file_actions_t","","",N,N],[3,"posix_spawnattr_t","","",N,N],[3,"genlmsghdr","","",N,N],[12,"cmd","","",70,N],[12,"version","","",70,N],[12,"reserved","","",70,N],[3,"in6_pktinfo","","",N,N],[12,"ipi6_addr","","",71,N],[12,"ipi6_ifindex","","",71,N],[3,"aiocb","","",N,N],[12,"aio_fildes","","",72,N],[12,"aio_lio_opcode","","",72,N],[12,"aio_reqprio","","",72,N],[12,"aio_buf","","",72,N],[12,"aio_nbytes","","",72,N],[12,"aio_sigevent","","",72,N],[12,"aio_offset","","",72,N],[3,"__exit_status","","",N,N],[12,"e_termination","","",73,N],[12,"e_exit","","",73,N],[3,"__timeval","","",N,N],[12,"tv_sec","","",74,N],[12,"tv_usec","","",74,N],[3,"utmpx","","",N,N],[12,"ut_type","","",75,N],[12,"ut_pid","","",75,N],[12,"ut_line","","",75,N],[12,"ut_id","","",75,N],[12,"ut_user","","",75,N],[12,"ut_host","","",75,N],[12,"ut_exit","","",75,N],[12,"ut_session","","",75,N],[12,"ut_tv","","",75,N],[12,"ut_addr_v6","","",75,N],[3,"sigaction","","",N,N],[12,"sa_sigaction","","",76,N],[12,"sa_mask","","",76,N],[12,"sa_flags","","",76,N],[12,"sa_restorer","","",76,N],[3,"stack_t","","",N,N],[12,"ss_sp","","",77,N],[12,"ss_flags","","",77,N],[12,"ss_size","","",77,N],[3,"siginfo_t","","",N,N],[12,"si_signo","","",78,N],[12,"si_errno","","",78,N],[12,"si_code","","",78,N],[12,"_pad","","",78,N],[3,"glob64_t","","",N,N],[12,"gl_pathc","","",79,N],[12,"gl_pathv","","",79,N],[12,"gl_offs","","",79,N],[12,"gl_flags","","",79,N],[3,"statfs","","",N,N],[12,"f_type","","",80,N],[12,"f_bsize","","",80,N],[12,"f_blocks","","",80,N],[12,"f_bfree","","",80,N],[12,"f_bavail","","",80,N],[12,"f_files","","",80,N],[12,"f_ffree","","",80,N],[12,"f_fsid","","",80,N],[12,"f_namelen","","",80,N],[12,"f_frsize","","",80,N],[3,"msghdr","","",N,N],[12,"msg_name","","",81,N],[12,"msg_namelen","","",81,N],[12,"msg_iov","","",81,N],[12,"msg_iovlen","","",81,N],[12,"msg_control","","",81,N],[12,"msg_controllen","","",81,N],[12,"msg_flags","","",81,N],[3,"cmsghdr","","",N,N],[12,"cmsg_len","","",82,N],[12,"cmsg_level","","",82,N],[12,"cmsg_type","","",82,N],[3,"termios","","",N,N],[12,"c_iflag","","",83,N],[12,"c_oflag","","",83,N],[12,"c_cflag","","",83,N],[12,"c_lflag","","",83,N],[12,"c_line","","",83,N],[12,"c_cc","","",83,N],[12,"c_ispeed","","",83,N],[12,"c_ospeed","","",83,N],[3,"flock","","",N,N],[12,"l_type","","",84,N],[12,"l_whence","","",84,N],[12,"l_start","","",84,N],[12,"l_len","","",84,N],[12,"l_pid","","",84,N],[3,"sem_t","","",N,N],[3,"mallinfo","","",N,N],[12,"arena","","",85,N],[12,"ordblks","","",85,N],[12,"smblks","","",85,N],[12,"hblks","","",85,N],[12,"hblkhd","","",85,N],[12,"usmblks","","",85,N],[12,"fsmblks","","",85,N],[12,"uordblks","","",85,N],[12,"fordblks","","",85,N],[12,"keepcost","","",85,N],[3,"nlmsghdr","","",N,N],[12,"nlmsg_len","","",86,N],[12,"nlmsg_type","","",86,N],[12,"nlmsg_flags","","",86,N],[12,"nlmsg_seq","","",86,N],[12,"nlmsg_pid","","",86,N],[3,"nlmsgerr","","",N,N],[12,"error","","",87,N],[12,"msg","","",87,N],[3,"nl_pktinfo","","",N,N],[12,"group","","",88,N],[3,"nl_mmap_req","","",N,N],[12,"nm_block_size","","",89,N],[12,"nm_block_nr","","",89,N],[12,"nm_frame_size","","",89,N],[12,"nm_frame_nr","","",89,N],[3,"nl_mmap_hdr","","",N,N],[12,"nm_status","","",90,N],[12,"nm_len","","",90,N],[12,"nm_group","","",90,N],[12,"nm_pid","","",90,N],[12,"nm_uid","","",90,N],[12,"nm_gid","","",90,N],[3,"nlattr","","",N,N],[12,"nla_len","","",91,N],[12,"nla_type","","",91,N],[3,"rtentry","","",N,N],[12,"rt_pad1","","",92,N],[12,"rt_dst","","",92,N],[12,"rt_gateway","","",92,N],[12,"rt_genmask","","",92,N],[12,"rt_flags","","",92,N],[12,"rt_pad2","","",92,N],[12,"rt_pad3","","",92,N],[12,"rt_tos","","",92,N],[12,"rt_class","","",92,N],[12,"rt_pad4","","",92,N],[12,"rt_metric","","",92,N],[12,"rt_dev","","",92,N],[12,"rt_mtu","","",92,N],[12,"rt_window","","",92,N],[12,"rt_irtt","","",92,N],[3,"sigset_t","","",N,N],[3,"sysinfo","","",N,N],[12,"uptime","","",93,N],[12,"loads","","",93,N],[12,"totalram","","",93,N],[12,"freeram","","",93,N],[12,"sharedram","","",93,N],[12,"bufferram","","",93,N],[12,"totalswap","","",93,N],[12,"freeswap","","",93,N],[12,"procs","","",93,N],[12,"pad","","",93,N],[12,"totalhigh","","",93,N],[12,"freehigh","","",93,N],[12,"mem_unit","","",93,N],[12,"_f","","",93,N],[3,"msqid_ds","","",N,N],[12,"msg_perm","","",94,N],[12,"msg_stime","","",94,N],[12,"msg_rtime","","",94,N],[12,"msg_ctime","","",94,N],[12,"msg_qnum","","",94,N],[12,"msg_qbytes","","",94,N],[12,"msg_lspid","","",94,N],[12,"msg_lrpid","","",94,N],[3,"stat","","",N,N],[12,"st_dev","","",95,N],[12,"st_ino","","",95,N],[12,"st_nlink","","",95,N],[12,"st_mode","","",95,N],[12,"st_uid","","",95,N],[12,"st_gid","","",95,N],[12,"st_rdev","","",95,N],[12,"st_size","","",95,N],[12,"st_blksize","","",95,N],[12,"st_blocks","","",95,N],[12,"st_atime","","",95,N],[12,"st_atime_nsec","","",95,N],[12,"st_mtime","","",95,N],[12,"st_mtime_nsec","","",95,N],[12,"st_ctime","","",95,N],[12,"st_ctime_nsec","","",95,N],[3,"stat64","","",N,N],[12,"st_dev","","",96,N],[12,"st_ino","","",96,N],[12,"st_nlink","","",96,N],[12,"st_mode","","",96,N],[12,"st_uid","","",96,N],[12,"st_gid","","",96,N],[12,"st_rdev","","",96,N],[12,"st_size","","",96,N],[12,"st_blksize","","",96,N],[12,"st_blocks","","",96,N],[12,"st_atime","","",96,N],[12,"st_atime_nsec","","",96,N],[12,"st_mtime","","",96,N],[12,"st_mtime_nsec","","",96,N],[12,"st_ctime","","",96,N],[12,"st_ctime_nsec","","",96,N],[3,"statfs64","","",N,N],[12,"f_type","","",97,N],[12,"f_bsize","","",97,N],[12,"f_blocks","","",97,N],[12,"f_bfree","","",97,N],[12,"f_bavail","","",97,N],[12,"f_files","","",97,N],[12,"f_ffree","","",97,N],[12,"f_fsid","","",97,N],[12,"f_namelen","","",97,N],[12,"f_frsize","","",97,N],[12,"f_flags","","",97,N],[12,"f_spare","","",97,N],[3,"statvfs64","","",N,N],[12,"f_bsize","","",98,N],[12,"f_frsize","","",98,N],[12,"f_blocks","","",98,N],[12,"f_bfree","","",98,N],[12,"f_bavail","","",98,N],[12,"f_files","","",98,N],[12,"f_ffree","","",98,N],[12,"f_favail","","",98,N],[12,"f_fsid","","",98,N],[12,"f_flag","","",98,N],[12,"f_namemax","","",98,N],[3,"pthread_attr_t","","",N,N],[3,"_libc_fpxreg","","",N,N],[12,"significand","","",99,N],[12,"exponent","","",99,N],[3,"_libc_xmmreg","","",N,N],[12,"element","","",100,N],[3,"_libc_fpstate","","",N,N],[12,"cwd","","",101,N],[12,"swd","","",101,N],[12,"ftw","","",101,N],[12,"fop","","",101,N],[12,"rip","","",101,N],[12,"rdp","","",101,N],[12,"mxcsr","","",101,N],[12,"mxcr_mask","","",101,N],[12,"_st","","",101,N],[12,"_xmm","","",101,N],[3,"user_fpregs_struct","","",N,N],[12,"cwd","","",102,N],[12,"swd","","",102,N],[12,"ftw","","",102,N],[12,"fop","","",102,N],[12,"rip","","",102,N],[12,"rdp","","",102,N],[12,"mxcsr","","",102,N],[12,"mxcr_mask","","",102,N],[12,"st_space","","",102,N],[12,"xmm_space","","",102,N],[3,"user_regs_struct","","",N,N],[12,"r15","","",103,N],[12,"r14","","",103,N],[12,"r13","","",103,N],[12,"r12","","",103,N],[12,"rbp","","",103,N],[12,"rbx","","",103,N],[12,"r11","","",103,N],[12,"r10","","",103,N],[12,"r9","","",103,N],[12,"r8","","",103,N],[12,"rax","","",103,N],[12,"rcx","","",103,N],[12,"rdx","","",103,N],[12,"rsi","","",103,N],[12,"rdi","","",103,N],[12,"orig_rax","","",103,N],[12,"rip","","",103,N],[12,"cs","","",103,N],[12,"eflags","","",103,N],[12,"rsp","","",103,N],[12,"ss","","",103,N],[12,"fs_base","","",103,N],[12,"gs_base","","",103,N],[12,"ds","","",103,N],[12,"es","","",103,N],[12,"fs","","",103,N],[12,"gs","","",103,N],[3,"user","","",N,N],[12,"regs","","",104,N],[12,"u_fpvalid","","",104,N],[12,"i387","","",104,N],[12,"u_tsize","","",104,N],[12,"u_dsize","","",104,N],[12,"u_ssize","","",104,N],[12,"start_code","","",104,N],[12,"start_stack","","",104,N],[12,"signal","","",104,N],[12,"u_ar0","","",104,N],[12,"u_fpstate","","",104,N],[12,"magic","","",104,N],[12,"u_comm","","",104,N],[12,"u_debugreg","","",104,N],[3,"mcontext_t","","",N,N],[12,"gregs","","",105,N],[12,"fpregs","","",105,N],[3,"ucontext_t","","",N,N],[12,"uc_flags","","",106,N],[12,"uc_link","","",106,N],[12,"uc_stack","","",106,N],[12,"uc_mcontext","","",106,N],[12,"uc_sigmask","","",106,N],[3,"ipc_perm","","",N,N],[12,"__key","","",107,N],[12,"uid","","",107,N],[12,"gid","","",107,N],[12,"cuid","","",107,N],[12,"cgid","","",107,N],[12,"mode","","",107,N],[12,"__seq","","",107,N],[3,"shmid_ds","","",N,N],[12,"shm_perm","","",108,N],[12,"shm_segsz","","",108,N],[12,"shm_atime","","",108,N],[12,"shm_dtime","","",108,N],[12,"shm_ctime","","",108,N],[12,"shm_cpid","","",108,N],[12,"shm_lpid","","",108,N],[12,"shm_nattch","","",108,N],[3,"termios2","","",N,N],[12,"c_iflag","","",109,N],[12,"c_oflag","","",109,N],[12,"c_cflag","","",109,N],[12,"c_lflag","","",109,N],[12,"c_line","","",109,N],[12,"c_cc","","",109,N],[12,"c_ispeed","","",109,N],[12,"c_ospeed","","",109,N],[3,"statvfs","","",N,N],[12,"f_bsize","","",110,N],[12,"f_frsize","","",110,N],[12,"f_blocks","","",110,N],[12,"f_bfree","","",110,N],[12,"f_bavail","","",110,N],[12,"f_files","","",110,N],[12,"f_ffree","","",110,N],[12,"f_favail","","",110,N],[12,"f_fsid","","",110,N],[12,"f_flag","","",110,N],[12,"f_namemax","","",110,N],[4,"c_void","","",N,N],[4,"FILE","","",N,N],[4,"fpos_t","","",N,N],[4,"DIR","","",N,N],[4,"locale_t","","",N,N],[4,"timezone","","",N,N],[4,"fpos64_t","","",N,N],[5,"FD_CLR","","",N,N],[5,"FD_ISSET","","",N,N],[5,"FD_SET","","",N,N],[5,"FD_ZERO","","",N,N],[5,"WIFSTOPPED","","",N,[[["c_int"]],["bool"]]],[5,"WSTOPSIG","","",N,[[["c_int"]],["c_int"]]],[5,"WIFCONTINUED","","",N,[[["c_int"]],["bool"]]],[5,"WIFSIGNALED","","",N,[[["c_int"]],["bool"]]],[5,"WTERMSIG","","",N,[[["c_int"]],["c_int"]]],[5,"WIFEXITED","","",N,[[["c_int"]],["bool"]]],[5,"WEXITSTATUS","","",N,[[["c_int"]],["c_int"]]],[5,"WCOREDUMP","","",N,[[["c_int"]],["bool"]]],[5,"QCMD","","",N,[[["c_int"],["c_int"]],["c_int"]]],[5,"IPOPT_COPIED","","",N,[[["u8"]],["u8"]]],[5,"IPOPT_CLASS","","",N,[[["u8"]],["u8"]]],[5,"IPOPT_NUMBER","","",N,[[["u8"]],["u8"]]],[5,"CPU_ZERO","","",N,N],[5,"CPU_SET","","",N,N],[5,"CPU_CLR","","",N,N],[5,"CPU_ISSET","","",N,[[["usize"],["cpu_set_t"]],["bool"]]],[5,"CPU_EQUAL","","",N,[[["cpu_set_t"],["cpu_set_t"]],["bool"]]],[5,"major","","",N,[[["dev_t"]],["c_uint"]]],[5,"minor","","",N,[[["dev_t"]],["c_uint"]]],[5,"makedev","","",N,[[["c_uint"],["c_uint"]],["dev_t"]]],[5,"IPTOS_TOS","","",N,[[["u8"]],["u8"]]],[5,"IPTOS_PREC","","",N,[[["u8"]],["u8"]]],[5,"RT_TOS","","",N,[[["u8"]],["u8"]]],[5,"RT_ADDRCLASS","","",N,[[["u32"]],["u32"]]],[5,"RT_LOCALADDR","","",N,[[["u32"]],["bool"]]],[5,"NLA_ALIGN","","",N,[[["c_int"]],["c_int"]]],[5,"isalnum","","",N,N],[5,"isalpha","","",N,N],[5,"iscntrl","","",N,N],[5,"isdigit","","",N,N],[5,"isgraph","","",N,N],[5,"islower","","",N,N],[5,"isprint","","",N,N],[5,"ispunct","","",N,N],[5,"isspace","","",N,N],[5,"isupper","","",N,N],[5,"isxdigit","","",N,N],[5,"tolower","","",N,N],[5,"toupper","","",N,N],[5,"fopen","","",N,N],[5,"freopen","","",N,N],[5,"fflush","","",N,N],[5,"fclose","","",N,N],[5,"remove","","",N,N],[5,"rename","","",N,N],[5,"tmpfile","","",N,N],[5,"setvbuf","","",N,N],[5,"setbuf","","",N,N],[5,"getchar","","",N,N],[5,"putchar","","",N,N],[5,"fgetc","","",N,N],[5,"fgets","","",N,N],[5,"fputc","","",N,N],[5,"fputs","","",N,N],[5,"puts","","",N,N],[5,"ungetc","","",N,N],[5,"fread","","",N,N],[5,"fwrite","","",N,N],[5,"fseek","","",N,N],[5,"ftell","","",N,N],[5,"rewind","","",N,N],[5,"fgetpos","","",N,N],[5,"fsetpos","","",N,N],[5,"feof","","",N,N],[5,"ferror","","",N,N],[5,"perror","","",N,N],[5,"atoi","","",N,N],[5,"strtod","","",N,N],[5,"strtol","","",N,N],[5,"strtoul","","",N,N],[5,"calloc","","",N,N],[5,"malloc","","",N,N],[5,"realloc","","",N,N],[5,"free","","",N,N],[5,"abort","","",N,N],[5,"exit","","",N,N],[5,"_exit","","",N,N],[5,"atexit","","",N,N],[5,"system","","",N,N],[5,"getenv","","",N,N],[5,"strcpy","","",N,N],[5,"strncpy","","",N,N],[5,"strcat","","",N,N],[5,"strncat","","",N,N],[5,"strcmp","","",N,N],[5,"strncmp","","",N,N],[5,"strcoll","","",N,N],[5,"strchr","","",N,N],[5,"strrchr","","",N,N],[5,"strspn","","",N,N],[5,"strcspn","","",N,N],[5,"strdup","","",N,N],[5,"strpbrk","","",N,N],[5,"strstr","","",N,N],[5,"strlen","","",N,N],[5,"strnlen","","",N,N],[5,"strerror","","",N,N],[5,"strtok","","",N,N],[5,"strxfrm","","",N,N],[5,"wcslen","","",N,N],[5,"wcstombs","","",N,N],[5,"memchr","","",N,N],[5,"memcmp","","",N,N],[5,"memcpy","","",N,N],[5,"memmove","","",N,N],[5,"memset","","",N,N],[5,"abs","","",N,N],[5,"atof","","",N,N],[5,"labs","","",N,N],[5,"rand","","",N,N],[5,"srand","","",N,N],[5,"getpwnam","","",N,N],[5,"getpwuid","","",N,N],[5,"fprintf","","",N,N],[5,"printf","","",N,N],[5,"snprintf","","",N,N],[5,"sprintf","","",N,N],[5,"fscanf","","",N,N],[5,"scanf","","",N,N],[5,"sscanf","","",N,N],[5,"getchar_unlocked","","",N,N],[5,"putchar_unlocked","","",N,N],[5,"socket","","",N,N],[5,"connect","","",N,N],[5,"listen","","",N,N],[5,"accept","","",N,N],[5,"getpeername","","",N,N],[5,"getsockname","","",N,N],[5,"setsockopt","","",N,N],[5,"socketpair","","",N,N],[5,"sendto","","",N,N],[5,"shutdown","","",N,N],[5,"chmod","","",N,N],[5,"fchmod","","",N,N],[5,"fstat","","",N,N],[5,"mkdir","","",N,N],[5,"stat","","",N,N],[5,"pclose","","",N,N],[5,"fdopen","","",N,N],[5,"fileno","","",N,N],[5,"open","","",N,N],[5,"creat","","",N,N],[5,"fcntl","","",N,N],[5,"opendir","","",N,N],[5,"readdir","","",N,N],[5,"readdir_r","","",N,N],[5,"closedir","","",N,N],[5,"rewinddir","","",N,N],[5,"openat","","",N,N],[5,"fchmodat","","",N,N],[5,"fchown","","",N,N],[5,"fchownat","","",N,N],[5,"fstatat","","",N,N],[5,"linkat","","",N,N],[5,"mkdirat","","",N,N],[5,"readlinkat","","",N,N],[5,"renameat","","",N,N],[5,"symlinkat","","",N,N],[5,"unlinkat","","",N,N],[5,"access","","",N,N],[5,"alarm","","",N,N],[5,"chdir","","",N,N],[5,"fchdir","","",N,N],[5,"chown","","",N,N],[5,"lchown","","",N,N],[5,"close","","",N,N],[5,"dup","","",N,N],[5,"dup2","","",N,N],[5,"execl","","",N,N],[5,"execle","","",N,N],[5,"execlp","","",N,N],[5,"execv","","",N,N],[5,"execve","","",N,N],[5,"execvp","","",N,N],[5,"fork","","",N,N],[5,"fpathconf","","",N,N],[5,"getcwd","","",N,N],[5,"getegid","","",N,N],[5,"geteuid","","",N,N],[5,"getgid","","",N,N],[5,"getgroups","","",N,N],[5,"getlogin","","",N,N],[5,"getopt","","",N,N],[5,"getpgid","","",N,N],[5,"getpgrp","","",N,N],[5,"getpid","","",N,N],[5,"getppid","","",N,N],[5,"getuid","","",N,N],[5,"isatty","","",N,N],[5,"link","","",N,N],[5,"lseek","","",N,N],[5,"pathconf","","",N,N],[5,"pause","","",N,N],[5,"pipe","","",N,N],[5,"posix_memalign","","",N,N],[5,"read","","",N,N],[5,"rmdir","","",N,N],[5,"seteuid","","",N,N],[5,"setgid","","",N,N],[5,"setpgid","","",N,N],[5,"setsid","","",N,N],[5,"setuid","","",N,N],[5,"sleep","","",N,N],[5,"nanosleep","","",N,N],[5,"tcgetpgrp","","",N,N],[5,"tcsetpgrp","","",N,N],[5,"ttyname","","",N,N],[5,"unlink","","",N,N],[5,"wait","","",N,N],[5,"waitpid","","",N,N],[5,"write","","",N,N],[5,"pread","","",N,N],[5,"pwrite","","",N,N],[5,"umask","","",N,N],[5,"utime","","",N,N],[5,"kill","","",N,N],[5,"killpg","","",N,N],[5,"mlock","","",N,N],[5,"munlock","","",N,N],[5,"mlockall","","",N,N],[5,"munlockall","","",N,N],[5,"mmap","","",N,N],[5,"munmap","","",N,N],[5,"if_nametoindex","","",N,N],[5,"if_indextoname","","",N,N],[5,"lstat","","",N,N],[5,"fsync","","",N,N],[5,"setenv","","",N,N],[5,"unsetenv","","",N,N],[5,"symlink","","",N,N],[5,"ftruncate","","",N,N],[5,"signal","","",N,N],[5,"getrlimit","","",N,N],[5,"setrlimit","","",N,N],[5,"getrusage","","",N,N],[5,"realpath","","",N,N],[5,"flock","","",N,N],[5,"gettimeofday","","",N,N],[5,"times","","",N,N],[5,"pthread_self","","",N,N],[5,"pthread_join","","",N,N],[5,"pthread_exit","","",N,N],[5,"pthread_attr_init","","",N,N],[5,"pthread_attr_destroy","","",N,N],[5,"pthread_attr_setstacksize","","",N,N],[5,"pthread_attr_setdetachstate","","",N,N],[5,"pthread_detach","","",N,N],[5,"sched_yield","","",N,N],[5,"pthread_key_create","","",N,N],[5,"pthread_key_delete","","",N,N],[5,"pthread_getspecific","","",N,N],[5,"pthread_setspecific","","",N,N],[5,"pthread_mutex_init","","",N,N],[5,"pthread_mutex_destroy","","",N,N],[5,"pthread_mutex_lock","","",N,N],[5,"pthread_mutex_trylock","","",N,N],[5,"pthread_mutex_unlock","","",N,N],[5,"pthread_mutexattr_init","","",N,N],[5,"pthread_mutexattr_destroy","","",N,N],[5,"pthread_mutexattr_settype","","",N,N],[5,"pthread_cond_init","","",N,N],[5,"pthread_cond_wait","","",N,N],[5,"pthread_cond_timedwait","","",N,N],[5,"pthread_cond_signal","","",N,N],[5,"pthread_cond_broadcast","","",N,N],[5,"pthread_cond_destroy","","",N,N],[5,"pthread_condattr_init","","",N,N],[5,"pthread_condattr_destroy","","",N,N],[5,"pthread_rwlock_init","","",N,N],[5,"pthread_rwlock_destroy","","",N,N],[5,"pthread_rwlock_rdlock","","",N,N],[5,"pthread_rwlock_tryrdlock","","",N,N],[5,"pthread_rwlock_wrlock","","",N,N],[5,"pthread_rwlock_trywrlock","","",N,N],[5,"pthread_rwlock_unlock","","",N,N],[5,"pthread_rwlockattr_init","","",N,N],[5,"pthread_rwlockattr_destroy","","",N,N],[5,"strerror_r","","",N,N],[5,"getsockopt","","",N,N],[5,"raise","","",N,N],[5,"sigaction","","",N,N],[5,"utimes","","",N,N],[5,"dlopen","","",N,N],[5,"dlerror","","",N,N],[5,"dlsym","","",N,N],[5,"dlclose","","",N,N],[5,"dladdr","","",N,N],[5,"getaddrinfo","","",N,N],[5,"freeaddrinfo","","",N,N],[5,"gai_strerror","","",N,N],[5,"res_init","","",N,N],[5,"gmtime_r","","",N,N],[5,"localtime_r","","",N,N],[5,"mktime","","",N,N],[5,"time","","",N,N],[5,"gmtime","","",N,N],[5,"localtime","","",N,N],[5,"difftime","","",N,N],[5,"mknod","","",N,N],[5,"uname","","",N,N],[5,"gethostname","","",N,N],[5,"getservbyname","","",N,N],[5,"getprotobyname","","",N,N],[5,"getprotobynumber","","",N,N],[5,"chroot","","",N,N],[5,"usleep","","",N,N],[5,"send","","",N,N],[5,"recv","","",N,N],[5,"putenv","","",N,N],[5,"poll","","",N,N],[5,"select","","",N,N],[5,"setlocale","","",N,N],[5,"localeconv","","",N,N],[5,"sem_destroy","","",N,N],[5,"sem_wait","","",N,N],[5,"sem_trywait","","",N,N],[5,"sem_post","","",N,N],[5,"sem_init","","",N,N],[5,"statvfs","","",N,N],[5,"fstatvfs","","",N,N],[5,"readlink","","",N,N],[5,"sigemptyset","","",N,N],[5,"sigaddset","","",N,N],[5,"sigfillset","","",N,N],[5,"sigdelset","","",N,N],[5,"sigismember","","",N,N],[5,"sigprocmask","","",N,N],[5,"sigpending","","",N,N],[5,"timegm","","",N,N],[5,"getsid","","",N,N],[5,"sysconf","","",N,N],[5,"mkfifo","","",N,N],[5,"pselect","","",N,N],[5,"fseeko","","",N,N],[5,"ftello","","",N,N],[5,"tcdrain","","",N,N],[5,"cfgetispeed","","",N,N],[5,"cfgetospeed","","",N,N],[5,"cfmakeraw","","",N,N],[5,"cfsetispeed","","",N,N],[5,"cfsetospeed","","",N,N],[5,"cfsetspeed","","",N,N],[5,"tcgetattr","","",N,N],[5,"tcsetattr","","",N,N],[5,"tcflow","","",N,N],[5,"tcflush","","",N,N],[5,"tcgetsid","","",N,N],[5,"tcsendbreak","","",N,N],[5,"mkstemp","","",N,N],[5,"mkdtemp","","",N,N],[5,"tmpnam","","",N,N],[5,"openlog","","",N,N],[5,"closelog","","",N,N],[5,"setlogmask","","",N,N],[5,"syslog","","",N,N],[5,"nice","","",N,N],[5,"grantpt","","",N,N],[5,"posix_openpt","","",N,N],[5,"ptsname","","",N,N],[5,"unlockpt","","",N,N],[5,"fdatasync","","",N,N],[5,"mincore","","",N,N],[5,"clock_getres","","",N,N],[5,"clock_gettime","","",N,N],[5,"clock_settime","","",N,N],[5,"dirfd","","",N,N],[5,"pthread_getattr_np","","",N,N],[5,"pthread_attr_getstack","","",N,N],[5,"memalign","","",N,N],[5,"setgroups","","",N,N],[5,"pipe2","","",N,N],[5,"statfs","","",N,N],[5,"statfs64","","",N,N],[5,"fstatfs","","",N,N],[5,"fstatfs64","","",N,N],[5,"statvfs64","","",N,N],[5,"fstatvfs64","","",N,N],[5,"memrchr","","",N,N],[5,"posix_fadvise","","",N,N],[5,"futimens","","",N,N],[5,"utimensat","","",N,N],[5,"duplocale","","",N,N],[5,"freelocale","","",N,N],[5,"newlocale","","",N,N],[5,"uselocale","","",N,N],[5,"creat64","","",N,N],[5,"fstat64","","",N,N],[5,"fstatat64","","",N,N],[5,"ftruncate64","","",N,N],[5,"getrlimit64","","",N,N],[5,"lseek64","","",N,N],[5,"lstat64","","",N,N],[5,"mmap64","","",N,N],[5,"open64","","",N,N],[5,"openat64","","",N,N],[5,"pread64","","",N,N],[5,"preadv64","","",N,N],[5,"pwrite64","","",N,N],[5,"pwritev64","","",N,N],[5,"readdir64","","",N,N],[5,"readdir64_r","","",N,N],[5,"setrlimit64","","",N,N],[5,"stat64","","",N,N],[5,"truncate64","","",N,N],[5,"fdopendir","","",N,N],[5,"mknodat","","",N,N],[5,"pthread_condattr_getclock","","",N,N],[5,"pthread_condattr_setclock","","",N,N],[5,"pthread_condattr_setpshared","","",N,N],[5,"accept4","","",N,N],[5,"pthread_mutexattr_setpshared","","",N,N],[5,"pthread_rwlockattr_getpshared","","",N,N],[5,"pthread_rwlockattr_setpshared","","",N,N],[5,"ptsname_r","","",N,N],[5,"clearenv","","",N,N],[5,"waitid","","",N,N],[5,"setreuid","","",N,N],[5,"setregid","","",N,N],[5,"getresuid","","",N,N],[5,"getresgid","","",N,N],[5,"acct","","",N,N],[5,"brk","","",N,N],[5,"sbrk","","",N,N],[5,"vfork","","",N,N],[5,"setresgid","","",N,N],[5,"setresuid","","",N,N],[5,"wait4","","",N,N],[5,"openpty","","",N,N],[5,"execvpe","","",N,N],[5,"fexecve","","",N,N],[5,"getifaddrs","","",N,N],[5,"freeifaddrs","","",N,N],[5,"bind","","",N,N],[5,"writev","","",N,N],[5,"readv","","",N,N],[5,"sendmsg","","",N,N],[5,"recvmsg","","",N,N],[5,"aio_read","","",N,N],[5,"aio_write","","",N,N],[5,"aio_fsync","","",N,N],[5,"aio_error","","",N,N],[5,"aio_return","","",N,N],[5,"aio_suspend","","",N,N],[5,"aio_cancel","","",N,N],[5,"lio_listio","","",N,N],[5,"lutimes","","",N,N],[5,"setpwent","","",N,N],[5,"endpwent","","",N,N],[5,"getpwent","","",N,N],[5,"setgrent","","",N,N],[5,"endgrent","","",N,N],[5,"getgrent","","",N,N],[5,"setspent","","",N,N],[5,"endspent","","",N,N],[5,"getspent","","",N,N],[5,"getspnam","","",N,N],[5,"shm_open","","",N,N],[5,"shmget","","",N,N],[5,"shmat","","",N,N],[5,"shmdt","","",N,N],[5,"shmctl","","",N,N],[5,"ftok","","",N,N],[5,"semget","","",N,N],[5,"semop","","",N,N],[5,"semctl","","",N,N],[5,"msgctl","","",N,N],[5,"msgget","","",N,N],[5,"msgrcv","","",N,N],[5,"msgsnd","","",N,N],[5,"mprotect","","",N,N],[5,"__errno_location","","",N,N],[5,"fopen64","","",N,N],[5,"freopen64","","",N,N],[5,"tmpfile64","","",N,N],[5,"fgetpos64","","",N,N],[5,"fsetpos64","","",N,N],[5,"fseeko64","","",N,N],[5,"ftello64","","",N,N],[5,"fallocate","","",N,N],[5,"posix_fallocate","","",N,N],[5,"readahead","","",N,N],[5,"getxattr","","",N,N],[5,"lgetxattr","","",N,N],[5,"fgetxattr","","",N,N],[5,"setxattr","","",N,N],[5,"lsetxattr","","",N,N],[5,"fsetxattr","","",N,N],[5,"listxattr","","",N,N],[5,"llistxattr","","",N,N],[5,"flistxattr","","",N,N],[5,"removexattr","","",N,N],[5,"lremovexattr","","",N,N],[5,"fremovexattr","","",N,N],[5,"signalfd","","",N,N],[5,"timerfd_create","","",N,N],[5,"timerfd_gettime","","",N,N],[5,"timerfd_settime","","",N,N],[5,"pwritev","","",N,N],[5,"preadv","","",N,N],[5,"quotactl","","",N,N],[5,"mq_open","","",N,N],[5,"mq_close","","",N,N],[5,"mq_unlink","","",N,N],[5,"mq_receive","","",N,N],[5,"mq_send","","",N,N],[5,"mq_getattr","","",N,N],[5,"mq_setattr","","",N,N],[5,"epoll_pwait","","",N,N],[5,"dup3","","",N,N],[5,"mkostemp","","",N,N],[5,"mkostemps","","",N,N],[5,"sigtimedwait","","",N,N],[5,"sigwaitinfo","","",N,N],[5,"nl_langinfo_l","","",N,N],[5,"getnameinfo","","",N,N],[5,"pthread_setschedprio","","",N,N],[5,"prlimit","","",N,N],[5,"prlimit64","","",N,N],[5,"getloadavg","","",N,N],[5,"process_vm_readv","","",N,N],[5,"process_vm_writev","","",N,N],[5,"reboot","","",N,N],[5,"setfsgid","","",N,N],[5,"setfsuid","","",N,N],[5,"mkfifoat","","",N,N],[5,"if_nameindex","","",N,N],[5,"if_freenameindex","","",N,N],[5,"sync_file_range","","",N,N],[5,"mremap","","",N,N],[5,"glob","","",N,N],[5,"globfree","","",N,N],[5,"posix_madvise","","",N,N],[5,"shm_unlink","","",N,N],[5,"seekdir","","",N,N],[5,"telldir","","",N,N],[5,"madvise","","",N,N],[5,"msync","","",N,N],[5,"remap_file_pages","","",N,N],[5,"recvfrom","","",N,N],[5,"mkstemps","","",N,N],[5,"futimes","","",N,N],[5,"nl_langinfo","","",N,N],[5,"getdomainname","","",N,N],[5,"setdomainname","","",N,N],[5,"vhangup","","",N,N],[5,"sendmmsg","","",N,N],[5,"recvmmsg","","",N,N],[5,"sync","","",N,N],[5,"syscall","","",N,N],[5,"sched_getaffinity","","",N,N],[5,"sched_setaffinity","","",N,N],[5,"epoll_create","","",N,N],[5,"epoll_create1","","",N,N],[5,"epoll_wait","","",N,N],[5,"epoll_ctl","","",N,N],[5,"pthread_getschedparam","","",N,N],[5,"unshare","","",N,N],[5,"umount","","",N,N],[5,"sched_get_priority_max","","",N,N],[5,"tee","","",N,N],[5,"settimeofday","","",N,N],[5,"splice","","",N,N],[5,"eventfd","","",N,N],[5,"sched_rr_get_interval","","",N,N],[5,"sem_timedwait","","",N,N],[5,"sem_getvalue","","",N,N],[5,"sched_setparam","","",N,N],[5,"setns","","",N,N],[5,"swapoff","","",N,N],[5,"vmsplice","","",N,N],[5,"mount","","",N,N],[5,"personality","","",N,N],[5,"prctl","","",N,N],[5,"sched_getparam","","",N,N],[5,"ppoll","","",N,N],[5,"pthread_mutex_timedlock","","",N,N],[5,"clone","","",N,N],[5,"sched_getscheduler","","",N,N],[5,"clock_nanosleep","","",N,N],[5,"pthread_attr_getguardsize","","",N,N],[5,"sethostname","","",N,N],[5,"sched_get_priority_min","","",N,N],[5,"pthread_condattr_getpshared","","",N,N],[5,"sysinfo","","",N,N],[5,"umount2","","",N,N],[5,"pthread_setschedparam","","",N,N],[5,"swapon","","",N,N],[5,"sched_setscheduler","","",N,N],[5,"sendfile","","",N,N],[5,"sigsuspend","","",N,N],[5,"getgrgid_r","","",N,N],[5,"sigaltstack","","",N,N],[5,"sem_close","","",N,N],[5,"getdtablesize","","",N,N],[5,"getgrnam_r","","",N,N],[5,"initgroups","","",N,N],[5,"pthread_sigmask","","",N,N],[5,"sem_open","","",N,N],[5,"getgrnam","","",N,N],[5,"pthread_cancel","","",N,N],[5,"pthread_kill","","",N,N],[5,"sem_unlink","","",N,N],[5,"daemon","","",N,N],[5,"getpwnam_r","","",N,N],[5,"getpwuid_r","","",N,N],[5,"sigwait","","",N,N],[5,"pthread_atfork","","",N,N],[5,"getgrgid","","",N,N],[5,"getgrouplist","","",N,N],[5,"pthread_mutexattr_getpshared","","",N,N],[5,"popen","","",N,N],[5,"faccessat","","",N,N],[5,"pthread_create","","",N,N],[5,"dl_iterate_phdr","","",N,N],[5,"setmntent","","",N,N],[5,"getmntent","","",N,N],[5,"addmntent","","",N,N],[5,"endmntent","","",N,N],[5,"hasmntopt","","",N,N],[5,"posix_spawn","","",N,N],[5,"posix_spawnp","","",N,N],[5,"posix_spawnattr_init","","",N,N],[5,"posix_spawnattr_destroy","","",N,N],[5,"posix_spawnattr_getsigdefault","","",N,N],[5,"posix_spawnattr_setsigdefault","","",N,N],[5,"posix_spawnattr_getsigmask","","",N,N],[5,"posix_spawnattr_setsigmask","","",N,N],[5,"posix_spawnattr_getflags","","",N,N],[5,"posix_spawnattr_setflags","","",N,N],[5,"posix_spawnattr_getpgroup","","",N,N],[5,"posix_spawnattr_setpgroup","","",N,N],[5,"posix_spawnattr_getschedpolicy","","",N,N],[5,"posix_spawnattr_setschedpolicy","","",N,N],[5,"posix_spawnattr_getschedparam","","",N,N],[5,"posix_spawnattr_setschedparam","","",N,N],[5,"posix_spawn_file_actions_init","","",N,N],[5,"posix_spawn_file_actions_destroy","","",N,N],[5,"posix_spawn_file_actions_addopen","","",N,N],[5,"posix_spawn_file_actions_addclose","","",N,N],[5,"posix_spawn_file_actions_adddup2","","",N,N],[5,"fread_unlocked","","",N,N],[5,"utmpxname","","",N,N],[5,"getutxent","","",N,N],[5,"getutxid","","",N,N],[5,"getutxline","","",N,N],[5,"pututxline","","",N,N],[5,"setutxent","","",N,N],[5,"endutxent","","",N,N],[5,"getpt","","",N,N],[5,"ioctl","","",N,N],[5,"backtrace","","",N,N],[5,"glob64","","",N,N],[5,"globfree64","","",N,N],[5,"ptrace","","",N,N],[5,"pthread_attr_getaffinity_np","","",N,N],[5,"pthread_attr_setaffinity_np","","",N,N],[5,"getpriority","","",N,N],[5,"setpriority","","",N,N],[5,"pthread_getaffinity_np","","",N,N],[5,"pthread_setaffinity_np","","",N,N],[5,"pthread_rwlockattr_getkind_np","","",N,N],[5,"pthread_rwlockattr_setkind_np","","",N,N],[5,"sched_getcpu","","",N,N],[5,"mallinfo","","",N,N],[5,"malloc_usable_size","","",N,N],[5,"getauxval","","",N,N],[5,"getpwent_r","","",N,N],[5,"getgrent_r","","",N,N],[5,"getcontext","","",N,N],[5,"setcontext","","",N,N],[5,"makecontext","","",N,N],[5,"swapcontext","","",N,N],[5,"iopl","","",N,N],[5,"ioperm","","",N,N],[5,"sysctl","","",N,N],[11,"clone","","",95,[[["self"]],["stat"]]],[11,"clone","","",96,[[["self"]],["stat64"]]],[11,"clone","","",97,[[["self"]],["statfs64"]]],[11,"clone","","",98,[[["self"]],["statvfs64"]]],[11,"clone","","",111,[[["self"]],["pthread_attr_t"]]],[11,"clone","","",99,[[["self"]],["_libc_fpxreg"]]],[11,"clone","","",100,[[["self"]],["_libc_xmmreg"]]],[11,"clone","","",101,[[["self"]],["_libc_fpstate"]]],[11,"clone","","",102,[[["self"]],["user_fpregs_struct"]]],[11,"clone","","",103,[[["self"]],["user_regs_struct"]]],[11,"clone","","",104,[[["self"]],["user"]]],[11,"clone","","",105,[[["self"]],["mcontext_t"]]],[11,"clone","","",106,[[["self"]],["ucontext_t"]]],[11,"clone","","",107,[[["self"]],["ipc_perm"]]],[11,"clone","","",108,[[["self"]],["shmid_ds"]]],[11,"clone","","",109,[[["self"]],["termios2"]]],[11,"clone","","",110,[[["self"]],["statvfs"]]],[11,"clone","","",112,[[["self"]],["sigset_t"]]],[11,"clone","","",93,[[["self"]],["sysinfo"]]],[11,"clone","","",94,[[["self"]],["msqid_ds"]]],[11,"clone","","",72,[[["self"]],["aiocb"]]],[11,"clone","","",73,[[["self"]],["__exit_status"]]],[11,"clone","","",74,[[["self"]],["__timeval"]]],[11,"clone","","",75,[[["self"]],["utmpx"]]],[11,"clone","","",76,[[["self"]],["sigaction"]]],[11,"clone","","",77,[[["self"]],["stack_t"]]],[11,"clone","","",78,[[["self"]],["siginfo_t"]]],[11,"clone","","",79,[[["self"]],["glob64_t"]]],[11,"clone","","",80,[[["self"]],["statfs"]]],[11,"clone","","",81,[[["self"]],["msghdr"]]],[11,"clone","","",82,[[["self"]],["cmsghdr"]]],[11,"clone","","",83,[[["self"]],["termios"]]],[11,"clone","","",84,[[["self"]],["flock"]]],[11,"clone","","",113,[[["self"]],["sem_t"]]],[11,"clone","","",85,[[["self"]],["mallinfo"]]],[11,"clone","","",86,[[["self"]],["nlmsghdr"]]],[11,"clone","","",87,[[["self"]],["nlmsgerr"]]],[11,"clone","","",88,[[["self"]],["nl_pktinfo"]]],[11,"clone","","",89,[[["self"]],["nl_mmap_req"]]],[11,"clone","","",90,[[["self"]],["nl_mmap_hdr"]]],[11,"clone","","",91,[[["self"]],["nlattr"]]],[11,"clone","","",92,[[["self"]],["rtentry"]]],[11,"clone","","",37,[[["self"]],["dirent"]]],[11,"clone","","",38,[[["self"]],["dirent64"]]],[11,"clone","","",39,[[["self"]],["rlimit64"]]],[11,"clone","","",40,[[["self"]],["glob_t"]]],[11,"clone","","",114,[[["self"]],["pthread_mutex_t"]]],[11,"clone","","",115,[[["self"]],["pthread_rwlock_t"]]],[11,"clone","","",116,[[["self"]],["pthread_mutexattr_t"]]],[11,"clone","","",117,[[["self"]],["pthread_rwlockattr_t"]]],[11,"clone","","",118,[[["self"]],["pthread_cond_t"]]],[11,"clone","","",119,[[["self"]],["pthread_condattr_t"]]],[11,"clone","","",41,[[["self"]],["passwd"]]],[11,"clone","","",42,[[["self"]],["spwd"]]],[11,"clone","","",43,[[["self"]],["dqblk"]]],[11,"clone","","",44,[[["self"]],["signalfd_siginfo"]]],[11,"clone","","",45,[[["self"]],["itimerspec"]]],[11,"clone","","",120,[[["self"]],["fsid_t"]]],[11,"clone","","",46,[[["self"]],["mq_attr"]]],[11,"clone","","",121,[[["self"]],["cpu_set_t"]]],[11,"clone","","",47,[[["self"]],["if_nameindex"]]],[11,"clone","","",48,[[["self"]],["msginfo"]]],[11,"clone","","",49,[[["self"]],["mmsghdr"]]],[11,"clone","","",50,[[["self"]],["sembuf"]]],[11,"clone","","",51,[[["self"]],["input_event"]]],[11,"clone","","",52,[[["self"]],["input_id"]]],[11,"clone","","",53,[[["self"]],["input_absinfo"]]],[11,"clone","","",54,[[["self"]],["input_keymap_entry"]]],[11,"clone","","",55,[[["self"]],["input_mask"]]],[11,"clone","","",56,[[["self"]],["ff_replay"]]],[11,"clone","","",57,[[["self"]],["ff_trigger"]]],[11,"clone","","",58,[[["self"]],["ff_envelope"]]],[11,"clone","","",59,[[["self"]],["ff_constant_effect"]]],[11,"clone","","",60,[[["self"]],["ff_ramp_effect"]]],[11,"clone","","",61,[[["self"]],["ff_condition_effect"]]],[11,"clone","","",62,[[["self"]],["ff_periodic_effect"]]],[11,"clone","","",63,[[["self"]],["ff_rumble_effect"]]],[11,"clone","","",64,[[["self"]],["ff_effect"]]],[11,"clone","","",65,[[["self"]],["dl_phdr_info"]]],[11,"clone","","",66,[[["self"]],["elf32_phdr"]]],[11,"clone","","",67,[[["self"]],["elf64_phdr"]]],[11,"clone","","",68,[[["self"]],["ucred"]]],[11,"clone","","",69,[[["self"]],["mntent"]]],[11,"clone","","",122,[[["self"]],["posix_spawn_file_actions_t"]]],[11,"clone","","",123,[[["self"]],["posix_spawnattr_t"]]],[11,"clone","","",70,[[["self"]],["genlmsghdr"]]],[11,"clone","","",71,[[["self"]],["in6_pktinfo"]]],[11,"clone","","",20,[[["self"]],["sockaddr"]]],[11,"clone","","",21,[[["self"]],["sockaddr_in"]]],[11,"clone","","",22,[[["self"]],["sockaddr_in6"]]],[11,"clone","","",23,[[["self"]],["sockaddr_un"]]],[11,"clone","","",24,[[["self"]],["sockaddr_storage"]]],[11,"clone","","",25,[[["self"]],["addrinfo"]]],[11,"clone","","",26,[[["self"]],["sockaddr_nl"]]],[11,"clone","","",27,[[["self"]],["sockaddr_ll"]]],[11,"clone","","",124,[[["self"]],["fd_set"]]],[11,"clone","","",28,[[["self"]],["tm"]]],[11,"clone","","",29,[[["self"]],["sched_param"]]],[11,"clone","","",30,[[["self"]],["dl_info"]]],[11,"clone","","",31,[[["self"]],["epoll_event"]]],[11,"clone","","",32,[[["self"]],["utsname"]]],[11,"clone","","",33,[[["self"]],["lconv"]]],[11,"clone","","",34,[[["self"]],["sigevent"]]],[11,"clone","","",35,[[["self"]],["in_pktinfo"]]],[11,"clone","","",36,[[["self"]],["ifaddrs"]]],[11,"clone","","",125,[[["self"]],["in6_rtmsg"]]],[11,"clone","","",0,[[["self"]],["group"]]],[11,"clone","","",1,[[["self"]],["utimbuf"]]],[11,"clone","","",2,[[["self"]],["timeval"]]],[11,"clone","","",3,[[["self"]],["timespec"]]],[11,"clone","","",4,[[["self"]],["rlimit"]]],[11,"clone","","",5,[[["self"]],["rusage"]]],[11,"clone","","",6,[[["self"]],["in_addr"]]],[11,"clone","","",7,[[["self"]],["in6_addr"]]],[11,"clone","","",8,[[["self"]],["ip_mreq"]]],[11,"clone","","",9,[[["self"]],["ipv6_mreq"]]],[11,"clone","","",10,[[["self"]],["hostent"]]],[11,"clone","","",11,[[["self"]],["iovec"]]],[11,"clone","","",12,[[["self"]],["pollfd"]]],[11,"clone","","",13,[[["self"]],["winsize"]]],[11,"clone","","",14,[[["self"]],["linger"]]],[11,"clone","","",15,[[["self"]],["sigval"]]],[11,"clone","","",16,[[["self"]],["itimerval"]]],[11,"clone","","",17,[[["self"]],["tms"]]],[11,"clone","","",18,[[["self"]],["servent"]]],[11,"clone","","",19,[[["self"]],["protoent"]]],[6,"int8_t","","",N,N],[6,"int16_t","","",N,N],[6,"int32_t","","",N,N],[6,"int64_t","","",N,N],[6,"uint8_t","","",N,N],[6,"uint16_t","","",N,N],[6,"uint32_t","","",N,N],[6,"uint64_t","","",N,N],[6,"c_schar","","",N,N],[6,"c_uchar","","",N,N],[6,"c_short","","",N,N],[6,"c_ushort","","",N,N],[6,"c_int","","",N,N],[6,"c_uint","","",N,N],[6,"c_float","","",N,N],[6,"c_double","","",N,N],[6,"c_longlong","","",N,N],[6,"c_ulonglong","","",N,N],[6,"intmax_t","","",N,N],[6,"uintmax_t","","",N,N],[6,"size_t","","",N,N],[6,"ptrdiff_t","","",N,N],[6,"intptr_t","","",N,N],[6,"uintptr_t","","",N,N],[6,"ssize_t","","",N,N],[6,"pid_t","","",N,N],[6,"uid_t","","",N,N],[6,"gid_t","","",N,N],[6,"in_addr_t","","",N,N],[6,"in_port_t","","",N,N],[6,"sighandler_t","","",N,N],[6,"cc_t","","",N,N],[6,"sa_family_t","","",N,N],[6,"pthread_key_t","","",N,N],[6,"speed_t","","",N,N],[6,"tcflag_t","","",N,N],[6,"clockid_t","","",N,N],[6,"key_t","","",N,N],[6,"id_t","","",N,N],[6,"useconds_t","","",N,N],[6,"dev_t","","",N,N],[6,"socklen_t","","",N,N],[6,"pthread_t","","",N,N],[6,"mode_t","","",N,N],[6,"ino64_t","","",N,N],[6,"off64_t","","",N,N],[6,"blkcnt64_t","","",N,N],[6,"rlim64_t","","",N,N],[6,"mqd_t","","",N,N],[6,"nfds_t","","",N,N],[6,"nl_item","","",N,N],[6,"idtype_t","","",N,N],[6,"loff_t","","",N,N],[6,"__u8","","",N,N],[6,"__u16","","",N,N],[6,"__s16","","",N,N],[6,"__u32","","",N,N],[6,"__s32","","",N,N],[6,"Elf32_Half","","",N,N],[6,"Elf32_Word","","",N,N],[6,"Elf32_Off","","",N,N],[6,"Elf32_Addr","","",N,N],[6,"Elf64_Half","","",N,N],[6,"Elf64_Word","","",N,N],[6,"Elf64_Off","","",N,N],[6,"Elf64_Addr","","",N,N],[6,"Elf64_Xword","","",N,N],[6,"__priority_which_t","","",N,N],[6,"clock_t","","",N,N],[6,"time_t","","",N,N],[6,"ino_t","","",N,N],[6,"off_t","","",N,N],[6,"blkcnt_t","","",N,N],[6,"__fsword_t","","",N,N],[6,"shmatt_t","","",N,N],[6,"msgqnum_t","","",N,N],[6,"msglen_t","","",N,N],[6,"fsblkcnt_t","","",N,N],[6,"fsfilcnt_t","","",N,N],[6,"rlim_t","","",N,N],[6,"c_char","","",N,N],[6,"wchar_t","","",N,N],[6,"nlink_t","","",N,N],[6,"blksize_t","","",N,N],[6,"greg_t","","",N,N],[6,"suseconds_t","","",N,N],[6,"__u64","","",N,N],[6,"c_long","","",N,N],[6,"c_ulong","","",N,N],[17,"INT_MIN","","",N,N],[17,"INT_MAX","","",N,N],[17,"SIG_DFL","","",N,N],[17,"SIG_IGN","","",N,N],[17,"SIG_ERR","","",N,N],[17,"DT_UNKNOWN","","",N,N],[17,"DT_FIFO","","",N,N],[17,"DT_CHR","","",N,N],[17,"DT_DIR","","",N,N],[17,"DT_BLK","","",N,N],[17,"DT_REG","","",N,N],[17,"DT_LNK","","",N,N],[17,"DT_SOCK","","",N,N],[17,"FD_CLOEXEC","","",N,N],[17,"USRQUOTA","","",N,N],[17,"GRPQUOTA","","",N,N],[17,"SIGIOT","","",N,N],[17,"S_ISUID","","",N,N],[17,"S_ISGID","","",N,N],[17,"S_ISVTX","","",N,N],[17,"IF_NAMESIZE","","",N,N],[17,"IFNAMSIZ","","",N,N],[17,"LOG_EMERG","","",N,N],[17,"LOG_ALERT","","",N,N],[17,"LOG_CRIT","","",N,N],[17,"LOG_ERR","","",N,N],[17,"LOG_WARNING","","",N,N],[17,"LOG_NOTICE","","",N,N],[17,"LOG_INFO","","",N,N],[17,"LOG_DEBUG","","",N,N],[17,"LOG_KERN","","",N,N],[17,"LOG_USER","","",N,N],[17,"LOG_MAIL","","",N,N],[17,"LOG_DAEMON","","",N,N],[17,"LOG_AUTH","","",N,N],[17,"LOG_SYSLOG","","",N,N],[17,"LOG_LPR","","",N,N],[17,"LOG_NEWS","","",N,N],[17,"LOG_UUCP","","",N,N],[17,"LOG_LOCAL0","","",N,N],[17,"LOG_LOCAL1","","",N,N],[17,"LOG_LOCAL2","","",N,N],[17,"LOG_LOCAL3","","",N,N],[17,"LOG_LOCAL4","","",N,N],[17,"LOG_LOCAL5","","",N,N],[17,"LOG_LOCAL6","","",N,N],[17,"LOG_LOCAL7","","",N,N],[17,"LOG_PID","","",N,N],[17,"LOG_CONS","","",N,N],[17,"LOG_ODELAY","","",N,N],[17,"LOG_NDELAY","","",N,N],[17,"LOG_NOWAIT","","",N,N],[17,"LOG_PRIMASK","","",N,N],[17,"LOG_FACMASK","","",N,N],[17,"PRIO_PROCESS","","",N,N],[17,"PRIO_PGRP","","",N,N],[17,"PRIO_USER","","",N,N],[17,"PRIO_MIN","","",N,N],[17,"PRIO_MAX","","",N,N],[17,"IPPROTO_ICMP","","",N,N],[17,"IPPROTO_ICMPV6","","",N,N],[17,"IPPROTO_TCP","","",N,N],[17,"IPPROTO_UDP","","",N,N],[17,"IPPROTO_IP","","",N,N],[17,"IPPROTO_IPV6","","",N,N],[17,"INADDR_LOOPBACK","","",N,N],[17,"INADDR_ANY","","",N,N],[17,"INADDR_BROADCAST","","",N,N],[17,"INADDR_NONE","","",N,N],[17,"EXIT_FAILURE","","",N,N],[17,"EXIT_SUCCESS","","",N,N],[17,"RAND_MAX","","",N,N],[17,"EOF","","",N,N],[17,"SEEK_SET","","",N,N],[17,"SEEK_CUR","","",N,N],[17,"SEEK_END","","",N,N],[17,"_IOFBF","","",N,N],[17,"_IONBF","","",N,N],[17,"_IOLBF","","",N,N],[17,"F_DUPFD","","",N,N],[17,"F_GETFD","","",N,N],[17,"F_SETFD","","",N,N],[17,"F_GETFL","","",N,N],[17,"F_SETFL","","",N,N],[17,"F_SETLEASE","","",N,N],[17,"F_GETLEASE","","",N,N],[17,"F_NOTIFY","","",N,N],[17,"F_CANCELLK","","",N,N],[17,"F_DUPFD_CLOEXEC","","",N,N],[17,"F_SETPIPE_SZ","","",N,N],[17,"F_GETPIPE_SZ","","",N,N],[17,"F_ADD_SEALS","","",N,N],[17,"F_GET_SEALS","","",N,N],[17,"F_SEAL_SEAL","","",N,N],[17,"F_SEAL_SHRINK","","",N,N],[17,"F_SEAL_GROW","","",N,N],[17,"F_SEAL_WRITE","","",N,N],[17,"SIGTRAP","","",N,N],[17,"PTHREAD_CREATE_JOINABLE","","",N,N],[17,"PTHREAD_CREATE_DETACHED","","",N,N],[17,"CLOCK_REALTIME","","",N,N],[17,"CLOCK_MONOTONIC","","",N,N],[17,"CLOCK_PROCESS_CPUTIME_ID","","",N,N],[17,"CLOCK_THREAD_CPUTIME_ID","","",N,N],[17,"CLOCK_MONOTONIC_RAW","","",N,N],[17,"CLOCK_REALTIME_COARSE","","",N,N],[17,"CLOCK_MONOTONIC_COARSE","","",N,N],[17,"CLOCK_BOOTTIME","","",N,N],[17,"CLOCK_REALTIME_ALARM","","",N,N],[17,"CLOCK_BOOTTIME_ALARM","","",N,N],[17,"TIMER_ABSTIME","","",N,N],[17,"RLIMIT_CPU","","",N,N],[17,"RLIMIT_FSIZE","","",N,N],[17,"RLIMIT_DATA","","",N,N],[17,"RLIMIT_STACK","","",N,N],[17,"RLIMIT_CORE","","",N,N],[17,"RLIMIT_LOCKS","","",N,N],[17,"RLIMIT_SIGPENDING","","",N,N],[17,"RLIMIT_MSGQUEUE","","",N,N],[17,"RLIMIT_NICE","","",N,N],[17,"RLIMIT_RTPRIO","","",N,N],[17,"RUSAGE_SELF","","",N,N],[17,"O_RDONLY","","",N,N],[17,"O_WRONLY","","",N,N],[17,"O_RDWR","","",N,N],[17,"SOCK_CLOEXEC","","",N,N],[17,"S_IFIFO","","",N,N],[17,"S_IFCHR","","",N,N],[17,"S_IFBLK","","",N,N],[17,"S_IFDIR","","",N,N],[17,"S_IFREG","","",N,N],[17,"S_IFLNK","","",N,N],[17,"S_IFSOCK","","",N,N],[17,"S_IFMT","","",N,N],[17,"S_IRWXU","","",N,N],[17,"S_IXUSR","","",N,N],[17,"S_IWUSR","","",N,N],[17,"S_IRUSR","","",N,N],[17,"S_IRWXG","","",N,N],[17,"S_IXGRP","","",N,N],[17,"S_IWGRP","","",N,N],[17,"S_IRGRP","","",N,N],[17,"S_IRWXO","","",N,N],[17,"S_IXOTH","","",N,N],[17,"S_IWOTH","","",N,N],[17,"S_IROTH","","",N,N],[17,"F_OK","","",N,N],[17,"R_OK","","",N,N],[17,"W_OK","","",N,N],[17,"X_OK","","",N,N],[17,"STDIN_FILENO","","",N,N],[17,"STDOUT_FILENO","","",N,N],[17,"STDERR_FILENO","","",N,N],[17,"SIGHUP","","",N,N],[17,"SIGINT","","",N,N],[17,"SIGQUIT","","",N,N],[17,"SIGILL","","",N,N],[17,"SIGABRT","","",N,N],[17,"SIGFPE","","",N,N],[17,"SIGKILL","","",N,N],[17,"SIGSEGV","","",N,N],[17,"SIGPIPE","","",N,N],[17,"SIGALRM","","",N,N],[17,"SIGTERM","","",N,N],[17,"PROT_NONE","","",N,N],[17,"PROT_READ","","",N,N],[17,"PROT_WRITE","","",N,N],[17,"PROT_EXEC","","",N,N],[17,"LC_CTYPE","","",N,N],[17,"LC_NUMERIC","","",N,N],[17,"LC_TIME","","",N,N],[17,"LC_COLLATE","","",N,N],[17,"LC_MONETARY","","",N,N],[17,"LC_MESSAGES","","",N,N],[17,"LC_ALL","","",N,N],[17,"LC_CTYPE_MASK","","",N,N],[17,"LC_NUMERIC_MASK","","",N,N],[17,"LC_TIME_MASK","","",N,N],[17,"LC_COLLATE_MASK","","",N,N],[17,"LC_MONETARY_MASK","","",N,N],[17,"LC_MESSAGES_MASK","","",N,N],[17,"MAP_FILE","","",N,N],[17,"MAP_SHARED","","",N,N],[17,"MAP_PRIVATE","","",N,N],[17,"MAP_FIXED","","",N,N],[17,"MAP_FAILED","","",N,N],[17,"MS_ASYNC","","",N,N],[17,"MS_INVALIDATE","","",N,N],[17,"MS_SYNC","","",N,N],[17,"MS_RDONLY","","",N,N],[17,"MS_NOSUID","","",N,N],[17,"MS_NODEV","","",N,N],[17,"MS_NOEXEC","","",N,N],[17,"MS_SYNCHRONOUS","","",N,N],[17,"MS_REMOUNT","","",N,N],[17,"MS_MANDLOCK","","",N,N],[17,"MS_DIRSYNC","","",N,N],[17,"MS_NOATIME","","",N,N],[17,"MS_NODIRATIME","","",N,N],[17,"MS_BIND","","",N,N],[17,"MS_MOVE","","",N,N],[17,"MS_REC","","",N,N],[17,"MS_SILENT","","",N,N],[17,"MS_POSIXACL","","",N,N],[17,"MS_UNBINDABLE","","",N,N],[17,"MS_PRIVATE","","",N,N],[17,"MS_SLAVE","","",N,N],[17,"MS_SHARED","","",N,N],[17,"MS_RELATIME","","",N,N],[17,"MS_KERNMOUNT","","",N,N],[17,"MS_I_VERSION","","",N,N],[17,"MS_STRICTATIME","","",N,N],[17,"MS_ACTIVE","","",N,N],[17,"MS_NOUSER","","",N,N],[17,"MS_MGC_VAL","","",N,N],[17,"MS_MGC_MSK","","",N,N],[17,"MS_RMT_MASK","","",N,N],[17,"EPERM","","",N,N],[17,"ENOENT","","",N,N],[17,"ESRCH","","",N,N],[17,"EINTR","","",N,N],[17,"EIO","","",N,N],[17,"ENXIO","","",N,N],[17,"E2BIG","","",N,N],[17,"ENOEXEC","","",N,N],[17,"EBADF","","",N,N],[17,"ECHILD","","",N,N],[17,"EAGAIN","","",N,N],[17,"ENOMEM","","",N,N],[17,"EACCES","","",N,N],[17,"EFAULT","","",N,N],[17,"ENOTBLK","","",N,N],[17,"EBUSY","","",N,N],[17,"EEXIST","","",N,N],[17,"EXDEV","","",N,N],[17,"ENODEV","","",N,N],[17,"ENOTDIR","","",N,N],[17,"EISDIR","","",N,N],[17,"EINVAL","","",N,N],[17,"ENFILE","","",N,N],[17,"EMFILE","","",N,N],[17,"ENOTTY","","",N,N],[17,"ETXTBSY","","",N,N],[17,"EFBIG","","",N,N],[17,"ENOSPC","","",N,N],[17,"ESPIPE","","",N,N],[17,"EROFS","","",N,N],[17,"EMLINK","","",N,N],[17,"EPIPE","","",N,N],[17,"EDOM","","",N,N],[17,"ERANGE","","",N,N],[17,"EWOULDBLOCK","","",N,N],[17,"SCM_RIGHTS","","",N,N],[17,"SCM_CREDENTIALS","","",N,N],[17,"PROT_GROWSDOWN","","",N,N],[17,"PROT_GROWSUP","","",N,N],[17,"MAP_TYPE","","",N,N],[17,"MADV_NORMAL","","",N,N],[17,"MADV_RANDOM","","",N,N],[17,"MADV_SEQUENTIAL","","",N,N],[17,"MADV_WILLNEED","","",N,N],[17,"MADV_DONTNEED","","",N,N],[17,"MADV_FREE","","",N,N],[17,"MADV_REMOVE","","",N,N],[17,"MADV_DONTFORK","","",N,N],[17,"MADV_DOFORK","","",N,N],[17,"MADV_MERGEABLE","","",N,N],[17,"MADV_UNMERGEABLE","","",N,N],[17,"MADV_HUGEPAGE","","",N,N],[17,"MADV_NOHUGEPAGE","","",N,N],[17,"MADV_DONTDUMP","","",N,N],[17,"MADV_DODUMP","","",N,N],[17,"MADV_HWPOISON","","",N,N],[17,"MADV_SOFT_OFFLINE","","",N,N],[17,"IFF_UP","","",N,N],[17,"IFF_BROADCAST","","",N,N],[17,"IFF_DEBUG","","",N,N],[17,"IFF_LOOPBACK","","",N,N],[17,"IFF_POINTOPOINT","","",N,N],[17,"IFF_NOTRAILERS","","",N,N],[17,"IFF_RUNNING","","",N,N],[17,"IFF_NOARP","","",N,N],[17,"IFF_PROMISC","","",N,N],[17,"IFF_ALLMULTI","","",N,N],[17,"IFF_MASTER","","",N,N],[17,"IFF_SLAVE","","",N,N],[17,"IFF_MULTICAST","","",N,N],[17,"IFF_PORTSEL","","",N,N],[17,"IFF_AUTOMEDIA","","",N,N],[17,"IFF_DYNAMIC","","",N,N],[17,"SOL_IP","","",N,N],[17,"SOL_TCP","","",N,N],[17,"SOL_UDP","","",N,N],[17,"SOL_IPV6","","",N,N],[17,"SOL_ICMPV6","","",N,N],[17,"SOL_RAW","","",N,N],[17,"SOL_DECNET","","",N,N],[17,"SOL_X25","","",N,N],[17,"SOL_PACKET","","",N,N],[17,"SOL_ATM","","",N,N],[17,"SOL_AAL","","",N,N],[17,"SOL_IRDA","","",N,N],[17,"SOL_NETBEUI","","",N,N],[17,"SOL_LLC","","",N,N],[17,"SOL_DCCP","","",N,N],[17,"SOL_NETLINK","","",N,N],[17,"SOL_TIPC","","",N,N],[17,"AF_UNSPEC","","",N,N],[17,"AF_UNIX","","",N,N],[17,"AF_LOCAL","","",N,N],[17,"AF_INET","","",N,N],[17,"AF_AX25","","",N,N],[17,"AF_IPX","","",N,N],[17,"AF_APPLETALK","","",N,N],[17,"AF_NETROM","","",N,N],[17,"AF_BRIDGE","","",N,N],[17,"AF_ATMPVC","","",N,N],[17,"AF_X25","","",N,N],[17,"AF_INET6","","",N,N],[17,"AF_ROSE","","",N,N],[17,"AF_DECnet","","",N,N],[17,"AF_NETBEUI","","",N,N],[17,"AF_SECURITY","","",N,N],[17,"AF_KEY","","",N,N],[17,"AF_NETLINK","","",N,N],[17,"AF_ROUTE","","",N,N],[17,"AF_PACKET","","",N,N],[17,"AF_ASH","","",N,N],[17,"AF_ECONET","","",N,N],[17,"AF_ATMSVC","","",N,N],[17,"AF_RDS","","",N,N],[17,"AF_SNA","","",N,N],[17,"AF_IRDA","","",N,N],[17,"AF_PPPOX","","",N,N],[17,"AF_WANPIPE","","",N,N],[17,"AF_LLC","","",N,N],[17,"AF_CAN","","",N,N],[17,"AF_TIPC","","",N,N],[17,"AF_BLUETOOTH","","",N,N],[17,"AF_IUCV","","",N,N],[17,"AF_RXRPC","","",N,N],[17,"AF_ISDN","","",N,N],[17,"AF_PHONET","","",N,N],[17,"AF_IEEE802154","","",N,N],[17,"AF_CAIF","","",N,N],[17,"AF_ALG","","",N,N],[17,"PF_UNSPEC","","",N,N],[17,"PF_UNIX","","",N,N],[17,"PF_LOCAL","","",N,N],[17,"PF_INET","","",N,N],[17,"PF_AX25","","",N,N],[17,"PF_IPX","","",N,N],[17,"PF_APPLETALK","","",N,N],[17,"PF_NETROM","","",N,N],[17,"PF_BRIDGE","","",N,N],[17,"PF_ATMPVC","","",N,N],[17,"PF_X25","","",N,N],[17,"PF_INET6","","",N,N],[17,"PF_ROSE","","",N,N],[17,"PF_DECnet","","",N,N],[17,"PF_NETBEUI","","",N,N],[17,"PF_SECURITY","","",N,N],[17,"PF_KEY","","",N,N],[17,"PF_NETLINK","","",N,N],[17,"PF_ROUTE","","",N,N],[17,"PF_PACKET","","",N,N],[17,"PF_ASH","","",N,N],[17,"PF_ECONET","","",N,N],[17,"PF_ATMSVC","","",N,N],[17,"PF_RDS","","",N,N],[17,"PF_SNA","","",N,N],[17,"PF_IRDA","","",N,N],[17,"PF_PPPOX","","",N,N],[17,"PF_WANPIPE","","",N,N],[17,"PF_LLC","","",N,N],[17,"PF_CAN","","",N,N],[17,"PF_TIPC","","",N,N],[17,"PF_BLUETOOTH","","",N,N],[17,"PF_IUCV","","",N,N],[17,"PF_RXRPC","","",N,N],[17,"PF_ISDN","","",N,N],[17,"PF_PHONET","","",N,N],[17,"PF_IEEE802154","","",N,N],[17,"PF_CAIF","","",N,N],[17,"PF_ALG","","",N,N],[17,"SOMAXCONN","","",N,N],[17,"MSG_OOB","","",N,N],[17,"MSG_PEEK","","",N,N],[17,"MSG_DONTROUTE","","",N,N],[17,"MSG_CTRUNC","","",N,N],[17,"MSG_TRUNC","","",N,N],[17,"MSG_DONTWAIT","","",N,N],[17,"MSG_EOR","","",N,N],[17,"MSG_WAITALL","","",N,N],[17,"MSG_FIN","","",N,N],[17,"MSG_SYN","","",N,N],[17,"MSG_CONFIRM","","",N,N],[17,"MSG_RST","","",N,N],[17,"MSG_ERRQUEUE","","",N,N],[17,"MSG_NOSIGNAL","","",N,N],[17,"MSG_MORE","","",N,N],[17,"MSG_WAITFORONE","","",N,N],[17,"MSG_FASTOPEN","","",N,N],[17,"MSG_CMSG_CLOEXEC","","",N,N],[17,"SCM_TIMESTAMP","","",N,N],[17,"SOCK_RAW","","",N,N],[17,"SOCK_RDM","","",N,N],[17,"IP_MULTICAST_IF","","",N,N],[17,"IP_MULTICAST_TTL","","",N,N],[17,"IP_MULTICAST_LOOP","","",N,N],[17,"IP_TTL","","",N,N],[17,"IP_HDRINCL","","",N,N],[17,"IP_PKTINFO","","",N,N],[17,"IP_ADD_MEMBERSHIP","","",N,N],[17,"IP_DROP_MEMBERSHIP","","",N,N],[17,"IP_TRANSPARENT","","",N,N],[17,"IPV6_UNICAST_HOPS","","",N,N],[17,"IPV6_MULTICAST_IF","","",N,N],[17,"IPV6_MULTICAST_HOPS","","",N,N],[17,"IPV6_MULTICAST_LOOP","","",N,N],[17,"IPV6_ADD_MEMBERSHIP","","",N,N],[17,"IPV6_DROP_MEMBERSHIP","","",N,N],[17,"IPV6_V6ONLY","","",N,N],[17,"IPV6_RECVPKTINFO","","",N,N],[17,"IPV6_PKTINFO","","",N,N],[17,"TCP_NODELAY","","",N,N],[17,"TCP_MAXSEG","","",N,N],[17,"TCP_CORK","","",N,N],[17,"TCP_KEEPIDLE","","",N,N],[17,"TCP_KEEPINTVL","","",N,N],[17,"TCP_KEEPCNT","","",N,N],[17,"TCP_SYNCNT","","",N,N],[17,"TCP_LINGER2","","",N,N],[17,"TCP_DEFER_ACCEPT","","",N,N],[17,"TCP_WINDOW_CLAMP","","",N,N],[17,"TCP_INFO","","",N,N],[17,"TCP_QUICKACK","","",N,N],[17,"TCP_CONGESTION","","",N,N],[17,"SO_DEBUG","","",N,N],[17,"SHUT_RD","","",N,N],[17,"SHUT_WR","","",N,N],[17,"SHUT_RDWR","","",N,N],[17,"LOCK_SH","","",N,N],[17,"LOCK_EX","","",N,N],[17,"LOCK_NB","","",N,N],[17,"LOCK_UN","","",N,N],[17,"SS_ONSTACK","","",N,N],[17,"SS_DISABLE","","",N,N],[17,"PATH_MAX","","",N,N],[17,"FD_SETSIZE","","",N,N],[17,"EPOLLIN","","",N,N],[17,"EPOLLPRI","","",N,N],[17,"EPOLLOUT","","",N,N],[17,"EPOLLRDNORM","","",N,N],[17,"EPOLLRDBAND","","",N,N],[17,"EPOLLWRNORM","","",N,N],[17,"EPOLLWRBAND","","",N,N],[17,"EPOLLMSG","","",N,N],[17,"EPOLLERR","","",N,N],[17,"EPOLLHUP","","",N,N],[17,"EPOLLET","","",N,N],[17,"EPOLL_CTL_ADD","","",N,N],[17,"EPOLL_CTL_MOD","","",N,N],[17,"EPOLL_CTL_DEL","","",N,N],[17,"MNT_DETACH","","",N,N],[17,"MNT_EXPIRE","","",N,N],[17,"Q_GETFMT","","",N,N],[17,"Q_GETINFO","","",N,N],[17,"Q_SETINFO","","",N,N],[17,"QIF_BLIMITS","","",N,N],[17,"QIF_SPACE","","",N,N],[17,"QIF_ILIMITS","","",N,N],[17,"QIF_INODES","","",N,N],[17,"QIF_BTIME","","",N,N],[17,"QIF_ITIME","","",N,N],[17,"QIF_LIMITS","","",N,N],[17,"QIF_USAGE","","",N,N],[17,"QIF_TIMES","","",N,N],[17,"QIF_ALL","","",N,N],[17,"MNT_FORCE","","",N,N],[17,"Q_SYNC","","",N,N],[17,"Q_QUOTAON","","",N,N],[17,"Q_QUOTAOFF","","",N,N],[17,"Q_GETQUOTA","","",N,N],[17,"Q_SETQUOTA","","",N,N],[17,"TCIOFF","","",N,N],[17,"TCION","","",N,N],[17,"TCOOFF","","",N,N],[17,"TCOON","","",N,N],[17,"TCIFLUSH","","",N,N],[17,"TCOFLUSH","","",N,N],[17,"TCIOFLUSH","","",N,N],[17,"NL0","","",N,N],[17,"NL1","","",N,N],[17,"TAB0","","",N,N],[17,"CR0","","",N,N],[17,"FF0","","",N,N],[17,"BS0","","",N,N],[17,"VT0","","",N,N],[17,"VERASE","","",N,N],[17,"VKILL","","",N,N],[17,"VINTR","","",N,N],[17,"VQUIT","","",N,N],[17,"VLNEXT","","",N,N],[17,"IGNBRK","","",N,N],[17,"BRKINT","","",N,N],[17,"IGNPAR","","",N,N],[17,"PARMRK","","",N,N],[17,"INPCK","","",N,N],[17,"ISTRIP","","",N,N],[17,"INLCR","","",N,N],[17,"IGNCR","","",N,N],[17,"ICRNL","","",N,N],[17,"IXANY","","",N,N],[17,"IMAXBEL","","",N,N],[17,"OPOST","","",N,N],[17,"CS5","","",N,N],[17,"CRTSCTS","","",N,N],[17,"ECHO","","",N,N],[17,"OCRNL","","",N,N],[17,"ONOCR","","",N,N],[17,"ONLRET","","",N,N],[17,"OFILL","","",N,N],[17,"OFDEL","","",N,N],[17,"CLONE_VM","","",N,N],[17,"CLONE_FS","","",N,N],[17,"CLONE_FILES","","",N,N],[17,"CLONE_SIGHAND","","",N,N],[17,"CLONE_PTRACE","","",N,N],[17,"CLONE_VFORK","","",N,N],[17,"CLONE_PARENT","","",N,N],[17,"CLONE_THREAD","","",N,N],[17,"CLONE_NEWNS","","",N,N],[17,"CLONE_SYSVSEM","","",N,N],[17,"CLONE_SETTLS","","",N,N],[17,"CLONE_PARENT_SETTID","","",N,N],[17,"CLONE_CHILD_CLEARTID","","",N,N],[17,"CLONE_DETACHED","","",N,N],[17,"CLONE_UNTRACED","","",N,N],[17,"CLONE_CHILD_SETTID","","",N,N],[17,"CLONE_NEWUTS","","",N,N],[17,"CLONE_NEWIPC","","",N,N],[17,"CLONE_NEWUSER","","",N,N],[17,"CLONE_NEWPID","","",N,N],[17,"CLONE_NEWNET","","",N,N],[17,"CLONE_IO","","",N,N],[17,"CLONE_NEWCGROUP","","",N,N],[17,"WNOHANG","","",N,N],[17,"WUNTRACED","","",N,N],[17,"WSTOPPED","","",N,N],[17,"WEXITED","","",N,N],[17,"WCONTINUED","","",N,N],[17,"WNOWAIT","","",N,N],[17,"PTRACE_O_TRACESYSGOOD","","",N,N],[17,"PTRACE_O_TRACEFORK","","",N,N],[17,"PTRACE_O_TRACEVFORK","","",N,N],[17,"PTRACE_O_TRACECLONE","","",N,N],[17,"PTRACE_O_TRACEEXEC","","",N,N],[17,"PTRACE_O_TRACEVFORKDONE","","",N,N],[17,"PTRACE_O_TRACEEXIT","","",N,N],[17,"PTRACE_O_TRACESECCOMP","","",N,N],[17,"PTRACE_O_EXITKILL","","",N,N],[17,"PTRACE_O_SUSPEND_SECCOMP","","",N,N],[17,"PTRACE_O_MASK","","",N,N],[17,"PTRACE_EVENT_FORK","","",N,N],[17,"PTRACE_EVENT_VFORK","","",N,N],[17,"PTRACE_EVENT_CLONE","","",N,N],[17,"PTRACE_EVENT_EXEC","","",N,N],[17,"PTRACE_EVENT_VFORK_DONE","","",N,N],[17,"PTRACE_EVENT_EXIT","","",N,N],[17,"PTRACE_EVENT_SECCOMP","","",N,N],[17,"__WNOTHREAD","","",N,N],[17,"__WALL","","",N,N],[17,"__WCLONE","","",N,N],[17,"SPLICE_F_MOVE","","",N,N],[17,"SPLICE_F_NONBLOCK","","",N,N],[17,"SPLICE_F_MORE","","",N,N],[17,"SPLICE_F_GIFT","","",N,N],[17,"RTLD_LOCAL","","",N,N],[17,"RTLD_LAZY","","",N,N],[17,"POSIX_FADV_NORMAL","","",N,N],[17,"POSIX_FADV_RANDOM","","",N,N],[17,"POSIX_FADV_SEQUENTIAL","","",N,N],[17,"POSIX_FADV_WILLNEED","","",N,N],[17,"AT_FDCWD","","",N,N],[17,"AT_SYMLINK_NOFOLLOW","","",N,N],[17,"AT_REMOVEDIR","","",N,N],[17,"AT_SYMLINK_FOLLOW","","",N,N],[17,"AT_NO_AUTOMOUNT","","",N,N],[17,"AT_EMPTY_PATH","","",N,N],[17,"LOG_CRON","","",N,N],[17,"LOG_AUTHPRIV","","",N,N],[17,"LOG_FTP","","",N,N],[17,"LOG_PERROR","","",N,N],[17,"PIPE_BUF","","",N,N],[17,"SI_LOAD_SHIFT","","",N,N],[17,"SIGEV_SIGNAL","","",N,N],[17,"SIGEV_NONE","","",N,N],[17,"SIGEV_THREAD","","",N,N],[17,"P_ALL","","",N,N],[17,"P_PID","","",N,N],[17,"P_PGID","","",N,N],[17,"UTIME_OMIT","","",N,N],[17,"UTIME_NOW","","",N,N],[17,"POLLIN","","",N,N],[17,"POLLPRI","","",N,N],[17,"POLLOUT","","",N,N],[17,"POLLERR","","",N,N],[17,"POLLHUP","","",N,N],[17,"POLLNVAL","","",N,N],[17,"POLLRDNORM","","",N,N],[17,"POLLRDBAND","","",N,N],[17,"IPTOS_LOWDELAY","","",N,N],[17,"IPTOS_THROUGHPUT","","",N,N],[17,"IPTOS_RELIABILITY","","",N,N],[17,"IPTOS_MINCOST","","",N,N],[17,"IPTOS_PREC_NETCONTROL","","",N,N],[17,"IPTOS_PREC_INTERNETCONTROL","","",N,N],[17,"IPTOS_PREC_CRITIC_ECP","","",N,N],[17,"IPTOS_PREC_FLASHOVERRIDE","","",N,N],[17,"IPTOS_PREC_FLASH","","",N,N],[17,"IPTOS_PREC_IMMEDIATE","","",N,N],[17,"IPTOS_PREC_PRIORITY","","",N,N],[17,"IPTOS_PREC_ROUTINE","","",N,N],[17,"IPOPT_COPY","","",N,N],[17,"IPOPT_CLASS_MASK","","",N,N],[17,"IPOPT_NUMBER_MASK","","",N,N],[17,"IPOPT_CONTROL","","",N,N],[17,"IPOPT_RESERVED1","","",N,N],[17,"IPOPT_MEASUREMENT","","",N,N],[17,"IPOPT_RESERVED2","","",N,N],[17,"IPOPT_END","","",N,N],[17,"IPOPT_NOOP","","",N,N],[17,"IPOPT_SEC","","",N,N],[17,"IPOPT_LSRR","","",N,N],[17,"IPOPT_TIMESTAMP","","",N,N],[17,"IPOPT_RR","","",N,N],[17,"IPOPT_SID","","",N,N],[17,"IPOPT_SSRR","","",N,N],[17,"IPOPT_RA","","",N,N],[17,"IPVERSION","","",N,N],[17,"MAXTTL","","",N,N],[17,"IPDEFTTL","","",N,N],[17,"IPOPT_OPTVAL","","",N,N],[17,"IPOPT_OLEN","","",N,N],[17,"IPOPT_OFFSET","","",N,N],[17,"IPOPT_MINOFF","","",N,N],[17,"MAX_IPOPTLEN","","",N,N],[17,"IPOPT_NOP","","",N,N],[17,"IPOPT_EOL","","",N,N],[17,"IPOPT_TS","","",N,N],[17,"IPOPT_TS_TSONLY","","",N,N],[17,"IPOPT_TS_TSANDADDR","","",N,N],[17,"IPOPT_TS_PRESPEC","","",N,N],[17,"ABDAY_1","","",N,N],[17,"ABDAY_2","","",N,N],[17,"ABDAY_3","","",N,N],[17,"ABDAY_4","","",N,N],[17,"ABDAY_5","","",N,N],[17,"ABDAY_6","","",N,N],[17,"ABDAY_7","","",N,N],[17,"DAY_1","","",N,N],[17,"DAY_2","","",N,N],[17,"DAY_3","","",N,N],[17,"DAY_4","","",N,N],[17,"DAY_5","","",N,N],[17,"DAY_6","","",N,N],[17,"DAY_7","","",N,N],[17,"ABMON_1","","",N,N],[17,"ABMON_2","","",N,N],[17,"ABMON_3","","",N,N],[17,"ABMON_4","","",N,N],[17,"ABMON_5","","",N,N],[17,"ABMON_6","","",N,N],[17,"ABMON_7","","",N,N],[17,"ABMON_8","","",N,N],[17,"ABMON_9","","",N,N],[17,"ABMON_10","","",N,N],[17,"ABMON_11","","",N,N],[17,"ABMON_12","","",N,N],[17,"MON_1","","",N,N],[17,"MON_2","","",N,N],[17,"MON_3","","",N,N],[17,"MON_4","","",N,N],[17,"MON_5","","",N,N],[17,"MON_6","","",N,N],[17,"MON_7","","",N,N],[17,"MON_8","","",N,N],[17,"MON_9","","",N,N],[17,"MON_10","","",N,N],[17,"MON_11","","",N,N],[17,"MON_12","","",N,N],[17,"AM_STR","","",N,N],[17,"PM_STR","","",N,N],[17,"D_T_FMT","","",N,N],[17,"D_FMT","","",N,N],[17,"T_FMT","","",N,N],[17,"T_FMT_AMPM","","",N,N],[17,"ERA","","",N,N],[17,"ERA_D_FMT","","",N,N],[17,"ALT_DIGITS","","",N,N],[17,"ERA_D_T_FMT","","",N,N],[17,"ERA_T_FMT","","",N,N],[17,"CODESET","","",N,N],[17,"CRNCYSTR","","",N,N],[17,"RUSAGE_THREAD","","",N,N],[17,"RUSAGE_CHILDREN","","",N,N],[17,"RADIXCHAR","","",N,N],[17,"THOUSEP","","",N,N],[17,"YESEXPR","","",N,N],[17,"NOEXPR","","",N,N],[17,"YESSTR","","",N,N],[17,"NOSTR","","",N,N],[17,"FILENAME_MAX","","",N,N],[17,"L_tmpnam","","",N,N],[17,"_PC_LINK_MAX","","",N,N],[17,"_PC_MAX_CANON","","",N,N],[17,"_PC_MAX_INPUT","","",N,N],[17,"_PC_NAME_MAX","","",N,N],[17,"_PC_PATH_MAX","","",N,N],[17,"_PC_PIPE_BUF","","",N,N],[17,"_PC_CHOWN_RESTRICTED","","",N,N],[17,"_PC_NO_TRUNC","","",N,N],[17,"_PC_VDISABLE","","",N,N],[17,"_PC_SYNC_IO","","",N,N],[17,"_PC_ASYNC_IO","","",N,N],[17,"_PC_PRIO_IO","","",N,N],[17,"_PC_SOCK_MAXBUF","","",N,N],[17,"_PC_FILESIZEBITS","","",N,N],[17,"_PC_REC_INCR_XFER_SIZE","","",N,N],[17,"_PC_REC_MAX_XFER_SIZE","","",N,N],[17,"_PC_REC_MIN_XFER_SIZE","","",N,N],[17,"_PC_REC_XFER_ALIGN","","",N,N],[17,"_PC_ALLOC_SIZE_MIN","","",N,N],[17,"_PC_SYMLINK_MAX","","",N,N],[17,"_PC_2_SYMLINKS","","",N,N],[17,"_SC_ARG_MAX","","",N,N],[17,"_SC_CHILD_MAX","","",N,N],[17,"_SC_CLK_TCK","","",N,N],[17,"_SC_NGROUPS_MAX","","",N,N],[17,"_SC_OPEN_MAX","","",N,N],[17,"_SC_STREAM_MAX","","",N,N],[17,"_SC_TZNAME_MAX","","",N,N],[17,"_SC_JOB_CONTROL","","",N,N],[17,"_SC_SAVED_IDS","","",N,N],[17,"_SC_REALTIME_SIGNALS","","",N,N],[17,"_SC_PRIORITY_SCHEDULING","","",N,N],[17,"_SC_TIMERS","","",N,N],[17,"_SC_ASYNCHRONOUS_IO","","",N,N],[17,"_SC_PRIORITIZED_IO","","",N,N],[17,"_SC_SYNCHRONIZED_IO","","",N,N],[17,"_SC_FSYNC","","",N,N],[17,"_SC_MAPPED_FILES","","",N,N],[17,"_SC_MEMLOCK","","",N,N],[17,"_SC_MEMLOCK_RANGE","","",N,N],[17,"_SC_MEMORY_PROTECTION","","",N,N],[17,"_SC_MESSAGE_PASSING","","",N,N],[17,"_SC_SEMAPHORES","","",N,N],[17,"_SC_SHARED_MEMORY_OBJECTS","","",N,N],[17,"_SC_AIO_LISTIO_MAX","","",N,N],[17,"_SC_AIO_MAX","","",N,N],[17,"_SC_AIO_PRIO_DELTA_MAX","","",N,N],[17,"_SC_DELAYTIMER_MAX","","",N,N],[17,"_SC_MQ_OPEN_MAX","","",N,N],[17,"_SC_MQ_PRIO_MAX","","",N,N],[17,"_SC_VERSION","","",N,N],[17,"_SC_PAGESIZE","","",N,N],[17,"_SC_PAGE_SIZE","","",N,N],[17,"_SC_RTSIG_MAX","","",N,N],[17,"_SC_SEM_NSEMS_MAX","","",N,N],[17,"_SC_SEM_VALUE_MAX","","",N,N],[17,"_SC_SIGQUEUE_MAX","","",N,N],[17,"_SC_TIMER_MAX","","",N,N],[17,"_SC_BC_BASE_MAX","","",N,N],[17,"_SC_BC_DIM_MAX","","",N,N],[17,"_SC_BC_SCALE_MAX","","",N,N],[17,"_SC_BC_STRING_MAX","","",N,N],[17,"_SC_COLL_WEIGHTS_MAX","","",N,N],[17,"_SC_EXPR_NEST_MAX","","",N,N],[17,"_SC_LINE_MAX","","",N,N],[17,"_SC_RE_DUP_MAX","","",N,N],[17,"_SC_2_VERSION","","",N,N],[17,"_SC_2_C_BIND","","",N,N],[17,"_SC_2_C_DEV","","",N,N],[17,"_SC_2_FORT_DEV","","",N,N],[17,"_SC_2_FORT_RUN","","",N,N],[17,"_SC_2_SW_DEV","","",N,N],[17,"_SC_2_LOCALEDEF","","",N,N],[17,"_SC_UIO_MAXIOV","","",N,N],[17,"_SC_IOV_MAX","","",N,N],[17,"_SC_THREADS","","",N,N],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",N,N],[17,"_SC_GETGR_R_SIZE_MAX","","",N,N],[17,"_SC_GETPW_R_SIZE_MAX","","",N,N],[17,"_SC_LOGIN_NAME_MAX","","",N,N],[17,"_SC_TTY_NAME_MAX","","",N,N],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",N,N],[17,"_SC_THREAD_KEYS_MAX","","",N,N],[17,"_SC_THREAD_STACK_MIN","","",N,N],[17,"_SC_THREAD_THREADS_MAX","","",N,N],[17,"_SC_THREAD_ATTR_STACKADDR","","",N,N],[17,"_SC_THREAD_ATTR_STACKSIZE","","",N,N],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",N,N],[17,"_SC_THREAD_PRIO_INHERIT","","",N,N],[17,"_SC_THREAD_PRIO_PROTECT","","",N,N],[17,"_SC_THREAD_PROCESS_SHARED","","",N,N],[17,"_SC_NPROCESSORS_CONF","","",N,N],[17,"_SC_NPROCESSORS_ONLN","","",N,N],[17,"_SC_PHYS_PAGES","","",N,N],[17,"_SC_AVPHYS_PAGES","","",N,N],[17,"_SC_ATEXIT_MAX","","",N,N],[17,"_SC_PASS_MAX","","",N,N],[17,"_SC_XOPEN_VERSION","","",N,N],[17,"_SC_XOPEN_XCU_VERSION","","",N,N],[17,"_SC_XOPEN_UNIX","","",N,N],[17,"_SC_XOPEN_CRYPT","","",N,N],[17,"_SC_XOPEN_ENH_I18N","","",N,N],[17,"_SC_XOPEN_SHM","","",N,N],[17,"_SC_2_CHAR_TERM","","",N,N],[17,"_SC_2_UPE","","",N,N],[17,"_SC_XOPEN_XPG2","","",N,N],[17,"_SC_XOPEN_XPG3","","",N,N],[17,"_SC_XOPEN_XPG4","","",N,N],[17,"_SC_NZERO","","",N,N],[17,"_SC_XBS5_ILP32_OFF32","","",N,N],[17,"_SC_XBS5_ILP32_OFFBIG","","",N,N],[17,"_SC_XBS5_LP64_OFF64","","",N,N],[17,"_SC_XBS5_LPBIG_OFFBIG","","",N,N],[17,"_SC_XOPEN_LEGACY","","",N,N],[17,"_SC_XOPEN_REALTIME","","",N,N],[17,"_SC_XOPEN_REALTIME_THREADS","","",N,N],[17,"_SC_ADVISORY_INFO","","",N,N],[17,"_SC_BARRIERS","","",N,N],[17,"_SC_CLOCK_SELECTION","","",N,N],[17,"_SC_CPUTIME","","",N,N],[17,"_SC_THREAD_CPUTIME","","",N,N],[17,"_SC_MONOTONIC_CLOCK","","",N,N],[17,"_SC_READER_WRITER_LOCKS","","",N,N],[17,"_SC_SPIN_LOCKS","","",N,N],[17,"_SC_REGEXP","","",N,N],[17,"_SC_SHELL","","",N,N],[17,"_SC_SPAWN","","",N,N],[17,"_SC_SPORADIC_SERVER","","",N,N],[17,"_SC_THREAD_SPORADIC_SERVER","","",N,N],[17,"_SC_TIMEOUTS","","",N,N],[17,"_SC_TYPED_MEMORY_OBJECTS","","",N,N],[17,"_SC_2_PBS","","",N,N],[17,"_SC_2_PBS_ACCOUNTING","","",N,N],[17,"_SC_2_PBS_LOCATE","","",N,N],[17,"_SC_2_PBS_MESSAGE","","",N,N],[17,"_SC_2_PBS_TRACK","","",N,N],[17,"_SC_SYMLOOP_MAX","","",N,N],[17,"_SC_STREAMS","","",N,N],[17,"_SC_2_PBS_CHECKPOINT","","",N,N],[17,"_SC_V6_ILP32_OFF32","","",N,N],[17,"_SC_V6_ILP32_OFFBIG","","",N,N],[17,"_SC_V6_LP64_OFF64","","",N,N],[17,"_SC_V6_LPBIG_OFFBIG","","",N,N],[17,"_SC_HOST_NAME_MAX","","",N,N],[17,"_SC_TRACE","","",N,N],[17,"_SC_TRACE_EVENT_FILTER","","",N,N],[17,"_SC_TRACE_INHERIT","","",N,N],[17,"_SC_TRACE_LOG","","",N,N],[17,"_SC_IPV6","","",N,N],[17,"_SC_RAW_SOCKETS","","",N,N],[17,"_SC_V7_ILP32_OFF32","","",N,N],[17,"_SC_V7_ILP32_OFFBIG","","",N,N],[17,"_SC_V7_LP64_OFF64","","",N,N],[17,"_SC_V7_LPBIG_OFFBIG","","",N,N],[17,"_SC_SS_REPL_MAX","","",N,N],[17,"_SC_TRACE_EVENT_NAME_MAX","","",N,N],[17,"_SC_TRACE_NAME_MAX","","",N,N],[17,"_SC_TRACE_SYS_MAX","","",N,N],[17,"_SC_TRACE_USER_EVENT_MAX","","",N,N],[17,"_SC_XOPEN_STREAMS","","",N,N],[17,"_SC_THREAD_ROBUST_PRIO_INHERIT","","",N,N],[17,"_SC_THREAD_ROBUST_PRIO_PROTECT","","",N,N],[17,"RLIM_SAVED_MAX","","",N,N],[17,"RLIM_SAVED_CUR","","",N,N],[17,"GLOB_ERR","","",N,N],[17,"GLOB_MARK","","",N,N],[17,"GLOB_NOSORT","","",N,N],[17,"GLOB_DOOFFS","","",N,N],[17,"GLOB_NOCHECK","","",N,N],[17,"GLOB_APPEND","","",N,N],[17,"GLOB_NOESCAPE","","",N,N],[17,"GLOB_NOSPACE","","",N,N],[17,"GLOB_ABORTED","","",N,N],[17,"GLOB_NOMATCH","","",N,N],[17,"POSIX_MADV_NORMAL","","",N,N],[17,"POSIX_MADV_RANDOM","","",N,N],[17,"POSIX_MADV_SEQUENTIAL","","",N,N],[17,"POSIX_MADV_WILLNEED","","",N,N],[17,"S_IEXEC","","",N,N],[17,"S_IWRITE","","",N,N],[17,"S_IREAD","","",N,N],[17,"F_LOCK","","",N,N],[17,"F_TEST","","",N,N],[17,"F_TLOCK","","",N,N],[17,"F_ULOCK","","",N,N],[17,"IFF_LOWER_UP","","",N,N],[17,"IFF_DORMANT","","",N,N],[17,"IFF_ECHO","","",N,N],[17,"IFF_TUN","","",N,N],[17,"IFF_TAP","","",N,N],[17,"IFF_NO_PI","","",N,N],[17,"TUN_READQ_SIZE","","",N,N],[17,"TUN_TUN_DEV","","",N,N],[17,"TUN_TAP_DEV","","",N,N],[17,"TUN_TYPE_MASK","","",N,N],[17,"IFF_ONE_QUEUE","","",N,N],[17,"IFF_VNET_HDR","","",N,N],[17,"IFF_TUN_EXCL","","",N,N],[17,"IFF_MULTI_QUEUE","","",N,N],[17,"IFF_ATTACH_QUEUE","","",N,N],[17,"IFF_DETACH_QUEUE","","",N,N],[17,"IFF_PERSIST","","",N,N],[17,"IFF_NOFILTER","","",N,N],[17,"ST_RDONLY","","",N,N],[17,"ST_NOSUID","","",N,N],[17,"ST_NODEV","","",N,N],[17,"ST_NOEXEC","","",N,N],[17,"ST_SYNCHRONOUS","","",N,N],[17,"ST_MANDLOCK","","",N,N],[17,"ST_WRITE","","",N,N],[17,"ST_APPEND","","",N,N],[17,"ST_IMMUTABLE","","",N,N],[17,"ST_NOATIME","","",N,N],[17,"ST_NODIRATIME","","",N,N],[17,"RTLD_NEXT","","",N,N],[17,"RTLD_DEFAULT","","",N,N],[17,"RTLD_NODELETE","","",N,N],[17,"RTLD_NOW","","",N,N],[17,"TCP_MD5SIG","","",N,N],[17,"PTHREAD_MUTEX_INITIALIZER","","",N,N],[17,"PTHREAD_COND_INITIALIZER","","",N,N],[17,"PTHREAD_RWLOCK_INITIALIZER","","",N,N],[17,"PTHREAD_MUTEX_NORMAL","","",N,N],[17,"PTHREAD_MUTEX_RECURSIVE","","",N,N],[17,"PTHREAD_MUTEX_ERRORCHECK","","",N,N],[17,"PTHREAD_MUTEX_DEFAULT","","",N,N],[17,"PTHREAD_PROCESS_PRIVATE","","",N,N],[17,"PTHREAD_PROCESS_SHARED","","",N,N],[17,"__SIZEOF_PTHREAD_COND_T","","",N,N],[17,"RENAME_NOREPLACE","","",N,N],[17,"RENAME_EXCHANGE","","",N,N],[17,"RENAME_WHITEOUT","","",N,N],[17,"SCHED_OTHER","","",N,N],[17,"SCHED_FIFO","","",N,N],[17,"SCHED_RR","","",N,N],[17,"SCHED_BATCH","","",N,N],[17,"SCHED_IDLE","","",N,N],[17,"IPPROTO_HOPOPTS","","Hop-by-hop option header",N,N],[17,"IPPROTO_IGMP","","group mgmt protocol",N,N],[17,"IPPROTO_IPIP","","for compatibility",N,N],[17,"IPPROTO_EGP","","exterior gateway protocol",N,N],[17,"IPPROTO_PUP","","pup",N,N],[17,"IPPROTO_IDP","","xns idp",N,N],[17,"IPPROTO_TP","","tp-4 w/ class negotiation",N,N],[17,"IPPROTO_DCCP","","DCCP",N,N],[17,"IPPROTO_ROUTING","","IP6 routing header",N,N],[17,"IPPROTO_FRAGMENT","","IP6 fragmentation header",N,N],[17,"IPPROTO_RSVP","","resource reservation",N,N],[17,"IPPROTO_GRE","","General Routing Encap.",N,N],[17,"IPPROTO_ESP","","IP6 Encap Sec. Payload",N,N],[17,"IPPROTO_AH","","IP6 Auth Header",N,N],[17,"IPPROTO_NONE","","IP6 no next header",N,N],[17,"IPPROTO_DSTOPTS","","IP6 destination option",N,N],[17,"IPPROTO_MTP","","",N,N],[17,"IPPROTO_BEETPH","","",N,N],[17,"IPPROTO_ENCAP","","encapsulation header",N,N],[17,"IPPROTO_PIM","","Protocol indep. multicast",N,N],[17,"IPPROTO_COMP","","IP Payload Comp. Protocol",N,N],[17,"IPPROTO_SCTP","","SCTP",N,N],[17,"IPPROTO_MH","","",N,N],[17,"IPPROTO_UDPLITE","","",N,N],[17,"IPPROTO_MPLS","","",N,N],[17,"IPPROTO_RAW","","raw IP packet",N,N],[17,"IPPROTO_MAX","","",N,N],[17,"AF_IB","","",N,N],[17,"AF_MPLS","","",N,N],[17,"AF_NFC","","",N,N],[17,"AF_VSOCK","","",N,N],[17,"PF_IB","","",N,N],[17,"PF_MPLS","","",N,N],[17,"PF_NFC","","",N,N],[17,"PF_VSOCK","","",N,N],[17,"IPC_PRIVATE","","",N,N],[17,"IPC_CREAT","","",N,N],[17,"IPC_EXCL","","",N,N],[17,"IPC_NOWAIT","","",N,N],[17,"IPC_RMID","","",N,N],[17,"IPC_SET","","",N,N],[17,"IPC_STAT","","",N,N],[17,"IPC_INFO","","",N,N],[17,"MSG_STAT","","",N,N],[17,"MSG_INFO","","",N,N],[17,"MSG_NOERROR","","",N,N],[17,"MSG_EXCEPT","","",N,N],[17,"MSG_COPY","","",N,N],[17,"SHM_R","","",N,N],[17,"SHM_W","","",N,N],[17,"SHM_RDONLY","","",N,N],[17,"SHM_RND","","",N,N],[17,"SHM_REMAP","","",N,N],[17,"SHM_EXEC","","",N,N],[17,"SHM_LOCK","","",N,N],[17,"SHM_UNLOCK","","",N,N],[17,"SHM_HUGETLB","","",N,N],[17,"SHM_NORESERVE","","",N,N],[17,"EPOLLRDHUP","","",N,N],[17,"EPOLLEXCLUSIVE","","",N,N],[17,"EPOLLONESHOT","","",N,N],[17,"QFMT_VFS_OLD","","",N,N],[17,"QFMT_VFS_V0","","",N,N],[17,"QFMT_VFS_V1","","",N,N],[17,"EFD_SEMAPHORE","","",N,N],[17,"LOG_NFACILITIES","","",N,N],[17,"SEM_FAILED","","",N,N],[17,"RB_AUTOBOOT","","",N,N],[17,"RB_HALT_SYSTEM","","",N,N],[17,"RB_ENABLE_CAD","","",N,N],[17,"RB_DISABLE_CAD","","",N,N],[17,"RB_POWER_OFF","","",N,N],[17,"RB_SW_SUSPEND","","",N,N],[17,"RB_KEXEC","","",N,N],[17,"AI_PASSIVE","","",N,N],[17,"AI_CANONNAME","","",N,N],[17,"AI_NUMERICHOST","","",N,N],[17,"AI_V4MAPPED","","",N,N],[17,"AI_ALL","","",N,N],[17,"AI_ADDRCONFIG","","",N,N],[17,"AI_NUMERICSERV","","",N,N],[17,"EAI_BADFLAGS","","",N,N],[17,"EAI_NONAME","","",N,N],[17,"EAI_AGAIN","","",N,N],[17,"EAI_FAIL","","",N,N],[17,"EAI_NODATA","","",N,N],[17,"EAI_FAMILY","","",N,N],[17,"EAI_SOCKTYPE","","",N,N],[17,"EAI_SERVICE","","",N,N],[17,"EAI_MEMORY","","",N,N],[17,"EAI_SYSTEM","","",N,N],[17,"EAI_OVERFLOW","","",N,N],[17,"NI_NUMERICHOST","","",N,N],[17,"NI_NUMERICSERV","","",N,N],[17,"NI_NOFQDN","","",N,N],[17,"NI_NAMEREQD","","",N,N],[17,"NI_DGRAM","","",N,N],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",N,N],[17,"SYNC_FILE_RANGE_WRITE","","",N,N],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",N,N],[17,"AIO_CANCELED","","",N,N],[17,"AIO_NOTCANCELED","","",N,N],[17,"AIO_ALLDONE","","",N,N],[17,"LIO_READ","","",N,N],[17,"LIO_WRITE","","",N,N],[17,"LIO_NOP","","",N,N],[17,"LIO_WAIT","","",N,N],[17,"LIO_NOWAIT","","",N,N],[17,"MREMAP_MAYMOVE","","",N,N],[17,"MREMAP_FIXED","","",N,N],[17,"PR_SET_PDEATHSIG","","",N,N],[17,"PR_GET_PDEATHSIG","","",N,N],[17,"PR_GET_DUMPABLE","","",N,N],[17,"PR_SET_DUMPABLE","","",N,N],[17,"PR_GET_UNALIGN","","",N,N],[17,"PR_SET_UNALIGN","","",N,N],[17,"PR_UNALIGN_NOPRINT","","",N,N],[17,"PR_UNALIGN_SIGBUS","","",N,N],[17,"PR_GET_KEEPCAPS","","",N,N],[17,"PR_SET_KEEPCAPS","","",N,N],[17,"PR_GET_FPEMU","","",N,N],[17,"PR_SET_FPEMU","","",N,N],[17,"PR_FPEMU_NOPRINT","","",N,N],[17,"PR_FPEMU_SIGFPE","","",N,N],[17,"PR_GET_FPEXC","","",N,N],[17,"PR_SET_FPEXC","","",N,N],[17,"PR_FP_EXC_SW_ENABLE","","",N,N],[17,"PR_FP_EXC_DIV","","",N,N],[17,"PR_FP_EXC_OVF","","",N,N],[17,"PR_FP_EXC_UND","","",N,N],[17,"PR_FP_EXC_RES","","",N,N],[17,"PR_FP_EXC_INV","","",N,N],[17,"PR_FP_EXC_DISABLED","","",N,N],[17,"PR_FP_EXC_NONRECOV","","",N,N],[17,"PR_FP_EXC_ASYNC","","",N,N],[17,"PR_FP_EXC_PRECISE","","",N,N],[17,"PR_GET_TIMING","","",N,N],[17,"PR_SET_TIMING","","",N,N],[17,"PR_TIMING_STATISTICAL","","",N,N],[17,"PR_TIMING_TIMESTAMP","","",N,N],[17,"PR_SET_NAME","","",N,N],[17,"PR_GET_NAME","","",N,N],[17,"PR_GET_ENDIAN","","",N,N],[17,"PR_SET_ENDIAN","","",N,N],[17,"PR_ENDIAN_BIG","","",N,N],[17,"PR_ENDIAN_LITTLE","","",N,N],[17,"PR_ENDIAN_PPC_LITTLE","","",N,N],[17,"PR_GET_SECCOMP","","",N,N],[17,"PR_SET_SECCOMP","","",N,N],[17,"PR_CAPBSET_READ","","",N,N],[17,"PR_CAPBSET_DROP","","",N,N],[17,"PR_GET_TSC","","",N,N],[17,"PR_SET_TSC","","",N,N],[17,"PR_TSC_ENABLE","","",N,N],[17,"PR_TSC_SIGSEGV","","",N,N],[17,"PR_GET_SECUREBITS","","",N,N],[17,"PR_SET_SECUREBITS","","",N,N],[17,"PR_SET_TIMERSLACK","","",N,N],[17,"PR_GET_TIMERSLACK","","",N,N],[17,"PR_TASK_PERF_EVENTS_DISABLE","","",N,N],[17,"PR_TASK_PERF_EVENTS_ENABLE","","",N,N],[17,"PR_MCE_KILL","","",N,N],[17,"PR_MCE_KILL_CLEAR","","",N,N],[17,"PR_MCE_KILL_SET","","",N,N],[17,"PR_MCE_KILL_LATE","","",N,N],[17,"PR_MCE_KILL_EARLY","","",N,N],[17,"PR_MCE_KILL_DEFAULT","","",N,N],[17,"PR_MCE_KILL_GET","","",N,N],[17,"PR_SET_MM","","",N,N],[17,"PR_SET_MM_START_CODE","","",N,N],[17,"PR_SET_MM_END_CODE","","",N,N],[17,"PR_SET_MM_START_DATA","","",N,N],[17,"PR_SET_MM_END_DATA","","",N,N],[17,"PR_SET_MM_START_STACK","","",N,N],[17,"PR_SET_MM_START_BRK","","",N,N],[17,"PR_SET_MM_BRK","","",N,N],[17,"PR_SET_MM_ARG_START","","",N,N],[17,"PR_SET_MM_ARG_END","","",N,N],[17,"PR_SET_MM_ENV_START","","",N,N],[17,"PR_SET_MM_ENV_END","","",N,N],[17,"PR_SET_MM_AUXV","","",N,N],[17,"PR_SET_MM_EXE_FILE","","",N,N],[17,"PR_SET_MM_MAP","","",N,N],[17,"PR_SET_MM_MAP_SIZE","","",N,N],[17,"PR_SET_PTRACER","","",N,N],[17,"PR_SET_CHILD_SUBREAPER","","",N,N],[17,"PR_GET_CHILD_SUBREAPER","","",N,N],[17,"PR_SET_NO_NEW_PRIVS","","",N,N],[17,"PR_GET_NO_NEW_PRIVS","","",N,N],[17,"PR_GET_TID_ADDRESS","","",N,N],[17,"PR_SET_THP_DISABLE","","",N,N],[17,"PR_GET_THP_DISABLE","","",N,N],[17,"PR_MPX_ENABLE_MANAGEMENT","","",N,N],[17,"PR_MPX_DISABLE_MANAGEMENT","","",N,N],[17,"PR_SET_FP_MODE","","",N,N],[17,"PR_GET_FP_MODE","","",N,N],[17,"PR_FP_MODE_FR","","",N,N],[17,"PR_FP_MODE_FRE","","",N,N],[17,"PR_CAP_AMBIENT","","",N,N],[17,"PR_CAP_AMBIENT_IS_SET","","",N,N],[17,"PR_CAP_AMBIENT_RAISE","","",N,N],[17,"PR_CAP_AMBIENT_LOWER","","",N,N],[17,"PR_CAP_AMBIENT_CLEAR_ALL","","",N,N],[17,"GRND_NONBLOCK","","",N,N],[17,"GRND_RANDOM","","",N,N],[17,"SECCOMP_MODE_DISABLED","","",N,N],[17,"SECCOMP_MODE_STRICT","","",N,N],[17,"SECCOMP_MODE_FILTER","","",N,N],[17,"ITIMER_REAL","","",N,N],[17,"ITIMER_VIRTUAL","","",N,N],[17,"ITIMER_PROF","","",N,N],[17,"TFD_CLOEXEC","","",N,N],[17,"TFD_NONBLOCK","","",N,N],[17,"TFD_TIMER_ABSTIME","","",N,N],[17,"XATTR_CREATE","","",N,N],[17,"XATTR_REPLACE","","",N,N],[17,"_POSIX_VDISABLE","","",N,N],[17,"FALLOC_FL_KEEP_SIZE","","",N,N],[17,"FALLOC_FL_PUNCH_HOLE","","",N,N],[17,"FALLOC_FL_COLLAPSE_RANGE","","",N,N],[17,"FALLOC_FL_ZERO_RANGE","","",N,N],[17,"FALLOC_FL_INSERT_RANGE","","",N,N],[17,"FALLOC_FL_UNSHARE_RANGE","","",N,N],[17,"ENOATTR","","",N,N],[17,"SO_ORIGINAL_DST","","",N,N],[17,"IUTF8","","",N,N],[17,"CMSPAR","","",N,N],[17,"MFD_CLOEXEC","","",N,N],[17,"MFD_ALLOW_SEALING","","",N,N],[17,"PT_NULL","","",N,N],[17,"PT_LOAD","","",N,N],[17,"PT_DYNAMIC","","",N,N],[17,"PT_INTERP","","",N,N],[17,"PT_NOTE","","",N,N],[17,"PT_SHLIB","","",N,N],[17,"PT_PHDR","","",N,N],[17,"PT_TLS","","",N,N],[17,"PT_NUM","","",N,N],[17,"PT_LOOS","","",N,N],[17,"PT_GNU_EH_FRAME","","",N,N],[17,"PT_GNU_STACK","","",N,N],[17,"PT_GNU_RELRO","","",N,N],[17,"ETH_ALEN","","",N,N],[17,"ETH_HLEN","","",N,N],[17,"ETH_ZLEN","","",N,N],[17,"ETH_DATA_LEN","","",N,N],[17,"ETH_FRAME_LEN","","",N,N],[17,"ETH_FCS_LEN","","",N,N],[17,"ETH_P_LOOP","","",N,N],[17,"ETH_P_PUP","","",N,N],[17,"ETH_P_PUPAT","","",N,N],[17,"ETH_P_IP","","",N,N],[17,"ETH_P_X25","","",N,N],[17,"ETH_P_ARP","","",N,N],[17,"ETH_P_BPQ","","",N,N],[17,"ETH_P_IEEEPUP","","",N,N],[17,"ETH_P_IEEEPUPAT","","",N,N],[17,"ETH_P_BATMAN","","",N,N],[17,"ETH_P_DEC","","",N,N],[17,"ETH_P_DNA_DL","","",N,N],[17,"ETH_P_DNA_RC","","",N,N],[17,"ETH_P_DNA_RT","","",N,N],[17,"ETH_P_LAT","","",N,N],[17,"ETH_P_DIAG","","",N,N],[17,"ETH_P_CUST","","",N,N],[17,"ETH_P_SCA","","",N,N],[17,"ETH_P_TEB","","",N,N],[17,"ETH_P_RARP","","",N,N],[17,"ETH_P_ATALK","","",N,N],[17,"ETH_P_AARP","","",N,N],[17,"ETH_P_8021Q","","",N,N],[17,"ETH_P_IPX","","",N,N],[17,"ETH_P_IPV6","","",N,N],[17,"ETH_P_PAUSE","","",N,N],[17,"ETH_P_SLOW","","",N,N],[17,"ETH_P_WCCP","","",N,N],[17,"ETH_P_MPLS_UC","","",N,N],[17,"ETH_P_MPLS_MC","","",N,N],[17,"ETH_P_ATMMPOA","","",N,N],[17,"ETH_P_PPP_DISC","","",N,N],[17,"ETH_P_PPP_SES","","",N,N],[17,"ETH_P_LINK_CTL","","",N,N],[17,"ETH_P_ATMFATE","","",N,N],[17,"ETH_P_PAE","","",N,N],[17,"ETH_P_AOE","","",N,N],[17,"ETH_P_8021AD","","",N,N],[17,"ETH_P_802_EX1","","",N,N],[17,"ETH_P_TIPC","","",N,N],[17,"ETH_P_MACSEC","","",N,N],[17,"ETH_P_8021AH","","",N,N],[17,"ETH_P_MVRP","","",N,N],[17,"ETH_P_1588","","",N,N],[17,"ETH_P_PRP","","",N,N],[17,"ETH_P_FCOE","","",N,N],[17,"ETH_P_TDLS","","",N,N],[17,"ETH_P_FIP","","",N,N],[17,"ETH_P_80221","","",N,N],[17,"ETH_P_LOOPBACK","","",N,N],[17,"ETH_P_QINQ1","","",N,N],[17,"ETH_P_QINQ2","","",N,N],[17,"ETH_P_QINQ3","","",N,N],[17,"ETH_P_EDSA","","",N,N],[17,"ETH_P_AF_IUCV","","",N,N],[17,"ETH_P_802_3_MIN","","",N,N],[17,"ETH_P_802_3","","",N,N],[17,"ETH_P_AX25","","",N,N],[17,"ETH_P_ALL","","",N,N],[17,"ETH_P_802_2","","",N,N],[17,"ETH_P_SNAP","","",N,N],[17,"ETH_P_DDCMP","","",N,N],[17,"ETH_P_WAN_PPP","","",N,N],[17,"ETH_P_PPP_MP","","",N,N],[17,"ETH_P_LOCALTALK","","",N,N],[17,"ETH_P_CANFD","","",N,N],[17,"ETH_P_PPPTALK","","",N,N],[17,"ETH_P_TR_802_2","","",N,N],[17,"ETH_P_MOBITEX","","",N,N],[17,"ETH_P_CONTROL","","",N,N],[17,"ETH_P_IRDA","","",N,N],[17,"ETH_P_ECONET","","",N,N],[17,"ETH_P_HDLC","","",N,N],[17,"ETH_P_ARCNET","","",N,N],[17,"ETH_P_DSA","","",N,N],[17,"ETH_P_TRAILER","","",N,N],[17,"ETH_P_PHONET","","",N,N],[17,"ETH_P_IEEE802154","","",N,N],[17,"ETH_P_CAIF","","",N,N],[17,"POSIX_SPAWN_RESETIDS","","",N,N],[17,"POSIX_SPAWN_SETPGROUP","","",N,N],[17,"POSIX_SPAWN_SETSIGDEF","","",N,N],[17,"POSIX_SPAWN_SETSIGMASK","","",N,N],[17,"POSIX_SPAWN_SETSCHEDPARAM","","",N,N],[17,"POSIX_SPAWN_SETSCHEDULER","","",N,N],[17,"NLMSG_NOOP","","",N,N],[17,"NLMSG_ERROR","","",N,N],[17,"NLMSG_DONE","","",N,N],[17,"NLMSG_OVERRUN","","",N,N],[17,"NLMSG_MIN_TYPE","","",N,N],[17,"GENL_NAMSIZ","","",N,N],[17,"GENL_MIN_ID","","",N,N],[17,"GENL_MAX_ID","","",N,N],[17,"GENL_ADMIN_PERM","","",N,N],[17,"GENL_CMD_CAP_DO","","",N,N],[17,"GENL_CMD_CAP_DUMP","","",N,N],[17,"GENL_CMD_CAP_HASPOL","","",N,N],[17,"GENL_ID_CTRL","","",N,N],[17,"CTRL_CMD_UNSPEC","","",N,N],[17,"CTRL_CMD_NEWFAMILY","","",N,N],[17,"CTRL_CMD_DELFAMILY","","",N,N],[17,"CTRL_CMD_GETFAMILY","","",N,N],[17,"CTRL_CMD_NEWOPS","","",N,N],[17,"CTRL_CMD_DELOPS","","",N,N],[17,"CTRL_CMD_GETOPS","","",N,N],[17,"CTRL_CMD_NEWMCAST_GRP","","",N,N],[17,"CTRL_CMD_DELMCAST_GRP","","",N,N],[17,"CTRL_CMD_GETMCAST_GRP","","",N,N],[17,"CTRL_ATTR_UNSPEC","","",N,N],[17,"CTRL_ATTR_FAMILY_ID","","",N,N],[17,"CTRL_ATTR_FAMILY_NAME","","",N,N],[17,"CTRL_ATTR_VERSION","","",N,N],[17,"CTRL_ATTR_HDRSIZE","","",N,N],[17,"CTRL_ATTR_MAXATTR","","",N,N],[17,"CTRL_ATTR_OPS","","",N,N],[17,"CTRL_ATTR_MCAST_GROUPS","","",N,N],[17,"CTRL_ATTR_OP_UNSPEC","","",N,N],[17,"CTRL_ATTR_OP_ID","","",N,N],[17,"CTRL_ATTR_OP_FLAGS","","",N,N],[17,"CTRL_ATTR_MCAST_GRP_UNSPEC","","",N,N],[17,"CTRL_ATTR_MCAST_GRP_NAME","","",N,N],[17,"CTRL_ATTR_MCAST_GRP_ID","","",N,N],[17,"NF_DROP","","",N,N],[17,"NF_ACCEPT","","",N,N],[17,"NF_STOLEN","","",N,N],[17,"NF_QUEUE","","",N,N],[17,"NF_REPEAT","","",N,N],[17,"NF_STOP","","",N,N],[17,"NF_MAX_VERDICT","","",N,N],[17,"NF_VERDICT_MASK","","",N,N],[17,"NF_VERDICT_FLAG_QUEUE_BYPASS","","",N,N],[17,"NF_VERDICT_QMASK","","",N,N],[17,"NF_VERDICT_QBITS","","",N,N],[17,"NF_VERDICT_BITS","","",N,N],[17,"NF_INET_PRE_ROUTING","","",N,N],[17,"NF_INET_LOCAL_IN","","",N,N],[17,"NF_INET_FORWARD","","",N,N],[17,"NF_INET_LOCAL_OUT","","",N,N],[17,"NF_INET_POST_ROUTING","","",N,N],[17,"NF_INET_NUMHOOKS","","",N,N],[17,"NFPROTO_UNSPEC","","",N,N],[17,"NFPROTO_IPV4","","",N,N],[17,"NFPROTO_ARP","","",N,N],[17,"NFPROTO_BRIDGE","","",N,N],[17,"NFPROTO_IPV6","","",N,N],[17,"NFPROTO_DECNET","","",N,N],[17,"NFPROTO_NUMPROTO","","",N,N],[17,"NF_IP_PRE_ROUTING","","",N,N],[17,"NF_IP_LOCAL_IN","","",N,N],[17,"NF_IP_FORWARD","","",N,N],[17,"NF_IP_LOCAL_OUT","","",N,N],[17,"NF_IP_POST_ROUTING","","",N,N],[17,"NF_IP_NUMHOOKS","","",N,N],[17,"NF_IP_PRI_FIRST","","",N,N],[17,"NF_IP_PRI_CONNTRACK_DEFRAG","","",N,N],[17,"NF_IP_PRI_RAW","","",N,N],[17,"NF_IP_PRI_SELINUX_FIRST","","",N,N],[17,"NF_IP_PRI_CONNTRACK","","",N,N],[17,"NF_IP_PRI_MANGLE","","",N,N],[17,"NF_IP_PRI_NAT_DST","","",N,N],[17,"NF_IP_PRI_FILTER","","",N,N],[17,"NF_IP_PRI_SECURITY","","",N,N],[17,"NF_IP_PRI_NAT_SRC","","",N,N],[17,"NF_IP_PRI_SELINUX_LAST","","",N,N],[17,"NF_IP_PRI_CONNTRACK_HELPER","","",N,N],[17,"NF_IP_PRI_CONNTRACK_CONFIRM","","",N,N],[17,"NF_IP_PRI_LAST","","",N,N],[17,"NF_IP6_PRE_ROUTING","","",N,N],[17,"NF_IP6_LOCAL_IN","","",N,N],[17,"NF_IP6_FORWARD","","",N,N],[17,"NF_IP6_LOCAL_OUT","","",N,N],[17,"NF_IP6_POST_ROUTING","","",N,N],[17,"NF_IP6_NUMHOOKS","","",N,N],[17,"NF_IP6_PRI_FIRST","","",N,N],[17,"NF_IP6_PRI_CONNTRACK_DEFRAG","","",N,N],[17,"NF_IP6_PRI_RAW","","",N,N],[17,"NF_IP6_PRI_SELINUX_FIRST","","",N,N],[17,"NF_IP6_PRI_CONNTRACK","","",N,N],[17,"NF_IP6_PRI_MANGLE","","",N,N],[17,"NF_IP6_PRI_NAT_DST","","",N,N],[17,"NF_IP6_PRI_FILTER","","",N,N],[17,"NF_IP6_PRI_SECURITY","","",N,N],[17,"NF_IP6_PRI_NAT_SRC","","",N,N],[17,"NF_IP6_PRI_SELINUX_LAST","","",N,N],[17,"NF_IP6_PRI_CONNTRACK_HELPER","","",N,N],[17,"NF_IP6_PRI_LAST","","",N,N],[17,"SIOCADDRT","","",N,N],[17,"SIOCDELRT","","",N,N],[17,"SIOCGIFNAME","","",N,N],[17,"SIOCSIFLINK","","",N,N],[17,"SIOCGIFCONF","","",N,N],[17,"SIOCGIFFLAGS","","",N,N],[17,"SIOCSIFFLAGS","","",N,N],[17,"SIOCGIFADDR","","",N,N],[17,"SIOCSIFADDR","","",N,N],[17,"SIOCGIFDSTADDR","","",N,N],[17,"SIOCSIFDSTADDR","","",N,N],[17,"SIOCGIFBRDADDR","","",N,N],[17,"SIOCSIFBRDADDR","","",N,N],[17,"SIOCGIFNETMASK","","",N,N],[17,"SIOCSIFNETMASK","","",N,N],[17,"SIOCGIFMETRIC","","",N,N],[17,"SIOCSIFMETRIC","","",N,N],[17,"SIOCGIFMEM","","",N,N],[17,"SIOCSIFMEM","","",N,N],[17,"SIOCGIFMTU","","",N,N],[17,"SIOCSIFMTU","","",N,N],[17,"SIOCSIFHWADDR","","",N,N],[17,"SIOCGIFENCAP","","",N,N],[17,"SIOCSIFENCAP","","",N,N],[17,"SIOCGIFHWADDR","","",N,N],[17,"SIOCGIFSLAVE","","",N,N],[17,"SIOCSIFSLAVE","","",N,N],[17,"SIOCADDMULTI","","",N,N],[17,"SIOCDELMULTI","","",N,N],[17,"SIOCDARP","","",N,N],[17,"SIOCGARP","","",N,N],[17,"SIOCSARP","","",N,N],[17,"SIOCDRARP","","",N,N],[17,"SIOCGRARP","","",N,N],[17,"SIOCSRARP","","",N,N],[17,"SIOCGIFMAP","","",N,N],[17,"SIOCSIFMAP","","",N,N],[17,"IPTOS_TOS_MASK","","",N,N],[17,"IPTOS_PREC_MASK","","",N,N],[17,"RTF_UP","","",N,N],[17,"RTF_GATEWAY","","",N,N],[17,"RTF_HOST","","",N,N],[17,"RTF_REINSTATE","","",N,N],[17,"RTF_DYNAMIC","","",N,N],[17,"RTF_MODIFIED","","",N,N],[17,"RTF_MTU","","",N,N],[17,"RTF_MSS","","",N,N],[17,"RTF_WINDOW","","",N,N],[17,"RTF_IRTT","","",N,N],[17,"RTF_REJECT","","",N,N],[17,"RTF_STATIC","","",N,N],[17,"RTF_XRESOLVE","","",N,N],[17,"RTF_NOFORWARD","","",N,N],[17,"RTF_THROW","","",N,N],[17,"RTF_NOPMTUDISC","","",N,N],[17,"RTF_DEFAULT","","",N,N],[17,"RTF_ALLONLINK","","",N,N],[17,"RTF_ADDRCONF","","",N,N],[17,"RTF_LINKRT","","",N,N],[17,"RTF_NONEXTHOP","","",N,N],[17,"RTF_CACHE","","",N,N],[17,"RTF_FLOW","","",N,N],[17,"RTF_POLICY","","",N,N],[17,"RTCF_VALVE","","",N,N],[17,"RTCF_MASQ","","",N,N],[17,"RTCF_NAT","","",N,N],[17,"RTCF_DOREDIRECT","","",N,N],[17,"RTCF_LOG","","",N,N],[17,"RTCF_DIRECTSRC","","",N,N],[17,"RTF_LOCAL","","",N,N],[17,"RTF_INTERFACE","","",N,N],[17,"RTF_MULTICAST","","",N,N],[17,"RTF_BROADCAST","","",N,N],[17,"RTF_NAT","","",N,N],[17,"RTF_ADDRCLASSMASK","","",N,N],[17,"RT_CLASS_UNSPEC","","",N,N],[17,"RT_CLASS_DEFAULT","","",N,N],[17,"RT_CLASS_MAIN","","",N,N],[17,"RT_CLASS_LOCAL","","",N,N],[17,"RT_CLASS_MAX","","",N,N],[17,"RTMSG_OVERRUN","","",N,N],[17,"RTMSG_NEWDEVICE","","",N,N],[17,"RTMSG_DELDEVICE","","",N,N],[17,"RTMSG_NEWROUTE","","",N,N],[17,"RTMSG_DELROUTE","","",N,N],[17,"RTMSG_NEWRULE","","",N,N],[17,"RTMSG_DELRULE","","",N,N],[17,"RTMSG_CONTROL","","",N,N],[17,"RTMSG_AR_FAILED","","",N,N],[17,"__UT_LINESIZE","","",N,N],[17,"__UT_NAMESIZE","","",N,N],[17,"__UT_HOSTSIZE","","",N,N],[17,"EMPTY","","",N,N],[17,"RUN_LVL","","",N,N],[17,"BOOT_TIME","","",N,N],[17,"NEW_TIME","","",N,N],[17,"OLD_TIME","","",N,N],[17,"INIT_PROCESS","","",N,N],[17,"LOGIN_PROCESS","","",N,N],[17,"USER_PROCESS","","",N,N],[17,"DEAD_PROCESS","","",N,N],[17,"ACCOUNTING","","",N,N],[17,"RLIMIT_RSS","","",N,N],[17,"RLIMIT_AS","","",N,N],[17,"RLIMIT_MEMLOCK","","",N,N],[17,"RLIM_INFINITY","","",N,N],[17,"RLIMIT_RTTIME","","",N,N],[17,"RLIMIT_NLIMITS","","",N,N],[17,"SOCK_NONBLOCK","","",N,N],[17,"SOL_RXRPC","","",N,N],[17,"SOL_PPPOL2TP","","",N,N],[17,"SOL_BLUETOOTH","","",N,N],[17,"SOL_PNPIPE","","",N,N],[17,"SOL_RDS","","",N,N],[17,"SOL_IUCV","","",N,N],[17,"SOL_CAIF","","",N,N],[17,"SOL_ALG","","",N,N],[17,"SOL_NFC","","",N,N],[17,"MSG_TRYHARD","","",N,N],[17,"LC_PAPER","","",N,N],[17,"LC_NAME","","",N,N],[17,"LC_ADDRESS","","",N,N],[17,"LC_TELEPHONE","","",N,N],[17,"LC_MEASUREMENT","","",N,N],[17,"LC_IDENTIFICATION","","",N,N],[17,"LC_PAPER_MASK","","",N,N],[17,"LC_NAME_MASK","","",N,N],[17,"LC_ADDRESS_MASK","","",N,N],[17,"LC_TELEPHONE_MASK","","",N,N],[17,"LC_MEASUREMENT_MASK","","",N,N],[17,"LC_IDENTIFICATION_MASK","","",N,N],[17,"LC_ALL_MASK","","",N,N],[17,"MAP_ANON","","",N,N],[17,"MAP_ANONYMOUS","","",N,N],[17,"MAP_DENYWRITE","","",N,N],[17,"MAP_EXECUTABLE","","",N,N],[17,"MAP_POPULATE","","",N,N],[17,"MAP_NONBLOCK","","",N,N],[17,"MAP_STACK","","",N,N],[17,"ENOTSUP","","",N,N],[17,"EUCLEAN","","",N,N],[17,"ENOTNAM","","",N,N],[17,"ENAVAIL","","",N,N],[17,"EISNAM","","",N,N],[17,"EREMOTEIO","","",N,N],[17,"SOCK_STREAM","","",N,N],[17,"SOCK_DGRAM","","",N,N],[17,"SOCK_SEQPACKET","","",N,N],[17,"SOCK_DCCP","","",N,N],[17,"SOCK_PACKET","","",N,N],[17,"TCP_COOKIE_TRANSACTIONS","","",N,N],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",N,N],[17,"TCP_THIN_DUPACK","","",N,N],[17,"TCP_USER_TIMEOUT","","",N,N],[17,"TCP_REPAIR","","",N,N],[17,"TCP_REPAIR_QUEUE","","",N,N],[17,"TCP_QUEUE_SEQ","","",N,N],[17,"TCP_REPAIR_OPTIONS","","",N,N],[17,"TCP_FASTOPEN","","",N,N],[17,"TCP_TIMESTAMP","","",N,N],[17,"DCCP_SOCKOPT_PACKET_SIZE","","",N,N],[17,"DCCP_SOCKOPT_SERVICE","","",N,N],[17,"DCCP_SOCKOPT_CHANGE_L","","",N,N],[17,"DCCP_SOCKOPT_CHANGE_R","","",N,N],[17,"DCCP_SOCKOPT_GET_CUR_MPS","","",N,N],[17,"DCCP_SOCKOPT_SERVER_TIMEWAIT","","",N,N],[17,"DCCP_SOCKOPT_SEND_CSCOV","","",N,N],[17,"DCCP_SOCKOPT_RECV_CSCOV","","",N,N],[17,"DCCP_SOCKOPT_AVAILABLE_CCIDS","","",N,N],[17,"DCCP_SOCKOPT_CCID","","",N,N],[17,"DCCP_SOCKOPT_TX_CCID","","",N,N],[17,"DCCP_SOCKOPT_RX_CCID","","",N,N],[17,"DCCP_SOCKOPT_QPOLICY_ID","","",N,N],[17,"DCCP_SOCKOPT_QPOLICY_TXQLEN","","",N,N],[17,"DCCP_SOCKOPT_CCID_RX_INFO","","",N,N],[17,"DCCP_SOCKOPT_CCID_TX_INFO","","",N,N],[17,"DCCP_SERVICE_LIST_MAX_LEN","","maximum number of services provided on the same listening port",N,N],[17,"SIGTTIN","","",N,N],[17,"SIGTTOU","","",N,N],[17,"SIGXCPU","","",N,N],[17,"SIGXFSZ","","",N,N],[17,"SIGVTALRM","","",N,N],[17,"SIGPROF","","",N,N],[17,"SIGWINCH","","",N,N],[17,"SIGEV_THREAD_ID","","",N,N],[17,"BUFSIZ","","",N,N],[17,"TMP_MAX","","",N,N],[17,"FOPEN_MAX","","",N,N],[17,"POSIX_FADV_DONTNEED","","",N,N],[17,"POSIX_FADV_NOREUSE","","",N,N],[17,"POSIX_MADV_DONTNEED","","",N,N],[17,"_SC_EQUIV_CLASS_MAX","","",N,N],[17,"_SC_CHARCLASS_NAME_MAX","","",N,N],[17,"_SC_PII","","",N,N],[17,"_SC_PII_XTI","","",N,N],[17,"_SC_PII_SOCKET","","",N,N],[17,"_SC_PII_INTERNET","","",N,N],[17,"_SC_PII_OSI","","",N,N],[17,"_SC_POLL","","",N,N],[17,"_SC_SELECT","","",N,N],[17,"_SC_PII_INTERNET_STREAM","","",N,N],[17,"_SC_PII_INTERNET_DGRAM","","",N,N],[17,"_SC_PII_OSI_COTS","","",N,N],[17,"_SC_PII_OSI_CLTS","","",N,N],[17,"_SC_PII_OSI_M","","",N,N],[17,"_SC_T_IOV_MAX","","",N,N],[17,"_SC_2_C_VERSION","","",N,N],[17,"_SC_CHAR_BIT","","",N,N],[17,"_SC_CHAR_MAX","","",N,N],[17,"_SC_CHAR_MIN","","",N,N],[17,"_SC_INT_MAX","","",N,N],[17,"_SC_INT_MIN","","",N,N],[17,"_SC_LONG_BIT","","",N,N],[17,"_SC_WORD_BIT","","",N,N],[17,"_SC_MB_LEN_MAX","","",N,N],[17,"_SC_SSIZE_MAX","","",N,N],[17,"_SC_SCHAR_MAX","","",N,N],[17,"_SC_SCHAR_MIN","","",N,N],[17,"_SC_SHRT_MAX","","",N,N],[17,"_SC_SHRT_MIN","","",N,N],[17,"_SC_UCHAR_MAX","","",N,N],[17,"_SC_UINT_MAX","","",N,N],[17,"_SC_ULONG_MAX","","",N,N],[17,"_SC_USHRT_MAX","","",N,N],[17,"_SC_NL_ARGMAX","","",N,N],[17,"_SC_NL_LANGMAX","","",N,N],[17,"_SC_NL_MSGMAX","","",N,N],[17,"_SC_NL_NMAX","","",N,N],[17,"_SC_NL_SETMAX","","",N,N],[17,"_SC_NL_TEXTMAX","","",N,N],[17,"_SC_BASE","","",N,N],[17,"_SC_C_LANG_SUPPORT","","",N,N],[17,"_SC_C_LANG_SUPPORT_R","","",N,N],[17,"_SC_DEVICE_IO","","",N,N],[17,"_SC_DEVICE_SPECIFIC","","",N,N],[17,"_SC_DEVICE_SPECIFIC_R","","",N,N],[17,"_SC_FD_MGMT","","",N,N],[17,"_SC_FIFO","","",N,N],[17,"_SC_PIPE","","",N,N],[17,"_SC_FILE_ATTRIBUTES","","",N,N],[17,"_SC_FILE_LOCKING","","",N,N],[17,"_SC_FILE_SYSTEM","","",N,N],[17,"_SC_MULTI_PROCESS","","",N,N],[17,"_SC_SINGLE_PROCESS","","",N,N],[17,"_SC_NETWORKING","","",N,N],[17,"_SC_REGEX_VERSION","","",N,N],[17,"_SC_SIGNALS","","",N,N],[17,"_SC_SYSTEM_DATABASE","","",N,N],[17,"_SC_SYSTEM_DATABASE_R","","",N,N],[17,"_SC_USER_GROUPS","","",N,N],[17,"_SC_USER_GROUPS_R","","",N,N],[17,"_SC_LEVEL1_ICACHE_SIZE","","",N,N],[17,"_SC_LEVEL1_ICACHE_ASSOC","","",N,N],[17,"_SC_LEVEL1_ICACHE_LINESIZE","","",N,N],[17,"_SC_LEVEL1_DCACHE_SIZE","","",N,N],[17,"_SC_LEVEL1_DCACHE_ASSOC","","",N,N],[17,"_SC_LEVEL1_DCACHE_LINESIZE","","",N,N],[17,"_SC_LEVEL2_CACHE_SIZE","","",N,N],[17,"_SC_LEVEL2_CACHE_ASSOC","","",N,N],[17,"_SC_LEVEL2_CACHE_LINESIZE","","",N,N],[17,"_SC_LEVEL3_CACHE_SIZE","","",N,N],[17,"_SC_LEVEL3_CACHE_ASSOC","","",N,N],[17,"_SC_LEVEL3_CACHE_LINESIZE","","",N,N],[17,"_SC_LEVEL4_CACHE_SIZE","","",N,N],[17,"_SC_LEVEL4_CACHE_ASSOC","","",N,N],[17,"_SC_LEVEL4_CACHE_LINESIZE","","",N,N],[17,"O_ACCMODE","","",N,N],[17,"ST_RELATIME","","",N,N],[17,"NI_MAXHOST","","",N,N],[17,"ADFS_SUPER_MAGIC","","",N,N],[17,"AFFS_SUPER_MAGIC","","",N,N],[17,"CODA_SUPER_MAGIC","","",N,N],[17,"CRAMFS_MAGIC","","",N,N],[17,"EFS_SUPER_MAGIC","","",N,N],[17,"EXT2_SUPER_MAGIC","","",N,N],[17,"EXT3_SUPER_MAGIC","","",N,N],[17,"EXT4_SUPER_MAGIC","","",N,N],[17,"HPFS_SUPER_MAGIC","","",N,N],[17,"HUGETLBFS_MAGIC","","",N,N],[17,"ISOFS_SUPER_MAGIC","","",N,N],[17,"JFFS2_SUPER_MAGIC","","",N,N],[17,"MINIX_SUPER_MAGIC","","",N,N],[17,"MINIX_SUPER_MAGIC2","","",N,N],[17,"MINIX2_SUPER_MAGIC","","",N,N],[17,"MINIX2_SUPER_MAGIC2","","",N,N],[17,"MSDOS_SUPER_MAGIC","","",N,N],[17,"NCP_SUPER_MAGIC","","",N,N],[17,"NFS_SUPER_MAGIC","","",N,N],[17,"OPENPROM_SUPER_MAGIC","","",N,N],[17,"PROC_SUPER_MAGIC","","",N,N],[17,"QNX4_SUPER_MAGIC","","",N,N],[17,"REISERFS_SUPER_MAGIC","","",N,N],[17,"SMB_SUPER_MAGIC","","",N,N],[17,"TMPFS_MAGIC","","",N,N],[17,"USBDEVICE_SUPER_MAGIC","","",N,N],[17,"VEOF","","",N,N],[17,"CPU_SETSIZE","","",N,N],[17,"PTRACE_TRACEME","","",N,N],[17,"PTRACE_PEEKTEXT","","",N,N],[17,"PTRACE_PEEKDATA","","",N,N],[17,"PTRACE_PEEKUSER","","",N,N],[17,"PTRACE_POKETEXT","","",N,N],[17,"PTRACE_POKEDATA","","",N,N],[17,"PTRACE_POKEUSER","","",N,N],[17,"PTRACE_CONT","","",N,N],[17,"PTRACE_KILL","","",N,N],[17,"PTRACE_SINGLESTEP","","",N,N],[17,"PTRACE_ATTACH","","",N,N],[17,"PTRACE_SYSCALL","","",N,N],[17,"PTRACE_SETOPTIONS","","",N,N],[17,"PTRACE_GETEVENTMSG","","",N,N],[17,"PTRACE_GETSIGINFO","","",N,N],[17,"PTRACE_SETSIGINFO","","",N,N],[17,"PTRACE_GETREGSET","","",N,N],[17,"PTRACE_SETREGSET","","",N,N],[17,"PTRACE_SEIZE","","",N,N],[17,"PTRACE_INTERRUPT","","",N,N],[17,"PTRACE_LISTEN","","",N,N],[17,"PTRACE_PEEKSIGINFO","","",N,N],[17,"EPOLLWAKEUP","","",N,N],[17,"MAP_HUGETLB","","",N,N],[17,"SEEK_DATA","","",N,N],[17,"SEEK_HOLE","","",N,N],[17,"TCSANOW","","",N,N],[17,"TCSADRAIN","","",N,N],[17,"TCSAFLUSH","","",N,N],[17,"TIOCLINUX","","",N,N],[17,"TIOCGSERIAL","","",N,N],[17,"RTLD_DEEPBIND","","",N,N],[17,"RTLD_GLOBAL","","",N,N],[17,"RTLD_NOLOAD","","",N,N],[17,"LINUX_REBOOT_MAGIC1","","",N,N],[17,"LINUX_REBOOT_MAGIC2","","",N,N],[17,"LINUX_REBOOT_MAGIC2A","","",N,N],[17,"LINUX_REBOOT_MAGIC2B","","",N,N],[17,"LINUX_REBOOT_MAGIC2C","","",N,N],[17,"LINUX_REBOOT_CMD_RESTART","","",N,N],[17,"LINUX_REBOOT_CMD_HALT","","",N,N],[17,"LINUX_REBOOT_CMD_CAD_ON","","",N,N],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",N,N],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",N,N],[17,"LINUX_REBOOT_CMD_RESTART2","","",N,N],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",N,N],[17,"LINUX_REBOOT_CMD_KEXEC","","",N,N],[17,"NETLINK_ROUTE","","",N,N],[17,"NETLINK_UNUSED","","",N,N],[17,"NETLINK_USERSOCK","","",N,N],[17,"NETLINK_FIREWALL","","",N,N],[17,"NETLINK_SOCK_DIAG","","",N,N],[17,"NETLINK_NFLOG","","",N,N],[17,"NETLINK_XFRM","","",N,N],[17,"NETLINK_SELINUX","","",N,N],[17,"NETLINK_ISCSI","","",N,N],[17,"NETLINK_AUDIT","","",N,N],[17,"NETLINK_FIB_LOOKUP","","",N,N],[17,"NETLINK_CONNECTOR","","",N,N],[17,"NETLINK_NETFILTER","","",N,N],[17,"NETLINK_IP6_FW","","",N,N],[17,"NETLINK_DNRTMSG","","",N,N],[17,"NETLINK_KOBJECT_UEVENT","","",N,N],[17,"NETLINK_GENERIC","","",N,N],[17,"NETLINK_SCSITRANSPORT","","",N,N],[17,"NETLINK_ECRYPTFS","","",N,N],[17,"NETLINK_RDMA","","",N,N],[17,"NETLINK_CRYPTO","","",N,N],[17,"NETLINK_INET_DIAG","","",N,N],[17,"MAX_LINKS","","",N,N],[17,"NLM_F_REQUEST","","",N,N],[17,"NLM_F_MULTI","","",N,N],[17,"NLM_F_ACK","","",N,N],[17,"NLM_F_ECHO","","",N,N],[17,"NLM_F_DUMP_INTR","","",N,N],[17,"NLM_F_DUMP_FILTERED","","",N,N],[17,"NLM_F_ROOT","","",N,N],[17,"NLM_F_MATCH","","",N,N],[17,"NLM_F_ATOMIC","","",N,N],[17,"NLM_F_DUMP","","",N,N],[17,"NLM_F_REPLACE","","",N,N],[17,"NLM_F_EXCL","","",N,N],[17,"NLM_F_CREATE","","",N,N],[17,"NLM_F_APPEND","","",N,N],[17,"NETLINK_ADD_MEMBERSHIP","","",N,N],[17,"NETLINK_DROP_MEMBERSHIP","","",N,N],[17,"NETLINK_PKTINFO","","",N,N],[17,"NETLINK_BROADCAST_ERROR","","",N,N],[17,"NETLINK_NO_ENOBUFS","","",N,N],[17,"NETLINK_RX_RING","","",N,N],[17,"NETLINK_TX_RING","","",N,N],[17,"NETLINK_LISTEN_ALL_NSID","","",N,N],[17,"NETLINK_LIST_MEMBERSHIPS","","",N,N],[17,"NETLINK_CAP_ACK","","",N,N],[17,"NLA_F_NESTED","","",N,N],[17,"NLA_F_NET_BYTEORDER","","",N,N],[17,"NLA_TYPE_MASK","","",N,N],[17,"NLA_ALIGNTO","","",N,N],[17,"GENL_UNS_ADMIN_PERM","","",N,N],[17,"GENL_ID_VFS_DQUOT","","",N,N],[17,"GENL_ID_PMCRAID","","",N,N],[17,"TIOCM_LE","","",N,N],[17,"TIOCM_DTR","","",N,N],[17,"TIOCM_RTS","","",N,N],[17,"TIOCM_ST","","",N,N],[17,"TIOCM_SR","","",N,N],[17,"TIOCM_CTS","","",N,N],[17,"TIOCM_CAR","","",N,N],[17,"TIOCM_RNG","","",N,N],[17,"TIOCM_DSR","","",N,N],[17,"TIOCM_CD","","",N,N],[17,"TIOCM_RI","","",N,N],[17,"NF_NETDEV_INGRESS","","",N,N],[17,"NF_NETDEV_NUMHOOKS","","",N,N],[17,"NFPROTO_INET","","",N,N],[17,"NFPROTO_NETDEV","","",N,N],[17,"NFT_TABLE_MAXNAMELEN","","",N,N],[17,"NFT_CHAIN_MAXNAMELEN","","",N,N],[17,"NFT_SET_MAXNAMELEN","","",N,N],[17,"NFT_OBJ_MAXNAMELEN","","",N,N],[17,"NFT_USERDATA_MAXLEN","","",N,N],[17,"NFT_REG_VERDICT","","",N,N],[17,"NFT_REG_1","","",N,N],[17,"NFT_REG_2","","",N,N],[17,"NFT_REG_3","","",N,N],[17,"NFT_REG_4","","",N,N],[17,"__NFT_REG_MAX","","",N,N],[17,"NFT_REG32_00","","",N,N],[17,"NFT_REG32_01","","",N,N],[17,"NFT_REG32_02","","",N,N],[17,"NFT_REG32_03","","",N,N],[17,"NFT_REG32_04","","",N,N],[17,"NFT_REG32_05","","",N,N],[17,"NFT_REG32_06","","",N,N],[17,"NFT_REG32_07","","",N,N],[17,"NFT_REG32_08","","",N,N],[17,"NFT_REG32_09","","",N,N],[17,"NFT_REG32_10","","",N,N],[17,"NFT_REG32_11","","",N,N],[17,"NFT_REG32_12","","",N,N],[17,"NFT_REG32_13","","",N,N],[17,"NFT_REG32_14","","",N,N],[17,"NFT_REG32_15","","",N,N],[17,"NFT_REG_SIZE","","",N,N],[17,"NFT_REG32_SIZE","","",N,N],[17,"NFT_CONTINUE","","",N,N],[17,"NFT_BREAK","","",N,N],[17,"NFT_JUMP","","",N,N],[17,"NFT_GOTO","","",N,N],[17,"NFT_RETURN","","",N,N],[17,"NFT_MSG_NEWTABLE","","",N,N],[17,"NFT_MSG_GETTABLE","","",N,N],[17,"NFT_MSG_DELTABLE","","",N,N],[17,"NFT_MSG_NEWCHAIN","","",N,N],[17,"NFT_MSG_GETCHAIN","","",N,N],[17,"NFT_MSG_DELCHAIN","","",N,N],[17,"NFT_MSG_NEWRULE","","",N,N],[17,"NFT_MSG_GETRULE","","",N,N],[17,"NFT_MSG_DELRULE","","",N,N],[17,"NFT_MSG_NEWSET","","",N,N],[17,"NFT_MSG_GETSET","","",N,N],[17,"NFT_MSG_DELSET","","",N,N],[17,"NFT_MSG_NEWSETELEM","","",N,N],[17,"NFT_MSG_GETSETELEM","","",N,N],[17,"NFT_MSG_DELSETELEM","","",N,N],[17,"NFT_MSG_NEWGEN","","",N,N],[17,"NFT_MSG_GETGEN","","",N,N],[17,"NFT_MSG_TRACE","","",N,N],[17,"NFT_MSG_NEWOBJ","","",N,N],[17,"NFT_MSG_GETOBJ","","",N,N],[17,"NFT_MSG_DELOBJ","","",N,N],[17,"NFT_MSG_GETOBJ_RESET","","",N,N],[17,"NFT_MSG_MAX","","",N,N],[17,"NFT_SET_ANONYMOUS","","",N,N],[17,"NFT_SET_CONSTANT","","",N,N],[17,"NFT_SET_INTERVAL","","",N,N],[17,"NFT_SET_MAP","","",N,N],[17,"NFT_SET_TIMEOUT","","",N,N],[17,"NFT_SET_EVAL","","",N,N],[17,"NFT_SET_POL_PERFORMANCE","","",N,N],[17,"NFT_SET_POL_MEMORY","","",N,N],[17,"NFT_SET_ELEM_INTERVAL_END","","",N,N],[17,"NFT_DATA_VALUE","","",N,N],[17,"NFT_DATA_VERDICT","","",N,N],[17,"NFT_DATA_RESERVED_MASK","","",N,N],[17,"NFT_DATA_VALUE_MAXLEN","","",N,N],[17,"NFT_BYTEORDER_NTOH","","",N,N],[17,"NFT_BYTEORDER_HTON","","",N,N],[17,"NFT_CMP_EQ","","",N,N],[17,"NFT_CMP_NEQ","","",N,N],[17,"NFT_CMP_LT","","",N,N],[17,"NFT_CMP_LTE","","",N,N],[17,"NFT_CMP_GT","","",N,N],[17,"NFT_CMP_GTE","","",N,N],[17,"NFT_RANGE_EQ","","",N,N],[17,"NFT_RANGE_NEQ","","",N,N],[17,"NFT_LOOKUP_F_INV","","",N,N],[17,"NFT_DYNSET_OP_ADD","","",N,N],[17,"NFT_DYNSET_OP_UPDATE","","",N,N],[17,"NFT_DYNSET_F_INV","","",N,N],[17,"NFT_PAYLOAD_LL_HEADER","","",N,N],[17,"NFT_PAYLOAD_NETWORK_HEADER","","",N,N],[17,"NFT_PAYLOAD_TRANSPORT_HEADER","","",N,N],[17,"NFT_PAYLOAD_CSUM_NONE","","",N,N],[17,"NFT_PAYLOAD_CSUM_INET","","",N,N],[17,"NFT_META_LEN","","",N,N],[17,"NFT_META_PROTOCOL","","",N,N],[17,"NFT_META_PRIORITY","","",N,N],[17,"NFT_META_MARK","","",N,N],[17,"NFT_META_IIF","","",N,N],[17,"NFT_META_OIF","","",N,N],[17,"NFT_META_IIFNAME","","",N,N],[17,"NFT_META_OIFNAME","","",N,N],[17,"NFT_META_IIFTYPE","","",N,N],[17,"NFT_META_OIFTYPE","","",N,N],[17,"NFT_META_SKUID","","",N,N],[17,"NFT_META_SKGID","","",N,N],[17,"NFT_META_NFTRACE","","",N,N],[17,"NFT_META_RTCLASSID","","",N,N],[17,"NFT_META_SECMARK","","",N,N],[17,"NFT_META_NFPROTO","","",N,N],[17,"NFT_META_L4PROTO","","",N,N],[17,"NFT_META_BRI_IIFNAME","","",N,N],[17,"NFT_META_BRI_OIFNAME","","",N,N],[17,"NFT_META_PKTTYPE","","",N,N],[17,"NFT_META_CPU","","",N,N],[17,"NFT_META_IIFGROUP","","",N,N],[17,"NFT_META_OIFGROUP","","",N,N],[17,"NFT_META_CGROUP","","",N,N],[17,"NFT_META_PRANDOM","","",N,N],[17,"NFT_CT_STATE","","",N,N],[17,"NFT_CT_DIRECTION","","",N,N],[17,"NFT_CT_STATUS","","",N,N],[17,"NFT_CT_MARK","","",N,N],[17,"NFT_CT_SECMARK","","",N,N],[17,"NFT_CT_EXPIRATION","","",N,N],[17,"NFT_CT_HELPER","","",N,N],[17,"NFT_CT_L3PROTOCOL","","",N,N],[17,"NFT_CT_SRC","","",N,N],[17,"NFT_CT_DST","","",N,N],[17,"NFT_CT_PROTOCOL","","",N,N],[17,"NFT_CT_PROTO_SRC","","",N,N],[17,"NFT_CT_PROTO_DST","","",N,N],[17,"NFT_CT_LABELS","","",N,N],[17,"NFT_CT_PKTS","","",N,N],[17,"NFT_CT_BYTES","","",N,N],[17,"NFT_LIMIT_PKTS","","",N,N],[17,"NFT_LIMIT_PKT_BYTES","","",N,N],[17,"NFT_LIMIT_F_INV","","",N,N],[17,"NFT_QUEUE_FLAG_BYPASS","","",N,N],[17,"NFT_QUEUE_FLAG_CPU_FANOUT","","",N,N],[17,"NFT_QUEUE_FLAG_MASK","","",N,N],[17,"NFT_QUOTA_F_INV","","",N,N],[17,"NFT_REJECT_ICMP_UNREACH","","",N,N],[17,"NFT_REJECT_TCP_RST","","",N,N],[17,"NFT_REJECT_ICMPX_UNREACH","","",N,N],[17,"NFT_REJECT_ICMPX_NO_ROUTE","","",N,N],[17,"NFT_REJECT_ICMPX_PORT_UNREACH","","",N,N],[17,"NFT_REJECT_ICMPX_HOST_UNREACH","","",N,N],[17,"NFT_REJECT_ICMPX_ADMIN_PROHIBITED","","",N,N],[17,"NFT_NAT_SNAT","","",N,N],[17,"NFT_NAT_DNAT","","",N,N],[17,"NFT_TRACETYPE_UNSPEC","","",N,N],[17,"NFT_TRACETYPE_POLICY","","",N,N],[17,"NFT_TRACETYPE_RETURN","","",N,N],[17,"NFT_TRACETYPE_RULE","","",N,N],[17,"NFT_NG_INCREMENTAL","","",N,N],[17,"NFT_NG_RANDOM","","",N,N],[17,"PTHREAD_STACK_MIN","","",N,N],[17,"PTHREAD_MUTEX_ADAPTIVE_NP","","",N,N],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T","","",N,N],[17,"O_LARGEFILE","","",N,N],[17,"TIOCGSOFTCAR","","",N,N],[17,"TIOCSSOFTCAR","","",N,N],[17,"RLIMIT_NOFILE","","",N,N],[17,"RLIMIT_NPROC","","",N,N],[17,"O_APPEND","","",N,N],[17,"O_CREAT","","",N,N],[17,"O_EXCL","","",N,N],[17,"O_NOCTTY","","",N,N],[17,"O_NONBLOCK","","",N,N],[17,"O_SYNC","","",N,N],[17,"O_RSYNC","","",N,N],[17,"O_DSYNC","","",N,N],[17,"O_FSYNC","","",N,N],[17,"O_NOATIME","","",N,N],[17,"O_PATH","","",N,N],[17,"O_TMPFILE","","",N,N],[17,"MAP_GROWSDOWN","","",N,N],[17,"EDEADLK","","",N,N],[17,"ENAMETOOLONG","","",N,N],[17,"ENOLCK","","",N,N],[17,"ENOSYS","","",N,N],[17,"ENOTEMPTY","","",N,N],[17,"ELOOP","","",N,N],[17,"ENOMSG","","",N,N],[17,"EIDRM","","",N,N],[17,"ECHRNG","","",N,N],[17,"EL2NSYNC","","",N,N],[17,"EL3HLT","","",N,N],[17,"EL3RST","","",N,N],[17,"ELNRNG","","",N,N],[17,"EUNATCH","","",N,N],[17,"ENOCSI","","",N,N],[17,"EL2HLT","","",N,N],[17,"EBADE","","",N,N],[17,"EBADR","","",N,N],[17,"EXFULL","","",N,N],[17,"ENOANO","","",N,N],[17,"EBADRQC","","",N,N],[17,"EBADSLT","","",N,N],[17,"EMULTIHOP","","",N,N],[17,"EOVERFLOW","","",N,N],[17,"ENOTUNIQ","","",N,N],[17,"EBADFD","","",N,N],[17,"EBADMSG","","",N,N],[17,"EREMCHG","","",N,N],[17,"ELIBACC","","",N,N],[17,"ELIBBAD","","",N,N],[17,"ELIBSCN","","",N,N],[17,"ELIBMAX","","",N,N],[17,"ELIBEXEC","","",N,N],[17,"EILSEQ","","",N,N],[17,"ERESTART","","",N,N],[17,"ESTRPIPE","","",N,N],[17,"EUSERS","","",N,N],[17,"ENOTSOCK","","",N,N],[17,"EDESTADDRREQ","","",N,N],[17,"EMSGSIZE","","",N,N],[17,"EPROTOTYPE","","",N,N],[17,"ENOPROTOOPT","","",N,N],[17,"EPROTONOSUPPORT","","",N,N],[17,"ESOCKTNOSUPPORT","","",N,N],[17,"EOPNOTSUPP","","",N,N],[17,"EPFNOSUPPORT","","",N,N],[17,"EAFNOSUPPORT","","",N,N],[17,"EADDRINUSE","","",N,N],[17,"EADDRNOTAVAIL","","",N,N],[17,"ENETDOWN","","",N,N],[17,"ENETUNREACH","","",N,N],[17,"ENETRESET","","",N,N],[17,"ECONNABORTED","","",N,N],[17,"ECONNRESET","","",N,N],[17,"ENOBUFS","","",N,N],[17,"EISCONN","","",N,N],[17,"ENOTCONN","","",N,N],[17,"ESHUTDOWN","","",N,N],[17,"ETOOMANYREFS","","",N,N],[17,"ETIMEDOUT","","",N,N],[17,"ECONNREFUSED","","",N,N],[17,"EHOSTDOWN","","",N,N],[17,"EHOSTUNREACH","","",N,N],[17,"EALREADY","","",N,N],[17,"EINPROGRESS","","",N,N],[17,"ESTALE","","",N,N],[17,"EDQUOT","","",N,N],[17,"ENOMEDIUM","","",N,N],[17,"EMEDIUMTYPE","","",N,N],[17,"ECANCELED","","",N,N],[17,"ENOKEY","","",N,N],[17,"EKEYEXPIRED","","",N,N],[17,"EKEYREVOKED","","",N,N],[17,"EKEYREJECTED","","",N,N],[17,"EOWNERDEAD","","",N,N],[17,"ENOTRECOVERABLE","","",N,N],[17,"EHWPOISON","","",N,N],[17,"ERFKILL","","",N,N],[17,"SOL_SOCKET","","",N,N],[17,"SO_REUSEADDR","","",N,N],[17,"SO_TYPE","","",N,N],[17,"SO_ERROR","","",N,N],[17,"SO_DONTROUTE","","",N,N],[17,"SO_BROADCAST","","",N,N],[17,"SO_SNDBUF","","",N,N],[17,"SO_RCVBUF","","",N,N],[17,"SO_SNDBUFFORCE","","",N,N],[17,"SO_RCVBUFFORCE","","",N,N],[17,"SO_KEEPALIVE","","",N,N],[17,"SO_OOBINLINE","","",N,N],[17,"SO_NO_CHECK","","",N,N],[17,"SO_PRIORITY","","",N,N],[17,"SO_LINGER","","",N,N],[17,"SO_BSDCOMPAT","","",N,N],[17,"SO_REUSEPORT","","",N,N],[17,"SO_PASSCRED","","",N,N],[17,"SO_PEERCRED","","",N,N],[17,"SO_RCVLOWAT","","",N,N],[17,"SO_SNDLOWAT","","",N,N],[17,"SO_RCVTIMEO","","",N,N],[17,"SO_SNDTIMEO","","",N,N],[17,"SO_SECURITY_AUTHENTICATION","","",N,N],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT","","",N,N],[17,"SO_SECURITY_ENCRYPTION_NETWORK","","",N,N],[17,"SO_BINDTODEVICE","","",N,N],[17,"SO_ATTACH_FILTER","","",N,N],[17,"SO_DETACH_FILTER","","",N,N],[17,"SO_GET_FILTER","","",N,N],[17,"SO_PEERNAME","","",N,N],[17,"SO_TIMESTAMP","","",N,N],[17,"SO_ACCEPTCONN","","",N,N],[17,"SO_PEERSEC","","",N,N],[17,"SO_PASSSEC","","",N,N],[17,"SO_TIMESTAMPNS","","",N,N],[17,"SCM_TIMESTAMPNS","","",N,N],[17,"SO_MARK","","",N,N],[17,"SO_TIMESTAMPING","","",N,N],[17,"SCM_TIMESTAMPING","","",N,N],[17,"SO_PROTOCOL","","",N,N],[17,"SO_DOMAIN","","",N,N],[17,"SO_RXQ_OVFL","","",N,N],[17,"SO_WIFI_STATUS","","",N,N],[17,"SCM_WIFI_STATUS","","",N,N],[17,"SO_PEEK_OFF","","",N,N],[17,"SO_NOFCS","","",N,N],[17,"SO_LOCK_FILTER","","",N,N],[17,"SO_SELECT_ERR_QUEUE","","",N,N],[17,"SO_BUSY_POLL","","",N,N],[17,"SO_MAX_PACING_RATE","","",N,N],[17,"SO_BPF_EXTENSIONS","","",N,N],[17,"SO_INCOMING_CPU","","",N,N],[17,"SO_ATTACH_BPF","","",N,N],[17,"SO_DETACH_BPF","","",N,N],[17,"SA_ONSTACK","","",N,N],[17,"SA_SIGINFO","","",N,N],[17,"SA_NOCLDWAIT","","",N,N],[17,"SIGCHLD","","",N,N],[17,"SIGBUS","","",N,N],[17,"SIGUSR1","","",N,N],[17,"SIGUSR2","","",N,N],[17,"SIGCONT","","",N,N],[17,"SIGSTOP","","",N,N],[17,"SIGTSTP","","",N,N],[17,"SIGURG","","",N,N],[17,"SIGIO","","",N,N],[17,"SIGSYS","","",N,N],[17,"SIGSTKFLT","","",N,N],[17,"SIGUNUSED","","",N,N],[17,"SIGPOLL","","",N,N],[17,"SIGPWR","","",N,N],[17,"SIG_SETMASK","","",N,N],[17,"SIG_BLOCK","","",N,N],[17,"SIG_UNBLOCK","","",N,N],[17,"POLLWRNORM","","",N,N],[17,"POLLWRBAND","","",N,N],[17,"O_ASYNC","","",N,N],[17,"O_NDELAY","","",N,N],[17,"PTRACE_DETACH","","",N,N],[17,"EFD_NONBLOCK","","",N,N],[17,"F_GETLK","","",N,N],[17,"F_GETOWN","","",N,N],[17,"F_SETOWN","","",N,N],[17,"F_SETLK","","",N,N],[17,"F_SETLKW","","",N,N],[17,"F_RDLCK","","",N,N],[17,"F_WRLCK","","",N,N],[17,"F_UNLCK","","",N,N],[17,"SFD_NONBLOCK","","",N,N],[17,"TIOCEXCL","","",N,N],[17,"TIOCNXCL","","",N,N],[17,"TIOCSCTTY","","",N,N],[17,"TIOCSTI","","",N,N],[17,"TIOCMGET","","",N,N],[17,"TIOCMBIS","","",N,N],[17,"TIOCMBIC","","",N,N],[17,"TIOCMSET","","",N,N],[17,"TIOCCONS","","",N,N],[17,"SFD_CLOEXEC","","",N,N],[17,"NCCS","","",N,N],[17,"O_TRUNC","","",N,N],[17,"O_CLOEXEC","","",N,N],[17,"EBFONT","","",N,N],[17,"ENOSTR","","",N,N],[17,"ENODATA","","",N,N],[17,"ETIME","","",N,N],[17,"ENOSR","","",N,N],[17,"ENONET","","",N,N],[17,"ENOPKG","","",N,N],[17,"EREMOTE","","",N,N],[17,"ENOLINK","","",N,N],[17,"EADV","","",N,N],[17,"ESRMNT","","",N,N],[17,"ECOMM","","",N,N],[17,"EPROTO","","",N,N],[17,"EDOTDOT","","",N,N],[17,"SA_NODEFER","","",N,N],[17,"SA_RESETHAND","","",N,N],[17,"SA_RESTART","","",N,N],[17,"SA_NOCLDSTOP","","",N,N],[17,"EPOLL_CLOEXEC","","",N,N],[17,"EFD_CLOEXEC","","",N,N],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",N,N],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",N,N],[17,"O_DIRECT","","",N,N],[17,"O_DIRECTORY","","",N,N],[17,"O_NOFOLLOW","","",N,N],[17,"MAP_LOCKED","","",N,N],[17,"MAP_NORESERVE","","",N,N],[17,"MAP_32BIT","","",N,N],[17,"EDEADLOCK","","",N,N],[17,"FIOCLEX","","",N,N],[17,"FIONBIO","","",N,N],[17,"PTRACE_GETFPREGS","","",N,N],[17,"PTRACE_SETFPREGS","","",N,N],[17,"PTRACE_GETFPXREGS","","",N,N],[17,"PTRACE_SETFPXREGS","","",N,N],[17,"PTRACE_GETREGS","","",N,N],[17,"PTRACE_SETREGS","","",N,N],[17,"PTRACE_PEEKSIGINFO_SHARED","","",N,N],[17,"MCL_CURRENT","","",N,N],[17,"MCL_FUTURE","","",N,N],[17,"SIGSTKSZ","","",N,N],[17,"MINSIGSTKSZ","","",N,N],[17,"CBAUD","","",N,N],[17,"TAB1","","",N,N],[17,"TAB2","","",N,N],[17,"TAB3","","",N,N],[17,"CR1","","",N,N],[17,"CR2","","",N,N],[17,"CR3","","",N,N],[17,"FF1","","",N,N],[17,"BS1","","",N,N],[17,"VT1","","",N,N],[17,"VWERASE","","",N,N],[17,"VREPRINT","","",N,N],[17,"VSUSP","","",N,N],[17,"VSTART","","",N,N],[17,"VSTOP","","",N,N],[17,"VDISCARD","","",N,N],[17,"VTIME","","",N,N],[17,"IXON","","",N,N],[17,"IXOFF","","",N,N],[17,"ONLCR","","",N,N],[17,"CSIZE","","",N,N],[17,"CS6","","",N,N],[17,"CS7","","",N,N],[17,"CS8","","",N,N],[17,"CSTOPB","","",N,N],[17,"CREAD","","",N,N],[17,"PARENB","","",N,N],[17,"PARODD","","",N,N],[17,"HUPCL","","",N,N],[17,"CLOCAL","","",N,N],[17,"ECHOKE","","",N,N],[17,"ECHOE","","",N,N],[17,"ECHOK","","",N,N],[17,"ECHONL","","",N,N],[17,"ECHOPRT","","",N,N],[17,"ECHOCTL","","",N,N],[17,"ISIG","","",N,N],[17,"ICANON","","",N,N],[17,"PENDIN","","",N,N],[17,"NOFLSH","","",N,N],[17,"CIBAUD","","",N,N],[17,"CBAUDEX","","",N,N],[17,"VSWTC","","",N,N],[17,"OLCUC","","",N,N],[17,"NLDLY","","",N,N],[17,"CRDLY","","",N,N],[17,"TABDLY","","",N,N],[17,"BSDLY","","",N,N],[17,"FFDLY","","",N,N],[17,"VTDLY","","",N,N],[17,"XTABS","","",N,N],[17,"B0","","",N,N],[17,"B50","","",N,N],[17,"B75","","",N,N],[17,"B110","","",N,N],[17,"B134","","",N,N],[17,"B150","","",N,N],[17,"B200","","",N,N],[17,"B300","","",N,N],[17,"B600","","",N,N],[17,"B1200","","",N,N],[17,"B1800","","",N,N],[17,"B2400","","",N,N],[17,"B4800","","",N,N],[17,"B9600","","",N,N],[17,"B19200","","",N,N],[17,"B38400","","",N,N],[17,"EXTA","","",N,N],[17,"EXTB","","",N,N],[17,"BOTHER","","",N,N],[17,"B57600","","",N,N],[17,"B115200","","",N,N],[17,"B230400","","",N,N],[17,"B460800","","",N,N],[17,"B500000","","",N,N],[17,"B576000","","",N,N],[17,"B921600","","",N,N],[17,"B1000000","","",N,N],[17,"B1152000","","",N,N],[17,"B1500000","","",N,N],[17,"B2000000","","",N,N],[17,"B2500000","","",N,N],[17,"B3000000","","",N,N],[17,"B3500000","","",N,N],[17,"B4000000","","",N,N],[17,"VEOL","","",N,N],[17,"VEOL2","","",N,N],[17,"VMIN","","",N,N],[17,"IEXTEN","","",N,N],[17,"TOSTOP","","",N,N],[17,"FLUSHO","","",N,N],[17,"EXTPROC","","",N,N],[17,"TCGETS","","",N,N],[17,"TCSETS","","",N,N],[17,"TCSETSW","","",N,N],[17,"TCSETSF","","",N,N],[17,"TCGETA","","",N,N],[17,"TCSETA","","",N,N],[17,"TCSETAW","","",N,N],[17,"TCSETAF","","",N,N],[17,"TCSBRK","","",N,N],[17,"TCXONC","","",N,N],[17,"TCFLSH","","",N,N],[17,"TIOCINQ","","",N,N],[17,"TIOCGPGRP","","",N,N],[17,"TIOCSPGRP","","",N,N],[17,"TIOCOUTQ","","",N,N],[17,"TIOCGWINSZ","","",N,N],[17,"TIOCSWINSZ","","",N,N],[17,"FIONREAD","","",N,N],[17,"R15","","",N,N],[17,"R14","","",N,N],[17,"R13","","",N,N],[17,"R12","","",N,N],[17,"RBP","","",N,N],[17,"RBX","","",N,N],[17,"R11","","",N,N],[17,"R10","","",N,N],[17,"R9","","",N,N],[17,"R8","","",N,N],[17,"RAX","","",N,N],[17,"RCX","","",N,N],[17,"RDX","","",N,N],[17,"RSI","","",N,N],[17,"RDI","","",N,N],[17,"ORIG_RAX","","",N,N],[17,"RIP","","",N,N],[17,"CS","","",N,N],[17,"EFLAGS","","",N,N],[17,"RSP","","",N,N],[17,"SS","","",N,N],[17,"FS_BASE","","",N,N],[17,"GS_BASE","","",N,N],[17,"DS","","",N,N],[17,"ES","","",N,N],[17,"FS","","",N,N],[17,"GS","","",N,N],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",N,N],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",N,N],[17,"PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP","","",N,N],[17,"PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP","","",N,N],[17,"PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP","","",N,N],[17,"SYS_read","","",N,N],[17,"SYS_write","","",N,N],[17,"SYS_open","","",N,N],[17,"SYS_close","","",N,N],[17,"SYS_stat","","",N,N],[17,"SYS_fstat","","",N,N],[17,"SYS_lstat","","",N,N],[17,"SYS_poll","","",N,N],[17,"SYS_lseek","","",N,N],[17,"SYS_mmap","","",N,N],[17,"SYS_mprotect","","",N,N],[17,"SYS_munmap","","",N,N],[17,"SYS_brk","","",N,N],[17,"SYS_rt_sigaction","","",N,N],[17,"SYS_rt_sigprocmask","","",N,N],[17,"SYS_rt_sigreturn","","",N,N],[17,"SYS_ioctl","","",N,N],[17,"SYS_pread64","","",N,N],[17,"SYS_pwrite64","","",N,N],[17,"SYS_readv","","",N,N],[17,"SYS_writev","","",N,N],[17,"SYS_access","","",N,N],[17,"SYS_pipe","","",N,N],[17,"SYS_select","","",N,N],[17,"SYS_sched_yield","","",N,N],[17,"SYS_mremap","","",N,N],[17,"SYS_msync","","",N,N],[17,"SYS_mincore","","",N,N],[17,"SYS_madvise","","",N,N],[17,"SYS_shmget","","",N,N],[17,"SYS_shmat","","",N,N],[17,"SYS_shmctl","","",N,N],[17,"SYS_dup","","",N,N],[17,"SYS_dup2","","",N,N],[17,"SYS_pause","","",N,N],[17,"SYS_nanosleep","","",N,N],[17,"SYS_getitimer","","",N,N],[17,"SYS_alarm","","",N,N],[17,"SYS_setitimer","","",N,N],[17,"SYS_getpid","","",N,N],[17,"SYS_sendfile","","",N,N],[17,"SYS_socket","","",N,N],[17,"SYS_connect","","",N,N],[17,"SYS_accept","","",N,N],[17,"SYS_sendto","","",N,N],[17,"SYS_recvfrom","","",N,N],[17,"SYS_sendmsg","","",N,N],[17,"SYS_recvmsg","","",N,N],[17,"SYS_shutdown","","",N,N],[17,"SYS_bind","","",N,N],[17,"SYS_listen","","",N,N],[17,"SYS_getsockname","","",N,N],[17,"SYS_getpeername","","",N,N],[17,"SYS_socketpair","","",N,N],[17,"SYS_setsockopt","","",N,N],[17,"SYS_getsockopt","","",N,N],[17,"SYS_clone","","",N,N],[17,"SYS_fork","","",N,N],[17,"SYS_vfork","","",N,N],[17,"SYS_execve","","",N,N],[17,"SYS_exit","","",N,N],[17,"SYS_wait4","","",N,N],[17,"SYS_kill","","",N,N],[17,"SYS_uname","","",N,N],[17,"SYS_semget","","",N,N],[17,"SYS_semop","","",N,N],[17,"SYS_semctl","","",N,N],[17,"SYS_shmdt","","",N,N],[17,"SYS_msgget","","",N,N],[17,"SYS_msgsnd","","",N,N],[17,"SYS_msgrcv","","",N,N],[17,"SYS_msgctl","","",N,N],[17,"SYS_fcntl","","",N,N],[17,"SYS_flock","","",N,N],[17,"SYS_fsync","","",N,N],[17,"SYS_fdatasync","","",N,N],[17,"SYS_truncate","","",N,N],[17,"SYS_ftruncate","","",N,N],[17,"SYS_getdents","","",N,N],[17,"SYS_getcwd","","",N,N],[17,"SYS_chdir","","",N,N],[17,"SYS_fchdir","","",N,N],[17,"SYS_rename","","",N,N],[17,"SYS_mkdir","","",N,N],[17,"SYS_rmdir","","",N,N],[17,"SYS_creat","","",N,N],[17,"SYS_link","","",N,N],[17,"SYS_unlink","","",N,N],[17,"SYS_symlink","","",N,N],[17,"SYS_readlink","","",N,N],[17,"SYS_chmod","","",N,N],[17,"SYS_fchmod","","",N,N],[17,"SYS_chown","","",N,N],[17,"SYS_fchown","","",N,N],[17,"SYS_lchown","","",N,N],[17,"SYS_umask","","",N,N],[17,"SYS_gettimeofday","","",N,N],[17,"SYS_getrlimit","","",N,N],[17,"SYS_getrusage","","",N,N],[17,"SYS_sysinfo","","",N,N],[17,"SYS_times","","",N,N],[17,"SYS_ptrace","","",N,N],[17,"SYS_getuid","","",N,N],[17,"SYS_syslog","","",N,N],[17,"SYS_getgid","","",N,N],[17,"SYS_setuid","","",N,N],[17,"SYS_setgid","","",N,N],[17,"SYS_geteuid","","",N,N],[17,"SYS_getegid","","",N,N],[17,"SYS_setpgid","","",N,N],[17,"SYS_getppid","","",N,N],[17,"SYS_getpgrp","","",N,N],[17,"SYS_setsid","","",N,N],[17,"SYS_setreuid","","",N,N],[17,"SYS_setregid","","",N,N],[17,"SYS_getgroups","","",N,N],[17,"SYS_setgroups","","",N,N],[17,"SYS_setresuid","","",N,N],[17,"SYS_getresuid","","",N,N],[17,"SYS_setresgid","","",N,N],[17,"SYS_getresgid","","",N,N],[17,"SYS_getpgid","","",N,N],[17,"SYS_setfsuid","","",N,N],[17,"SYS_setfsgid","","",N,N],[17,"SYS_getsid","","",N,N],[17,"SYS_capget","","",N,N],[17,"SYS_capset","","",N,N],[17,"SYS_rt_sigpending","","",N,N],[17,"SYS_rt_sigtimedwait","","",N,N],[17,"SYS_rt_sigqueueinfo","","",N,N],[17,"SYS_rt_sigsuspend","","",N,N],[17,"SYS_sigaltstack","","",N,N],[17,"SYS_utime","","",N,N],[17,"SYS_mknod","","",N,N],[17,"SYS_uselib","","",N,N],[17,"SYS_personality","","",N,N],[17,"SYS_ustat","","",N,N],[17,"SYS_statfs","","",N,N],[17,"SYS_fstatfs","","",N,N],[17,"SYS_sysfs","","",N,N],[17,"SYS_getpriority","","",N,N],[17,"SYS_setpriority","","",N,N],[17,"SYS_sched_setparam","","",N,N],[17,"SYS_sched_getparam","","",N,N],[17,"SYS_sched_setscheduler","","",N,N],[17,"SYS_sched_getscheduler","","",N,N],[17,"SYS_sched_get_priority_max","","",N,N],[17,"SYS_sched_get_priority_min","","",N,N],[17,"SYS_sched_rr_get_interval","","",N,N],[17,"SYS_mlock","","",N,N],[17,"SYS_munlock","","",N,N],[17,"SYS_mlockall","","",N,N],[17,"SYS_munlockall","","",N,N],[17,"SYS_vhangup","","",N,N],[17,"SYS_modify_ldt","","",N,N],[17,"SYS_pivot_root","","",N,N],[17,"SYS__sysctl","","",N,N],[17,"SYS_prctl","","",N,N],[17,"SYS_arch_prctl","","",N,N],[17,"SYS_adjtimex","","",N,N],[17,"SYS_setrlimit","","",N,N],[17,"SYS_chroot","","",N,N],[17,"SYS_sync","","",N,N],[17,"SYS_acct","","",N,N],[17,"SYS_settimeofday","","",N,N],[17,"SYS_mount","","",N,N],[17,"SYS_umount2","","",N,N],[17,"SYS_swapon","","",N,N],[17,"SYS_swapoff","","",N,N],[17,"SYS_reboot","","",N,N],[17,"SYS_sethostname","","",N,N],[17,"SYS_setdomainname","","",N,N],[17,"SYS_iopl","","",N,N],[17,"SYS_ioperm","","",N,N],[17,"SYS_create_module","","",N,N],[17,"SYS_init_module","","",N,N],[17,"SYS_delete_module","","",N,N],[17,"SYS_get_kernel_syms","","",N,N],[17,"SYS_query_module","","",N,N],[17,"SYS_quotactl","","",N,N],[17,"SYS_nfsservctl","","",N,N],[17,"SYS_getpmsg","","",N,N],[17,"SYS_putpmsg","","",N,N],[17,"SYS_afs_syscall","","",N,N],[17,"SYS_tuxcall","","",N,N],[17,"SYS_security","","",N,N],[17,"SYS_gettid","","",N,N],[17,"SYS_readahead","","",N,N],[17,"SYS_setxattr","","",N,N],[17,"SYS_lsetxattr","","",N,N],[17,"SYS_fsetxattr","","",N,N],[17,"SYS_getxattr","","",N,N],[17,"SYS_lgetxattr","","",N,N],[17,"SYS_fgetxattr","","",N,N],[17,"SYS_listxattr","","",N,N],[17,"SYS_llistxattr","","",N,N],[17,"SYS_flistxattr","","",N,N],[17,"SYS_removexattr","","",N,N],[17,"SYS_lremovexattr","","",N,N],[17,"SYS_fremovexattr","","",N,N],[17,"SYS_tkill","","",N,N],[17,"SYS_time","","",N,N],[17,"SYS_futex","","",N,N],[17,"SYS_sched_setaffinity","","",N,N],[17,"SYS_sched_getaffinity","","",N,N],[17,"SYS_set_thread_area","","",N,N],[17,"SYS_io_setup","","",N,N],[17,"SYS_io_destroy","","",N,N],[17,"SYS_io_getevents","","",N,N],[17,"SYS_io_submit","","",N,N],[17,"SYS_io_cancel","","",N,N],[17,"SYS_get_thread_area","","",N,N],[17,"SYS_lookup_dcookie","","",N,N],[17,"SYS_epoll_create","","",N,N],[17,"SYS_epoll_ctl_old","","",N,N],[17,"SYS_epoll_wait_old","","",N,N],[17,"SYS_remap_file_pages","","",N,N],[17,"SYS_getdents64","","",N,N],[17,"SYS_set_tid_address","","",N,N],[17,"SYS_restart_syscall","","",N,N],[17,"SYS_semtimedop","","",N,N],[17,"SYS_fadvise64","","",N,N],[17,"SYS_timer_create","","",N,N],[17,"SYS_timer_settime","","",N,N],[17,"SYS_timer_gettime","","",N,N],[17,"SYS_timer_getoverrun","","",N,N],[17,"SYS_timer_delete","","",N,N],[17,"SYS_clock_settime","","",N,N],[17,"SYS_clock_gettime","","",N,N],[17,"SYS_clock_getres","","",N,N],[17,"SYS_clock_nanosleep","","",N,N],[17,"SYS_exit_group","","",N,N],[17,"SYS_epoll_wait","","",N,N],[17,"SYS_epoll_ctl","","",N,N],[17,"SYS_tgkill","","",N,N],[17,"SYS_utimes","","",N,N],[17,"SYS_vserver","","",N,N],[17,"SYS_mbind","","",N,N],[17,"SYS_set_mempolicy","","",N,N],[17,"SYS_get_mempolicy","","",N,N],[17,"SYS_mq_open","","",N,N],[17,"SYS_mq_unlink","","",N,N],[17,"SYS_mq_timedsend","","",N,N],[17,"SYS_mq_timedreceive","","",N,N],[17,"SYS_mq_notify","","",N,N],[17,"SYS_mq_getsetattr","","",N,N],[17,"SYS_kexec_load","","",N,N],[17,"SYS_waitid","","",N,N],[17,"SYS_add_key","","",N,N],[17,"SYS_request_key","","",N,N],[17,"SYS_keyctl","","",N,N],[17,"SYS_ioprio_set","","",N,N],[17,"SYS_ioprio_get","","",N,N],[17,"SYS_inotify_init","","",N,N],[17,"SYS_inotify_add_watch","","",N,N],[17,"SYS_inotify_rm_watch","","",N,N],[17,"SYS_migrate_pages","","",N,N],[17,"SYS_openat","","",N,N],[17,"SYS_mkdirat","","",N,N],[17,"SYS_mknodat","","",N,N],[17,"SYS_fchownat","","",N,N],[17,"SYS_futimesat","","",N,N],[17,"SYS_newfstatat","","",N,N],[17,"SYS_unlinkat","","",N,N],[17,"SYS_renameat","","",N,N],[17,"SYS_linkat","","",N,N],[17,"SYS_symlinkat","","",N,N],[17,"SYS_readlinkat","","",N,N],[17,"SYS_fchmodat","","",N,N],[17,"SYS_faccessat","","",N,N],[17,"SYS_pselect6","","",N,N],[17,"SYS_ppoll","","",N,N],[17,"SYS_unshare","","",N,N],[17,"SYS_set_robust_list","","",N,N],[17,"SYS_get_robust_list","","",N,N],[17,"SYS_splice","","",N,N],[17,"SYS_tee","","",N,N],[17,"SYS_sync_file_range","","",N,N],[17,"SYS_vmsplice","","",N,N],[17,"SYS_move_pages","","",N,N],[17,"SYS_utimensat","","",N,N],[17,"SYS_epoll_pwait","","",N,N],[17,"SYS_signalfd","","",N,N],[17,"SYS_timerfd_create","","",N,N],[17,"SYS_eventfd","","",N,N],[17,"SYS_fallocate","","",N,N],[17,"SYS_timerfd_settime","","",N,N],[17,"SYS_timerfd_gettime","","",N,N],[17,"SYS_accept4","","",N,N],[17,"SYS_signalfd4","","",N,N],[17,"SYS_eventfd2","","",N,N],[17,"SYS_epoll_create1","","",N,N],[17,"SYS_dup3","","",N,N],[17,"SYS_pipe2","","",N,N],[17,"SYS_inotify_init1","","",N,N],[17,"SYS_preadv","","",N,N],[17,"SYS_pwritev","","",N,N],[17,"SYS_rt_tgsigqueueinfo","","",N,N],[17,"SYS_perf_event_open","","",N,N],[17,"SYS_recvmmsg","","",N,N],[17,"SYS_fanotify_init","","",N,N],[17,"SYS_fanotify_mark","","",N,N],[17,"SYS_prlimit64","","",N,N],[17,"SYS_name_to_handle_at","","",N,N],[17,"SYS_open_by_handle_at","","",N,N],[17,"SYS_clock_adjtime","","",N,N],[17,"SYS_syncfs","","",N,N],[17,"SYS_sendmmsg","","",N,N],[17,"SYS_setns","","",N,N],[17,"SYS_getcpu","","",N,N],[17,"SYS_process_vm_readv","","",N,N],[17,"SYS_process_vm_writev","","",N,N],[17,"SYS_kcmp","","",N,N],[17,"SYS_finit_module","","",N,N],[17,"SYS_sched_setattr","","",N,N],[17,"SYS_sched_getattr","","",N,N],[17,"SYS_renameat2","","",N,N],[17,"SYS_seccomp","","",N,N],[17,"SYS_getrandom","","",N,N],[17,"SYS_memfd_create","","",N,N],[17,"SYS_kexec_file_load","","",N,N],[17,"SYS_bpf","","",N,N],[17,"SYS_execveat","","",N,N],[17,"SYS_userfaultfd","","",N,N],[17,"SYS_membarrier","","",N,N],[17,"SYS_mlock2","","",N,N],[17,"SYS_copy_file_range","","",N,N],[17,"SYS_preadv2","","",N,N],[17,"SYS_pwritev2","","",N,N],[17,"SYS_pkey_mprotect","","",N,N],[17,"SYS_pkey_alloc","","",N,N],[17,"SYS_pkey_free","","",N,N]],"paths":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"sigevent"],[3,"in_pktinfo"],[3,"ifaddrs"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"passwd"],[3,"spwd"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"itimerspec"],[3,"mq_attr"],[3,"if_nameindex"],[3,"msginfo"],[3,"mmsghdr"],[3,"sembuf"],[3,"input_event"],[3,"input_id"],[3,"input_absinfo"],[3,"input_keymap_entry"],[3,"input_mask"],[3,"ff_replay"],[3,"ff_trigger"],[3,"ff_envelope"],[3,"ff_constant_effect"],[3,"ff_ramp_effect"],[3,"ff_condition_effect"],[3,"ff_periodic_effect"],[3,"ff_rumble_effect"],[3,"ff_effect"],[3,"dl_phdr_info"],[3,"Elf32_Phdr"],[3,"Elf64_Phdr"],[3,"ucred"],[3,"mntent"],[3,"genlmsghdr"],[3,"in6_pktinfo"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"utmpx"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"statfs"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"flock"],[3,"mallinfo"],[3,"nlmsghdr"],[3,"nlmsgerr"],[3,"nl_pktinfo"],[3,"nl_mmap_req"],[3,"nl_mmap_hdr"],[3,"nlattr"],[3,"rtentry"],[3,"sysinfo"],[3,"msqid_ds"],[3,"stat"],[3,"stat64"],[3,"statfs64"],[3,"statvfs64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"user_fpregs_struct"],[3,"user_regs_struct"],[3,"user"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"termios2"],[3,"statvfs"],[3,"pthread_attr_t"],[3,"sigset_t"],[3,"sem_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_cond_t"],[3,"pthread_condattr_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"posix_spawn_file_actions_t"],[3,"posix_spawnattr_t"],[3,"fd_set"],[3,"in6_rtmsg"]]};
searchIndex["num_cpus"]={"doc":"A crate with utilities to determine the number of CPUs available on the current system.","items":[[5,"get","num_cpus","Returns the number of available CPUs of the current system.",N,[[],["usize"]]],[5,"get_physical","","Returns the number of physical cores of the current system.",N,[[],["usize"]]]],"paths":[]};
searchIndex["slab"]={"doc":"Pre-allocated storage for a uniform data type.","items":[[3,"Slab","slab","Pre-allocated storage for a uniform data type",N,N],[3,"VacantEntry","","A handle to an vacant entry in a `Slab`.",N,N],[3,"Iter","","An iterator over the values stored in the `Slab`",N,N],[3,"IterMut","","A mutable iterator over the values stored in the `Slab`",N,N],[11,"clone","","",0,[[["self"]],["slab"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"new","","Construct a new, empty `Slab`.",0,[[],["slab"]]],[11,"with_capacity","","Construct a new, empty `Slab` with the specified capacity.",0,[[["usize"]],["slab"]]],[11,"capacity","","Returns the number of values the slab can store without reallocating.",0,[[["self"]],["usize"]]],[11,"reserve","","Reserves capacity for at least `additional` more values to be stored without allocating.",0,[[["self"],["usize"]]]],[11,"reserve_exact","","Reserves the minimum capacity required to store exactly `additional` more values.",0,[[["self"],["usize"]]]],[11,"shrink_to_fit","","Shrinks the capacity of the slab as much as possible.",0,[[["self"]]]],[11,"clear","","Clear the slab of all values",0,[[["self"]]]],[11,"len","","Returns the number of stored values",0,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if no values are stored in the slab",0,[[["self"]],["bool"]]],[11,"iter","","Returns an iterator over the slab",0,[[["self"]],["iter"]]],[11,"iter_mut","","Returns an iterator that allows modifying each value.",0,[[["self"]],["itermut"]]],[11,"get","","Returns a reference to the value associated with the given key",0,[[["self"],["usize"]],["option"]]],[11,"get_mut","","Returns a mutable reference to the value associated with the given key",0,[[["self"],["usize"]],["option"]]],[11,"get_unchecked","","Returns a reference to the value associated with the given key without performing bounds checking.",0,[[["self"],["usize"]],["t"]]],[11,"get_unchecked_mut","","Returns a mutable reference to the value associated with the given key without performing bounds checking.",0,[[["self"],["usize"]],["t"]]],[11,"insert","","Insert a value in the slab, returning key assigned to the value",0,[[["self"],["t"]],["usize"]]],[11,"vacant_entry","","Returns a handle to a vacant entry allowing for further manipulation.",0,[[["self"]],["vacantentry"]]],[11,"remove","","Removes and returns the value associated with the given key.",0,[[["self"],["usize"]],["t"]]],[11,"contains","","Returns `true` if a value is associated with the given key.",0,[[["self"],["usize"]],["bool"]]],[11,"retain","","Retain only the elements specified by the predicate.",0,[[["self"],["f"]]]],[11,"index","","",0,[[["self"],["usize"]],["t"]]],[11,"index_mut","","",0,[[["self"],["usize"]],["t"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"insert","","Insert a value in the entry, returning a mutable reference to the value.",1,[[["self"],["t"]],["t"]]],[11,"key","","Return the key associated with this entry.",1,[[["self"]],["usize"]]],[11,"next","","",2,[[["self"]],["option"]]],[11,"next","","",3,[[["self"]],["option"]]]],"paths":[[3,"Slab"],[3,"VacantEntry"],[3,"Iter"],[3,"IterMut"]]};
initSearch(searchIndex);
